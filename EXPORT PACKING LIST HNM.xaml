<Activity mc:Ignorable="sap sap2010" x:Class="PrintPL" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:ee="clr-namespace:ExcelCustomActivities.Excel;assembly=ExcelCustomActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="FileName" Type="InArgument(x:String)" />
    <x:Property Name="TimeStamp" Type="InArgument(x:String)" />
    <x:Property Name="EndStatus" Type="InOutArgument(x:String)" />
    <x:Property Name="EndMessage" Type="InOutArgument(x:String)" />
    <x:Property Name="RobotName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>987,747</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>test_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>ExcelCustomActivities.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>ExcelCustomActivities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="EXPORT PACKING LIST HNM" sap:VirtualizedContainerService.HintSize="654,642" sap2010:WorkflowViewState.IdRef="Flowchart_4">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtDataInput" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtPlData" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbInput" />
      <Variable x:TypeArguments="x:String" Name="stLastCell" />
      <Variable x:TypeArguments="x:String" Name="stLastRow" />
      <Variable x:TypeArguments="x:String" Name="stPlNo" />
      <Variable x:TypeArguments="x:String" Name="stLocation" />
      <Variable x:TypeArguments="x:Int32" Name="in32ExcelRow" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Path" />
      <Variable x:TypeArguments="x:String" Name="Path_Folder" />
      <Variable x:TypeArguments="x:String" Name="Path_Downloads" />
      <Variable x:TypeArguments="x:String" Name="Path_Template" />
      <Variable x:TypeArguments="x:Boolean" Name="Exists_File" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wb_Template" />
      <Variable x:TypeArguments="x:Boolean" Name="is_Run" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Double x:Key="Width">620</x:Double>
        <x:Double x:Key="Height">606.5</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,124.02</av:PointCollection>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID2</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,124.02</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,190.02 300,212.02</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Sq/Pre Processing" sap:VirtualizedContainerService.HintSize="863,2447" sap2010:WorkflowViewState.IdRef="Sequence_140">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="821,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT * FROM RPALIB.LIBRARY_NT WHERE Name IN ('ServerSavedFile','dirDownFile','ServerTemp')  ORDER BY UPPER(NAME) ASC</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_Path]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="821,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_Downloads]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Path.Rows(0)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_Folder]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Path.Rows(1)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_Template]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Path.Rows(2)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
        <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Get data from Excel File" sap:VirtualizedContainerService.HintSize="821,2003" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" InstanceCachePeriod="3000" Workbook="[wbInput]" WorkbookPath="[Path_Folder+left(TimeStamp,6)+&quot;\&quot;+RobotName+&quot;\Output\&quot;+FileName]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="787,1894" sap2010:WorkflowViewState.IdRef="Sequence_139">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Sq/Get Data Input" sap:VirtualizedContainerService.HintSize="745,853" sap2010:WorkflowViewState.IdRef="Sequence_138">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="stLastCell2" />
                    <Variable x:TypeArguments="x:Int32" Name="index_D" />
                    <Variable x:TypeArguments="x:String" Name="dt_out" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="B1000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move To Lat Row B" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_6" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wbInput.Getsheets(0)]" WorkBook="[wbInput]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ee:MoveVerticalActivity>
                  <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="D1000" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move To Lat Row D" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_7" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wbInput.Getsheets(0)]" WorkBook="[wbInput]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ee:MoveVerticalActivity>
                  <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_144">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[stLastRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[stLastCell.Remove(0,1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_145">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[index_D]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[convert.ToInt32(stLastCell2.Substring(1)) + 1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Comment sap:VirtualizedContainerService.HintSize="340,94" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// Write your comments in the Text property&#xA;&#xA;Chỉ lấy khoảng dữ liệu chưa có 'RESULT'" />
                  <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDataInput]" DisplayName="Read Data Input" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" Range="[&quot;B&quot; +index_D.ToString + &quot;:C&quot;+stLastRow]" SheetName="[wbInput.getsheets(0)]" UseFilter="True" />
                </Sequence>
                <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_9" Workbook="[wbInput]" />
                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtDataInput]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="745,810" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,663" sap2010:WorkflowViewState.IdRef="Sequence_155">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[row(0).ToString.Contains(&quot;OR&quot;) or row(0).ToString.Contains(&quot;IE&quot;)]" sap:VirtualizedContainerService.HintSize="653,571" sap2010:WorkflowViewState.IdRef="If_67">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_157">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_157">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[is_Run]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,414" sap2010:WorkflowViewState.IdRef="Sequence_156">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_155">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[EndMessage]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["Robot can't detect the order number, please check file template again."]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_156">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[EndStatus]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">ERROR</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_158">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[is_Run]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_2" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
      </Sequence>
      <FlowStep.Next>
        <FlowDecision x:Name="__ReferenceID1" Condition="[is_Run]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">260.5,212.02</av:Point>
              <av:Size x:Key="ShapeSize">79,87</av:Size>
              <av:PointCollection x:Key="TrueConnector">260.5,255.52 200,255.52 200,396</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID0">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">100,396</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Sq/Main Process" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_154">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Get data from Excel File" sap:VirtualizedContainerService.HintSize="2170,4384" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_12" InstanceCachePeriod="3000" Workbook="[wbInput]" WorkbookPath="[Path_Folder+left(TimeStamp,6)+&quot;\&quot;+RobotName+&quot;\Output\&quot;+FileName]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="2136,4275" sap2010:WorkflowViewState.IdRef="Sequence_153">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtDataInput]" DisplayName="For each row in Data Input" sap:VirtualizedContainerService.HintSize="2094,4084" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="2044,3936" sap2010:WorkflowViewState.IdRef="Sequence_152">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="last_ColD" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="2002,62" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[row(0).ToString]" />
                                <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="D10000" ClipboardCopyFlg="False" CurrentCell="[last_ColD]" DisplayName="Get last col D" sap:VirtualizedContainerService.HintSize="2002,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_8" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wbInput.GetSheets(0)]" WorkBook="[wbInput]" />
                                <Assign sap:VirtualizedContainerService.HintSize="2002,60" sap2010:WorkflowViewState.IdRef="Assign_146">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[in32ExcelRow]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(last_ColD.Substring(1)) + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Sequence DisplayName="Sq/Get Requied Info" sap:VirtualizedContainerService.HintSize="2002,252" sap2010:WorkflowViewState.IdRef="Sequence_141">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_147">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[stPlNo]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[row(0).ToString.Trim()]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_148">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[stLocation]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[row(1).ToString.Trim()]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <If Condition="[stPlNo=nothing]" sap:VirtualizedContainerService.HintSize="2002,3166" sap2010:WorkflowViewState.IdRef="If_66">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="1857,3017" sap2010:WorkflowViewState.IdRef="Sequence_151">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="dt_out" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtPlData]" DisplayName="Get PL Data" sap:VirtualizedContainerService.HintSize="1815,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_11" ProviderName="System.Data.Odbc" Sql="[&quot;(SELECT INVN6P, DK1C6P, DK2C6P, Trim(FL1I39) || ' ' || Trim(FL2I39) AS CustName, Trim(CA1A39) || ' ' || Trim(CA2A39) || ' ' || Trim(CA3A39) AS CustAdd, Trim(FN1I61)|| ' ' || Trim(FN2I61) AS CneeName, Trim(DL1A61) || ' ' || Trim(DL2A61) || ' ' || Trim(DL3A61) AS CneeAdd, CORN6P, ORDN6P, PKIN6P, WCFN6P, WCTN6P, CAST(OTNW6N AS DOUBLE) AS NW, CAST(OTGW6N AS DOUBLE) AS GW, CAST(OTLV6N AS DOUBLE) AS BoxLength, CAST(OTWV6N AS DOUBLE) AS BoxWidth, CAST(OTHV6N AS DOUBLE) AS BoxHeight, OSBN6P, ITMC6P, IT1IA0, IT2IA0, IT3IA0, ID1IA0, ID2IA0, ID3IA0, ID4IA0, ID5IA0, ID6IA0, ID7IA0, ID8IA0, CAST(LNGV6P AS DOUBLE) AS LNGV6P, LUNC6P, CLRC6P, PCKQ6P, QUTC6P,STLN5Q,CCNN5C&quot;+&#xA;system.Environment.NewLine+&quot; From WAVEDLIB.S6P00&quot; +&#xA;system.Environment.NewLine+&quot; INNER JOIN WAVEDLIB.S6100 ON DK1C6P || DK2C6P  =  DK1C61 || DK2C61&quot;+&#xA;system.Environment.NewLine+&quot; INNER Join WAVEDLIB.S3900 On DK1C61 = CLNC39&quot;+&#xA;system.Environment.NewLine+&quot; INNER JOIN WAVEDLIB.FA000 ON ITMC6P = ITMCA0&quot;+&#xA;system.Environment.NewLine+&quot; INNER JOIN WAVEDLIB.S6N00 ON PLIN6P || WCTN6P || WCFN6P || PKIN6P = PLIN6N || WCTN6N || WCFN6N || PKIN6N&quot;+&#xA;system.Environment.NewLine+&quot; LEFT JOIN WAVEDLIB.S5Q00 ON ORDN6P=ORDN5Q &quot;+&#xA;system.Environment.NewLine+&quot; LEFT JOIN WAVEDLIB.S5C00 ON ORDN6P=ORDN5C&quot;+&#xA;system.Environment.NewLine+&quot; Where INVN6P='&quot;+stPlNo+&quot;'&quot;+&#xA;system.Environment.NewLine+&quot; ORDER BY ORDN6P, PKIN6P, WCFN6P, OSBN6P, LNGV6P, CLRC6P)&quot;+&#xA;system.Environment.NewLine+&quot; UNION all&quot;+&#xA;system.Environment.NewLine+&quot; (SELECT '&quot;+stPlNo+&quot;'&quot;+&#xA;system.Environment.NewLine+&quot; AS INVN6P, '' AS DK1C6P, '' AS DK2C6P, '' AS CUSTNAME, '' AS CustAdd, '' AS CneeName, '' AS CneeAdd,CORN6P, ORDN5A AS ORDN6P, 'ZCOM' AS PKIN6P, 0 AS WCFN6P, 0 AS WCTN6P, 0 AS NW, 0 AS GW, 0 AS BoxLength, 0 AS BoxWidth, 0 AS BoxHeight, 0 as OSBN6P, 'COMMENT'||'_' || OCMN5A AS ITMC6P,TRIM(OC1X5A) || ' ' || TRIM(OC2X5A)  AS IT1IA0,TRIM(OC3X5A) || ' ' || TRIM(OC4X5A) AS IT2IA0,'' AS IT3IA0, '' AS ID1IA0, '' AS ID2IA0, '' AS ID3IA0, '' AS ID4IA0, '' AS ID5IA0, '' AS ID6IA0, '' AS ID7IA0, '' AS ID8IA0, 0 AS LNGV6P, '' AS LUNC6P, '' AS CLRC6P, 0 AS PCKQ6P, '' AS QUTC6P,'' STLN5Q,'' CCNN5C&quot;+&#xA;system.Environment.NewLine+&quot; From WAVEDLIB.S5A00&quot;+&#xA;system.Environment.NewLine+&quot; INNER JOIN WAVEDLIB.S6P00 ON ORDN5A=ORDN6P&quot;+&#xA;system.Environment.NewLine+&quot; WHERE ORDN5A IN (SELECT ORDN6P FROM WAVEDLIB.S6P00 WHERE INVN6P='&quot;+stPlNo+&quot;')&quot;+&#xA;system.Environment.NewLine+&quot; and (OF2F5A='1' OR OF3F5A='1' OR OF4F5A='1' OR OF6F5A='1' OR OF7F5A='1' OR OF8F5A='1' OR OFBF5A ='1')&quot;+&#xA;system.Environment.NewLine+&quot; GROUP BY INVN6P, CORN6P,ORDN5A,OCMN5A,OF1F5A,OF2F5A,OF3F5A,OF4F5A,OF5F5A,OF6F5A,OF7F5A,OF8F5A,OF9F5A,OFAF5A,OFBF5A,OFDF5A,OC1X5A,OC2X5A,OC3X5A,OC4X5A)&quot;]" ConnectionString="Dsn=WAVEDLIB_HN;uid=robot;pwd=Password">
                                        <ui:ExecuteQuery.Parameters>
                                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                        </ui:ExecuteQuery.Parameters>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExecuteQuery>
                                      <If Condition="[dtPlData.Rows.Count=0]" DisplayName="If no data" sap:VirtualizedContainerService.HintSize="1815,2797" sap2010:WorkflowViewState.IdRef="If_65">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence DisplayName="Sq/" sap:VirtualizedContainerService.HintSize="376,379" sap2010:WorkflowViewState.IdRef="Sequence_142">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_149">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[EndStatus]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">ERROR</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_150">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[EndMessage]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">There is no data</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteCell Cell="[&quot;D&quot;+in32ExcelRow.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="[wbInput.GetSheets(0)]" Text="There is no data" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Create file excel" sap:VirtualizedContainerService.HintSize="1394,2648" sap2010:WorkflowViewState.IdRef="Sequence_150">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch DisplayName="Try Catch Excel Print PL" sap:VirtualizedContainerService.HintSize="1352,842" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <TryCatch.Try>
                                                <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Excel Print PL" sap:VirtualizedContainerService.HintSize="434,610" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" InstanceCachePeriod="3000" Workbook="[wb_Template]" WorkbookPath="[Path_Template+&quot;PackingList HNM.xlsm&quot;]">
                                                  <ui:ExcelApplicationScope.Body>
                                                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                      </ActivityAction.Argument>
                                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,501" sap2010:WorkflowViewState.IdRef="Sequence_143">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_1" Range="A3:AK100000" SheetName="DETAIL" ShiftCells="False" ShiftOption="ShiftUp" />
                                                        <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_2" Range="A3:AK100000" SheetName="DATA" ShiftCells="False" ShiftOption="ShiftUp" />
                                                        <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtPlData]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="DETAIL" StartingCell="A3" />
                                                        <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_4" MacroName="CopyPKL" />
                                                        <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_10" Workbook="[wb_Template]" />
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </ui:ExcelApplicationScope.Body>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:ExcelApplicationScope>
                                              </TryCatch.Try>
                                              <TryCatch.Catches>
                                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="438,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                    </ActivityAction.Argument>
                                                  </ActivityAction>
                                                </Catch>
                                              </TryCatch.Catches>
                                            </TryCatch>
                                            <Sequence DisplayName="Move File" sap:VirtualizedContainerService.HintSize="1352,1674" sap2010:WorkflowViewState.IdRef="Sequence_149">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:PathExists DisplayName="Path Exists" Exists="[Exists_File]" sap:VirtualizedContainerService.HintSize="1310,90" sap2010:WorkflowViewState.IdRef="PathExists_8" Path="D:\PL.xlsx" PathType="File" />
                                              <If Condition="[Exists_File = True]" DisplayName="If Check PL.xlsx" sap:VirtualizedContainerService.HintSize="1310,1452" sap2010:WorkflowViewState.IdRef="If_64">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence DisplayName="Write OK" sap:VirtualizedContainerService.HintSize="889,1303" sap2010:WorkflowViewState.IdRef="Sequence_147">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="x:Boolean" Name="Exists_Folder" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:PathExists DisplayName="Path Exists" Exists="[Exists_File]" sap:VirtualizedContainerService.HintSize="847,90" sap2010:WorkflowViewState.IdRef="PathExists_9" Path="[&quot;\\10.247.194.230\ykkhnf_data$\DEPARTMENT\OPERATION\Logistic Control\Import-Export\1. EXPORT DOCUMENT\2. INVOICE + PKL + FILE KHAI HQ\&quot; + DateAndTime.Now.ToString(&quot;MM.yyyy&quot;) + &quot;\&quot; + stPlNo.ToString  + &quot;\&quot; + stPlNo.ToString + &quot; PL.xlsx&quot;]" PathType="File" />
                                                    <ui:PathExists DisplayName="Path Exists" Exists="[Exists_Folder]" sap:VirtualizedContainerService.HintSize="847,90" sap2010:WorkflowViewState.IdRef="PathExists_10" Path="[&quot;\\10.247.194.230\ykkhnf_data$\DEPARTMENT\OPERATION\Logistic Control\Import-Export\1. EXPORT DOCUMENT\2. INVOICE + PKL + FILE KHAI HQ\&quot; + DateAndTime.Now.ToString(&quot;MM.yyyy&quot;) + &quot;\&quot; + stPlNo.ToString  + &quot;\&quot;]" PathType="Folder" />
                                                    <If Condition="[Exists_Folder]" sap:VirtualizedContainerService.HintSize="847,321" sap2010:WorkflowViewState.IdRef="If_62">
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="376,172" sap2010:WorkflowViewState.IdRef="Sequence_144">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[&quot;\\10.247.194.230\ykkhnf_data$\DEPARTMENT\OPERATION\Logistic Control\Import-Export\1. EXPORT DOCUMENT\2. INVOICE + PKL + FILE KHAI HQ\&quot; + DateAndTime.Now.ToString(&quot;MM.yyyy&quot;) + &quot;\&quot; + stPlNo.ToString  + &quot;\&quot;]" />
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                    <If Condition="[Exists_File = True]" DisplayName="If Check PINo" sap:VirtualizedContainerService.HintSize="847,590" sap2010:WorkflowViewState.IdRef="If_63">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence DisplayName="Write Error" sap:VirtualizedContainerService.HintSize="376,441" sap2010:WorkflowViewState.IdRef="Sequence_145">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:Delete ContinueOnError="True" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delete_5" Path="D:\PL.xlsx" />
                                                          <ui:ExcelWriteCell Cell="[&quot;D&quot;+in32ExcelRow.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="[wbInput.GetSheets(0)]" Text="ID code existed in destination folder" />
                                                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_151">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[EndStatus]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">ERROR</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_152">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[EndMessage]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">ID code existed in destination folder</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence DisplayName="Write OK" sap:VirtualizedContainerService.HintSize="426,379" sap2010:WorkflowViewState.IdRef="Sequence_146">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:MoveFile ContinueOnError="{x:Null}" Destination="[&quot;\\10.247.194.230\ykkhnf_data$\DEPARTMENT\OPERATION\Logistic Control\Import-Export\1. EXPORT DOCUMENT\2. INVOICE + PKL + FILE KHAI HQ\&quot; + DateAndTime.Now.ToString(&quot;MM.yyyy&quot;) + &quot;\&quot; + stPlNo.ToString  + &quot;\&quot; + stPlNo.ToString + &quot; PL.xlsx&quot;]" DisplayName="Move file" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="MoveFile_5" Overwrite="False" Path="D:\PL.xlsx">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:MoveFile>
                                                          <ui:ExcelWriteCell Cell="[&quot;D&quot;+in32ExcelRow.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="384,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="[wbInput.GetSheets(0)]" Text="OK" />
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence DisplayName="Write Error" sap:VirtualizedContainerService.HintSize="376,441" sap2010:WorkflowViewState.IdRef="Sequence_148">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:Delete ContinueOnError="True" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delete_6" Path="D:\PL.xlsx" />
                                                    <ui:ExcelWriteCell Cell="[&quot;D&quot;+in32ExcelRow.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="[wbInput.GetSheets(0)]" Text="Can not create file excel" />
                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_153">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[EndStatus]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">ERROR</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_154">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[EndMessage]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">Can not create file excel</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEachRow>
                        <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="2094,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_11" Workbook="[wbInput]" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
              </Sequence>
            </FlowStep>
          </FlowDecision.True>
        </FlowDecision>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
  </Flowchart>
</Activity>