<Activity mc:Ignorable="sap sap2010" x:Class="MainError" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="TimeStart_ErrorLog" Type="InArgument(x:String)" />
    <x:Property Name="RobotName" Type="InArgument(x:String)" />
    <x:Property Name="Mail_PIC" Type="InArgument(x:String)" />
    <x:Property Name="Mail_Server" Type="InArgument(x:String)" />
    <x:Property Name="Mail_Email" Type="InArgument(x:String)" />
    <x:Property Name="Mail_Password" Type="InArgument(x:String)" />
    <x:Property Name="exception" Type="InArgument(s:Exception)" />
    <x:Property Name="Order_Number" Type="InArgument(x:String)" />
    <x:Property Name="IP_Address" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>736,1020</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>MainError_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Microsoft.Activities.Expressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="41">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="MainError" sap:VirtualizedContainerService.HintSize="746,955" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Result_Process" />
      <Variable x:TypeArguments="s:DateTime" Name="date_first" />
      <Variable x:TypeArguments="s:DateTime" Name="date_end" />
      <Variable x:TypeArguments="x:Boolean" Name="sendMailFlag" />
      <Variable x:TypeArguments="x:String" Name="errMess" />
      <Variable x:TypeArguments="x:String" Name="stSQL" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_PIC" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="704,51" sap2010:WorkflowViewState.IdRef="CommentOut_8">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,252" sap2010:WorkflowViewState.IdRef="Sequence_52">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[errMess]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">File H:\Robotics\AZBILL REPORT\AzbillReport-R2- 202108 F2&amp;F3.xlsx is read only and can not be overwritten. It has been saved as file H:\Robotics\AZBILL REPORT\AzbillReport-R2- 202108 F2&amp;F3(44).xlsx</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[RobotName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">DAILY AZBILL REPORT</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[Order_Number]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">1</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <Assign sap:VirtualizedContainerService.HintSize="704,60" sap2010:WorkflowViewState.IdRef="Assign_27">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[errMess]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
      </Assign.Value>
    </Assign>
    <Flowchart sap:VirtualizedContainerService.HintSize="704,672" sap2010:WorkflowViewState.IdRef="Flowchart_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
          <av:Size x:Key="ShapeSize">60,75</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,117</av:PointCollection>
          <x:Double x:Key="Width">670</x:Double>
          <x:Double x:Key="Height">635.5</x:Double>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Flowchart.StartNode>
        <x:Reference>__ReferenceID5</x:Reference>
      </Flowchart.StartNode>
      <FlowDecision x:Name="__ReferenceID2" Condition="[(errMess.Contains(&quot; is read only and can not be overwritten. It has been saved as file &quot;) And &#xA;errMess.IndexOf(&quot;File &quot;) = 0) Or &#xA;(errMess.Contains(&quot;. Possible reasons: the file is corrupt, the file is already used by another process or you don't have permissions to open the file. &quot;) And &#xA;errMess.IndexOf(&quot;Failed opening the Excel file &quot;) = 0) Or &#xA;(errMess.Contains(&quot;' because it is being used by another process.&quot;) And &#xA;errMess.IndexOf(&quot;The process cannot access the file '&quot;) = 0)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">260.5,226.5</av:Point>
            <av:Size x:Key="ShapeSize">79,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">260.5,270 110,270 110,397</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">339.5,270 530,270 530,296.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <FlowDecision.True>
          <FlowStep x:Name="__ReferenceID1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">10,397</av:Point>
                <av:Size x:Key="ShapeSize">200,66</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">110,463 110,493 300,493 300,554.5</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Send mail to PIC of FC" sap:VirtualizedContainerService.HintSize="1437,3275" sap2010:WorkflowViewState.IdRef="Sequence_27">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="specialReceiver" />
                <Variable x:TypeArguments="x:String" Name="mail_CC" />
                <Variable x:TypeArguments="x:String" Name="mail_Err" />
                <Variable x:TypeArguments="x:String" Name="mailContent" />
                <Variable x:TypeArguments="x:String" Name="stContent" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="Get mail to &amp; mail CC from db robot_schedule_nt" DisplayName="GET EMAIL TO, CC FROM ROBOT_SCHEDULE_NT" sap:VirtualizedContainerService.HintSize="1395,1091" sap2010:WorkflowViewState.IdRef="Sequence_33">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:String[]" Name="stAttColection" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dtMail" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_Address" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get mail PIC" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT VALUE FROM RPALIB.LIBRARY_NT WHERE NAME = 'PIC'</InArgument>
                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_PIC]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[RobotName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[RobotName.ToUpper]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get Email Address" sap:VirtualizedContainerService.HintSize="484,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="Query">["SELECT EMAIL_TO,EMAIL_CC,EMAIL_ERR FROM RPALIB.robot_schedule_nt WHERE NAME='"+robotName+"' AND ORDER_NUMBER=" + Order_Number]</InArgument>
                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_Address]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[specialReceiver]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[dt_Address.Rows(0)("EMAIL_TO").ToString.Trim]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[mail_CC]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[dt_Address.Rows(0)("EMAIL_CC").ToString.Trim]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[mail_Err]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[dt_Address.Rows(0)("EMAIL_ERR").ToString.Trim]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
                <If Condition="[specialReceiver.IndexOf(&quot;\\ykkvnm.com\vnmfs\YKKDATA\&quot;) = 0]" DisplayName="If Email_To is FILE" sap:VirtualizedContainerService.HintSize="484,52" sap2010:WorkflowViewState.IdRef="If_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:ReadTextFile Content="[specialReceiver]" DisplayName="Read Text File" FileName="[specialReceiver]" sap:VirtualizedContainerService.HintSize="384,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                  </If.Then>
                </If>
                <If Condition="[mail_CC.IndexOf(&quot;\\ykkvnm.com\vnmfs\YKKDATA\&quot;) = 0]" DisplayName="If Email_CC is FILE" sap:VirtualizedContainerService.HintSize="484,270" sap2010:WorkflowViewState.IdRef="If_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:ReadTextFile Content="[mail_CC]" DisplayName="Read Text File" FileName="[mail_CC]" sap:VirtualizedContainerService.HintSize="384,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
                  </If.Then>
                </If>
              </Sequence>
              <ui:AppendLine DisplayName="Append Line" FileName="[&quot;C:\&quot; + DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;_SCH_ERR.txt&quot;]" sap:VirtualizedContainerService.HintSize="1395,134" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="[DateTime.Now.ToString +&quot;: &quot; + Environment.NewLine + errMess]" UseDefaultEncoding="False" />
              <Sequence DisplayName="Check file opening" sap:VirtualizedContainerService.HintSize="1395,1878" sap2010:WorkflowViewState.IdRef="Sequence_34">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="fileName" />
                  <Variable x:TypeArguments="x:String" Name="stUser" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="1353,64" sap2010:WorkflowViewState.IdRef="Assign_28">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[errMess.Replace("Failed opening the Excel file ","").
Replace(". Possible reasons: the file is corrupt, the file is already used by another process or you don't have permissions to open the file.","").
Replace("The process cannot access the file '","").
Replace("' because it is being used by another process.","").
Replace(" is read only and can not be overwritten.","").
Replace("File ","").Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[fileName.IndexOf(&quot;It has been saved as file &quot;) &gt; 0]" sap:VirtualizedContainerService.HintSize="1353,52" sap2010:WorkflowViewState.IdRef="If_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[fileName.Substring(0,fileName.IndexOf("It has been saved as file ")).Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
                <Assign sap:VirtualizedContainerService.HintSize="1353,64" sap2010:WorkflowViewState.IdRef="Assign_20">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[stContent]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;p&gt;&lt;b&gt;Dear all,&lt;/b&gt;&lt;/p&gt;" +
"&lt;p&gt;"+errMess.Replace("read only and can not be overwritten.","&lt;b style='color:red;'&gt;read only and can not be overwritten.&lt;/b&gt;").
Replace("already used by another process or you don't have permissions","&lt;b style='color:red;'&gt;already used by another process or you don't have permissions&lt;/b&gt;").
Replace("being used by another process.","&lt;b style='color:red;'&gt;being used by another process.&lt;/b&gt;")+"&lt;/p&gt;" +
"&lt;p&gt;The funciton " + RobotName + " are &lt;b style='color:red;'&gt;locked&lt;/b&gt; by this issue" +
"&lt;/br&gt;Please close this file then &lt;b style='color:red;'&gt;confirm to &lt;A style='TEXT-DECORATION: none; COLOR: #7bc3bb' href='mailto:nt-improve-operation.vnm@ykk.com'&gt;IO Team&lt;/A&gt;&lt;/b&gt; for run this function robot &lt;b style='color:red;'&gt;again&lt;/b&gt;&lt;/p&gt;"]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1353,52" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="526,338" sap2010:WorkflowViewState.IdRef="Sequence_44">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[errMess.IndexOf(&quot;File &quot;) = 0]" sap:VirtualizedContainerService.HintSize="484,246" sap2010:WorkflowViewState.IdRef="If_11">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[errMess.Substring(5)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                      </If>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
                <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" ContinueOnError="True" DisplayName="Start Process" FileName="[fileName]" sap:VirtualizedContainerService.HintSize="1353,87" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
                <ui:GetValue ContinueOnError="True" DisplayName="Get Text 'excel.exe  File in Use'" sap:VirtualizedContainerService.HintSize="1353,68" sap2010:WorkflowViewState.IdRef="GetValue_1">
                  <ui:GetValue.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="44838ed1-184d-440d-b2d0-be8cb2d54a8f" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='File in Use' /&gt;&lt;ctrl name='by *' role='text' /&gt;" TimeoutMS="5000">
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:GetValue.Target>
                  <ui:GetValue.Value>
                    <OutArgument x:TypeArguments="x:String">[stUser]</OutArgument>
                  </ui:GetValue.Value>
                </ui:GetValue>
                <If Condition="[not String.IsNullOrEmpty(stUser)]" DisplayName="If File in use" sap:VirtualizedContainerService.HintSize="1353,1067" sap2010:WorkflowViewState.IdRef="If_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="887,901" sap2010:WorkflowViewState.IdRef="Sequence_39">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="845,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[stUser]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[stUser.Replace("by '","").Replace("'.","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName=" GET SCREENSHOT WHEN ERROR" sap:VirtualizedContainerService.HintSize="845,68" sap2010:WorkflowViewState.IdRef="Sequence_37">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="stFileName" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[stFileName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["H:\_SCANNER\RPA\Error\"+RobotName+"_"+DateTime.Now.ToString("yyyyMMdd_hhmmss")+"_"+IP_Address+".jpg"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence DisplayName="Take Screenshot" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_35">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="ui:Image" Name="imgFile" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take Screenshot 'excel.exe  File in Use'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="TakeScreenshot_1" Screenshot="[imgFile]">
                            <ui:TakeScreenshot.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="80eba1f3-0b2c-4488-8ddb-51fe7730bb8d" InformativeScreenshot="12aa52bb30dc36a81b0789d487ff03ef" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='File in Use' /&gt;" TimeoutMS="3000">
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:TakeScreenshot.Target>
                          </ui:TakeScreenshot>
                          <ui:SaveImage DisplayName="Save image____5" FileName="[stFileName]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="SaveImage_1" Image="[imgFile]" />
                        </Sequence>
                        <Sequence DisplayName="Convert Image to binary" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_36">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="s:Byte[]" Name="image" />
                            <Variable x:TypeArguments="x:String" Name="imgStr" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Byte[]">[image]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Byte[]">[system.IO.File.ReadAllBytes(stFileName)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[imgStr]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Convert.ToBase64String(image)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[imgStr]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">["&lt;img src='data:image/jpeg;base64,"+imgStr+"'&gt;"]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[stContent]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[stContent + "&lt;p&gt;"+imgStr+"&lt;/p&gt;"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </Sequence>
                      <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Locked Funciton" sap:VirtualizedContainerService.HintSize="845,88" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1" ProviderName="System.Data.Odbc" Sql="[&quot;UPDATE RPALIB.ROBOT_SCHEDULE_NT SET Process_Status = 'Stop',MAINTENANCE_STATUS=VARCHAR_FORMAT(NOW(),'MM/DD/YYYY HH24:MI:SS') || ': File &quot;+fileName+&quot; is locked for editing by &quot;+stUser+&quot;' WHERE NAME = '&quot;+RobotName+&quot;' AND ORDER_NUMBER=&quot; + Order_Number]" ConnectionString="Driver={ISeries Access ODBC Driver};system=10.246.194.1;library=WAVEDLIB;querytimeout=0;uid=VNPRT;pwd=VNPRT">
                        <ui:ExecuteNonQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteNonQuery.Parameters>
                      </ui:ExecuteNonQuery>
                      <Sequence DisplayName="Close Excel" sap:VirtualizedContainerService.HintSize="845,68" sap2010:WorkflowViewState.IdRef="Sequence_38">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'push button  Cancel'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d2015e58-04c8-4b0a-be4b-1bd97c14564b" InformativeScreenshot="17b57e476c8f48bf54c820e28df7e053" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='File in Use' /&gt;&lt;ctrl name='Cancel' role='push button' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'Button  Close'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ec4bdd5b-4be6-4d95-9710-ec0083726197" InformativeScreenshot="a3e2f0018d471d2a4e9aac9599751bee" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*' /&gt;&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Close' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                      <If Condition="[stUser = &quot;System Robotics&quot;]" sap:VirtualizedContainerService.HintSize="845,365" sap2010:WorkflowViewState.IdRef="If_14">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="421,205" sap2010:WorkflowViewState.IdRef="Sequence_57">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send mail to RPA" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;[RPA] Robot Stop Warning: &quot; + RobotName + &quot; is read only and can not be overwritten.&quot;" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="mail_Content">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="stContent" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dt_PIC.Rows(0)(0).ToString" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="mail_CC" />
                                </InArgument>
                                <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">
                                  <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send mail to user" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;[RPA] Robot Stop Warning: &quot; + RobotName + &quot; is read only and can not be overwritten.&quot;" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="mail_Content">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="stContent" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="specialReceiver" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="mail_CC + &quot;,&quot; + dt_PIC.Rows(0)(0).ToString" />
                              </InArgument>
                              <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">
                                <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{}" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName=" GET SCREENSHOT WHEN ERROR" sap:VirtualizedContainerService.HintSize="421,907" sap2010:WorkflowViewState.IdRef="Sequence_50">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="stFileName" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="379,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[stFileName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["H:\_SCANNER\RPA\Error\"+RobotName+"_"+DateTime.Now.ToString("yyyyMMdd_hhmmss")+"_"+IP_Address+".jpg"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:WriteTextFile DisplayName="Write Text File" FileName="[&quot;H:\_SCANNER\RPA\Error\&quot;+RobotName+&quot;_&quot;+DateTime.Now.ToString(&quot;yyyyMMdd_hhmmss&quot;)+&quot;_&quot;+IP_Address+&quot;.txt&quot;]" sap:VirtualizedContainerService.HintSize="379,134" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[errMess]" />
                      <Sequence DisplayName="Take Screenshot" sap:VirtualizedContainerService.HintSize="379,68" sap2010:WorkflowViewState.IdRef="Sequence_48">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="ui:Image" Name="imgFile" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take Screenshot 'excel.exe  File in Use'" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="TakeScreenshot_2" Screenshot="[imgFile]">
                          <ui:TakeScreenshot.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="80eba1f3-0b2c-4488-8ddb-51fe7730bb8d" TimeoutMS="3000">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:TakeScreenshot.Target>
                        </ui:TakeScreenshot>
                        <ui:SaveImage DisplayName="Save image____5" FileName="[stFileName]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="SaveImage_2" Image="[imgFile]" />
                      </Sequence>
                      <Assign sap:VirtualizedContainerService.HintSize="379,64" sap2010:WorkflowViewState.IdRef="Assign_35">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[stContent]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;p&gt;&lt;b&gt;Dear Dev Team,&lt;/b&gt;&lt;/p&gt;" +
"Pls check error below: &lt;/br&gt;" +errMess + "(1)" +"&lt;/br&gt;"+ exception.ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName="Convert Image to binary" sap:VirtualizedContainerService.HintSize="379,68" sap2010:WorkflowViewState.IdRef="Sequence_49">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="s:Byte[]" Name="image" />
                          <Variable x:TypeArguments="x:String" Name="imgStr" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Byte[]">[image]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Byte[]">[system.IO.File.ReadAllBytes(stFileName)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[imgStr]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Convert.ToBase64String(image)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[imgStr]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["&lt;img src='data:image/jpeg;base64,"+imgStr+"'&gt;"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[stContent]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[stContent.Replace("(1)", "&lt;p&gt;"+imgStr+"&lt;/p&gt;")]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <Sequence DisplayName="Close Excel" sap:VirtualizedContainerService.HintSize="379,68" sap2010:WorkflowViewState.IdRef="Sequence_51">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ContinueOnError="True" DisplayName="Send Enter" sap:VirtualizedContainerService.HintSize="526,116" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="enter" KeyModifiers="None" SpecialKey="True">
                          <ui:SendHotkey.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="aeb0c918-5f4a-4d91-b5e1-a26cd2f978a8" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Excel' /&gt;" TimeoutMS="1000">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:SendHotkey.Target>
                        </ui:SendHotkey>
                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ContinueOnError="True" DisplayName="Send OK" sap:VirtualizedContainerService.HintSize="526,116" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="o" KeyModifiers="Alt" SpecialKey="True">
                          <ui:SendHotkey.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="aeb0c918-5f4a-4d91-b5e1-a26cd2f978a8" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Excel' /&gt;" TimeoutMS="1000">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:SendHotkey.Target>
                        </ui:SendHotkey>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'Button  Close'" sap:VirtualizedContainerService.HintSize="526,68" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ec4bdd5b-4be6-4d95-9710-ec0083726197" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*' /&gt;&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Close' /&gt;" TimeoutMS="1000">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                        <Sequence DisplayName="Check Document Recovery" sap:VirtualizedContainerService.HintSize="526,483" sap2010:WorkflowViewState.IdRef="Sequence_56">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Boolean" Name="recoveryFlag" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:UiElementExists DisplayName="Element Exists 'Text Excel'" Exists="[recoveryFlag]" sap:VirtualizedContainerService.HintSize="484,106" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                            <ui:UiElementExists.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="dcc8d9ea-51aa-4e78-86c3-589964643333" InformativeScreenshot="0d0d7c430ffe9d52723a0f73142480a4" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Microsoft Excel' /&gt;&lt;ctrl name='No, remove the files.  I have saved the files I need.' role='radio button' /&gt;" TimeoutMS="1000">
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:UiElementExists.Target>
                          </ui:UiElementExists>
                          <If Condition="[recoveryFlag]" sap:VirtualizedContainerService.HintSize="484,245" sap2010:WorkflowViewState.IdRef="If_13">
                            <If.Then>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'Button  OK' to remove files" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ec4bdd5b-4be6-4d95-9710-ec0083726197" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Microsoft Excel' /&gt;&lt;ctrl name='OK' role='push button' /&gt;" TimeoutMS="1000">
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                            </If.Then>
                          </If>
                        </Sequence>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Save" sap:VirtualizedContainerService.HintSize="526,68" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ec4bdd5b-4be6-4d95-9710-ec0083726197" Selector="&lt;wnd app='excel.exe' cls='NUIDialog' title='Microsoft Excel' /&gt;&lt;ctrl name='Save' role='push button' /&gt;" TimeoutMS="1000">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send mail to user" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;[RPA] Robot Stop Warning: &quot; + RobotName + &quot; the file is corrupt.&quot;" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_Content">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="stContent" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dt_PIC.Rows(0)(0).ToString" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="mail_CC" />
                          </InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">
                            <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{}" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:AppendLine DisplayName="Append Line" FileName="[&quot;C:\&quot; + DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;_SCH_ERR.txt&quot;]" sap:VirtualizedContainerService.HintSize="1353,52" sap2010:WorkflowViewState.IdRef="AppendLine_2" Text="[DateTime.Now.ToString +&quot;: &quot; + Environment.NewLine + stUser]" UseDefaultEncoding="False">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:AppendLine>
              </Sequence>
            </Sequence>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID0">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">200,554.5</av:Point>
                    <av:Size x:Key="ShapeSize">200,51</av:Size>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="REFRESH" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="REFRESH FUNCTION.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowDecision.True>
        <FlowDecision.False>
          <FlowDecision x:Name="__ReferenceID4" Condition="[sendMailFlag]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">490.5,296.5</av:Point>
                <av:Size x:Key="ShapeSize">79,87</av:Size>
                <av:PointCollection x:Key="TrueConnector">490.5,340 430,340 430,397</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">330,397</av:Point>
                    <av:Size x:Key="ShapeSize">200,66</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">430,463 430,493 300,493 300,554.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Send mail to RPA Team" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_55">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Ghi Log và status cho log record" sap:VirtualizedContainerService.HintSize="376,308" sap2010:WorkflowViewState.IdRef="Sequence_53">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="334,64" sap2010:WorkflowViewState.IdRef="Assign_36">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[stSQL]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">["INSERT INTO RPALIB.robot_log_error_nt(StartDay,ErrorDay,ProcessName,IpAddress,NameError,UserName) VALUES('"+ TimeStart_ErrorLog +"','"+
DateTime.Now.ToString +
"','"+
RobotName+"','"+
IP_Address +
"','"+
errMess.ToString.Replace("'","''")+
"','"+Order_Number+"')"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="Query">[stSQL]</InArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="376,51" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="421,204" sap2010:WorkflowViewState.IdRef="Sequence_54">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">["[RPA] Robot Stop Warning: " + RobotName.ToUpper]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="mail_Content" xml:space="preserve">["&lt;p&gt;Thông báo RPA Team&lt;/p&gt;"+
"&lt;p&gt;&lt;b&gt;Robot xảy ra lỗi bất thường quá trình bị dừng. Vui lòng kiểm tra lại&lt;/b&gt;&lt;/p&gt;"+
"&lt;p&gt;Project : " + RobotName+"&lt;/p&gt;"+
"&lt;p&gt;Machine ROBOT : " + IP_Address+"&lt;/p&gt;"+
"&lt;p&gt;Lỗi ghi nhận : &lt;/p&gt;"+
"&lt;p&gt;-------------------------------------------------- &lt;/p&gt;" + 
"&lt;p&gt;Activity name : " + exception.Source + "&lt;/p&gt;"+
"&lt;p&gt; " + exception.ToString +"&lt;/p&gt;"]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">[Mail_PIC]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                            <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                </Sequence>
                <FlowStep.Next>
                  <x:Reference>__ReferenceID0</x:Reference>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
          </FlowDecision>
        </FlowDecision.False>
      </FlowDecision>
      <x:Reference>__ReferenceID1</x:Reference>
      <FlowStep x:Name="__ReferenceID5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,117</av:Point>
            <av:Size x:Key="ShapeSize">200,66</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,183 300,226.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Write to log" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_28">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="833,60" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[stSQL]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["UPDATE RPALIB.robot_schedule_nt SET Process_Status = 'Stop' WHERE Name = '"+RobotName+"' AND Order_Number = " + Order_Number]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="833,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="Query">[stSQL]</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result" />
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <Sequence sap2010:Annotation.AnnotationText="Kiểm tra nếu robot này đã báo lỗi này trong 30p gần đây không? rồi thì không báo lỗi lần nữa" DisplayName="Configure time send mail" sap:VirtualizedContainerService.HintSize="833,882" sap2010:WorkflowViewState.IdRef="Sequence_29">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="791,60" sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[stSQL]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["Select NameError From RPALIB.robot_log_error_nt Where ProcessName='"+RobotName+"' AND UserName='"+Order_Number+"' AND TO_DATE(ERRORDAY, 'MM/DD/YYYY HH24:MI:SS') &gt; NOW() - 30 MINUTES Order By TO_DATE(ERRORDAY, 'MM/DD/YYYY HH24:MI:SS') DESC LIMIT 1"]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="791,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="Query">[stSQL]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_Result_Process]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Assign sap:VirtualizedContainerService.HintSize="791,60" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[sendMailFlag]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <If sap2010:Annotation.AnnotationText="Kiểm tra xem có báo lỗi này trong 30p gần đây không?" Condition="[dt_Result_Process.Rows.Count &gt; 0]" DisplayName="If Robot Name exists" sap:VirtualizedContainerService.HintSize="791,407" sap2010:WorkflowViewState.IdRef="If_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <If Condition="[dt_Result_Process.Rows(0)(0).ToString=errMess.ToString]" sap:VirtualizedContainerService.HintSize="484,218" sap2010:WorkflowViewState.IdRef="If_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Else>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[sendMailFlag]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </If.Then>
              <If.Else>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[sendMailFlag]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
          </Sequence>
          <If Condition="[sendMailFlag]" sap:VirtualizedContainerService.HintSize="833,678" sap2010:WorkflowViewState.IdRef="If_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="418,491" sap2010:WorkflowViewState.IdRef="Sequence_31">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Ghi Log và status cho log record" sap:VirtualizedContainerService.HintSize="376,308" sap2010:WorkflowViewState.IdRef="Sequence_30">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="334,64" sap2010:WorkflowViewState.IdRef="Assign_17">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[stSQL]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["INSERT INTO RPALIB.robot_log_error_nt(StartDay,ErrorDay,ProcessName,IpAddress,NameError,UserName) VALUES('"+ TimeStart_ErrorLog +"','"+
DateTime.Now.ToString +
"','"+
RobotName+"','"+
IP_Address +
"','"+
errMess.ToString.Replace("'","''")+
"','"+Order_Number+"')"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="Query">[stSQL]</InArgument>
                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result" />
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="376,51" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="421,204" sap2010:WorkflowViewState.IdRef="Sequence_47">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">["[RPA] Robot Stop Warning: " + RobotName.ToUpper]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_Content" xml:space="preserve">["&lt;p&gt;Thông báo RPA Team&lt;/p&gt;"+
"&lt;p&gt;&lt;b&gt;Robot xảy ra lỗi bất thường quá trình bị dừng. Vui lòng kiểm tra lại&lt;/b&gt;&lt;/p&gt;"+
"&lt;p&gt;Project : " + RobotName+"&lt;/p&gt;"+
"&lt;p&gt;Machine ROBOT : " + IP_Address+"&lt;/p&gt;"+
"&lt;p&gt;Lỗi ghi nhận : &lt;/p&gt;"+
"&lt;p&gt;-------------------------------------------------- &lt;/p&gt;" + 
"&lt;p&gt;Activity name : " + exception.Source + "&lt;/p&gt;"+
"&lt;p&gt; " + exception.ToString +"&lt;/p&gt;"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">[Mail_PIC]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
              </Sequence>
            </If.Then>
          </If>
        </Sequence>
        <FlowStep.Next>
          <x:Reference>__ReferenceID2</x:Reference>
        </FlowStep.Next>
      </FlowStep>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
    </Flowchart>
  </Sequence>
</Activity>