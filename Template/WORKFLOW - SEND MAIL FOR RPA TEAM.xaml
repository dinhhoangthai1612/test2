<Activity mc:Ignorable="sap sap2010" x:Class="WORKFLOW___SEND_MAIL_FOR_RPA_TEAM" this:WORKFLOW___SEND_MAIL_FOR_RPA_TEAM.mail_Attach="[{}]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mg="clr-namespace:Microsoft.Graph;assembly=Microsoft.Graph" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uma="clr-namespace:UiPath.MicrosoftOffice365.Activities;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umam="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Nhập tiêu đề cho Mail." Name="mail_Subject" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Nhập nội dung cho Mail" Name="mail_Content" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Chỉ định cụ thể người nhận. Nếu trường này để trống thì gửi mail cho tất cả mọi người trong team, ngược lại thì chỉ gửi cho người này." Name="specialReceiver" Type="InArgument(x:String)" />
    <x:Property Name="mail_CC" Type="InArgument(x:String)" />
    <x:Property Name="mail_Attach" Type="InArgument(s:String[])" />
    <x:Property Name="mail_BCC" Type="InArgument(x:String)" />
    <x:Property Name="RobotName" Type="InArgument(x:String)" />
  </x:Members>
  <this:WORKFLOW___SEND_MAIL_FOR_RPA_TEAM.mail_Content>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:WORKFLOW___SEND_MAIL_FOR_RPA_TEAM.mail_Content>
  <this:WORKFLOW___SEND_MAIL_FOR_RPA_TEAM.specialReceiver>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:WORKFLOW___SEND_MAIL_FOR_RPA_TEAM.specialReceiver>
  <this:WORKFLOW___SEND_MAIL_FOR_RPA_TEAM.mail_CC>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:WORKFLOW___SEND_MAIL_FOR_RPA_TEAM.mail_CC>
  <this:WORKFLOW___SEND_MAIL_FOR_RPA_TEAM.mail_BCC>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:WORKFLOW___SEND_MAIL_FOR_RPA_TEAM.mail_BCC>
  <this:WORKFLOW___SEND_MAIL_FOR_RPA_TEAM.RobotName>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:WORKFLOW___SEND_MAIL_FOR_RPA_TEAM.RobotName>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>662,1393</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>WORKFLOW___SEND_MAIL_FOR_RPA_TEAM_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="41">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Microsoft.Activities.Expressions</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="WORKFLOW - SEND MAIL FOR RPA TEAM" sap:VirtualizedContainerService.HintSize="480,1328" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_GetResult" />
      <Variable x:TypeArguments="x:String" Name="get_OutlookAddress" />
      <Variable x:TypeArguments="x:String" Name="get_OutlookPassword" />
      <Variable x:TypeArguments="x:String" Name="get_MailServer" />
      <Variable x:TypeArguments="x:String" Name="get_PIC" />
      <Variable x:TypeArguments="x:Int32" Name="get_PortMail" />
      <Variable x:TypeArguments="s:String[]" Name="stTo" />
      <Variable x:TypeArguments="s:String[]" Name="stCC" />
      <Variable x:TypeArguments="x:String" Name="mailTextHTML" />
      <Variable x:TypeArguments="s:String[]" Name="stBCC" />
      <Variable x:TypeArguments="x:String" Name="get_MailServerOutlook" />
      <Variable x:TypeArguments="x:Boolean" Name="checkExists" />
      <Variable x:TypeArguments="x:String" Name="pathIcon" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtPathSharePoint" />
      <Variable x:TypeArguments="x:String" Name="image_base64" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of string)]" Name="listAttached" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Assign variable" sap:VirtualizedContainerService.HintSize="438,66" sap2010:WorkflowViewState.IdRef="Sequence_34">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="Query" xml:space="preserve">SELECT *
FROM RPALIB.library_nt
where name in ('PIC', 'MailServer', 'MailAddress_Outlook','MailPassword_Outlook','MailServer_Outlook')
order by name asc</InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_GetResult]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <ui:MultipleAssign DisplayName="Assign Variable" sap:VirtualizedContainerService.HintSize="334,253" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[get_OutlookAddress]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[dt_GetResult.Rows(0)(1).ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[get_OutlookPassword]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[dt_GetResult.Rows(1)(1).ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[get_MailServer]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[dt_GetResult.Rows(2)(1).ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[get_PIC]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[dt_GetResult.Rows(4)(1).ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[get_PortMail]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">25</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[get_MailServerOutlook]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[dt_GetResult.Rows(3)(1).ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence DisplayName="Add template &amp; guide" sap:VirtualizedContainerService.HintSize="426,677" sap2010:WorkflowViewState.IdRef="Sequence_51">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadTextFile Content="[mailTextHTML]" DisplayName="Read text file (HTML Mail Body)" FileName="H:\Robotics\AA\Mail\Mail - Copy.html" sap:VirtualizedContainerService.HintSize="384,79" sap2010:WorkflowViewState.IdRef="ReadTextFile_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadTextFile>
      <If sap2010:Annotation.AnnotationText="Fc via mail thì attach url Template + Guide" Condition="[Not String.IsNullOrEmpty(RobotName)]" sap:VirtualizedContainerService.HintSize="384,93" sap2010:WorkflowViewState.IdRef="If_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,386" sap2010:WorkflowViewState.IdRef="Sequence_55">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="Query" xml:space="preserve">["SELECT TEMPLATE, GUIDE FROM RPALIB.ROBOT_NAME_NT " + 
" WHERE NAME = '"+RobotName+"'"]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dtPathSharePoint]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <TryCatch DisplayName="Template" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="TryCatch_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Sequence sap:VirtualizedContainerService.HintSize="526,431" sap2010:WorkflowViewState.IdRef="Sequence_53">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[Not String.IsNullOrEmpty(dtPathSharePoint.Rows(0)(0).ToString)]" sap:VirtualizedContainerService.HintSize="484,339" sap2010:WorkflowViewState.IdRef="If_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_58">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[mailTextHTML]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[mailTextHTML.Replace("&lt;!--Template","").Replace("Template--&gt;","").Replace("&amp;TemplateFunctionRobot&amp;",dtPathSharePoint.Rows(0)(0).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_59">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="530,21" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <TryCatch DisplayName="Guide" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="TryCatch_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Sequence sap:VirtualizedContainerService.HintSize="526,431" sap2010:WorkflowViewState.IdRef="Sequence_54">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[Not String.IsNullOrEmpty(dtPathSharePoint.Rows(0)(1).ToString)]" sap:VirtualizedContainerService.HintSize="484,339" sap2010:WorkflowViewState.IdRef="If_19">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_60">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[mailTextHTML]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[mailTextHTML.Replace("&lt;!--Guide","").Replace("Guide--&gt;","").Replace("&amp;GuideFunctionRobot&amp;",dtPathSharePoint.Rows(0)(1).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_61">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="530,21" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </If.Then>
      </If>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Replace img" sap:VirtualizedContainerService.HintSize="384,51" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[mailTextHTML.Split(&quot;'&quot;.ToCharArray)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="item" />
            </ActivityAction.Argument>
            <If Condition="[item.ToString.Contains(&quot;H:\Robotics\AA\Mail\&quot;)]" sap:VirtualizedContainerService.HintSize="484,247" sap2010:WorkflowViewState.IdRef="If_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[mailTextHTML]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[mailTextHTML.Replace(item,"data:image/png;base64," + CStr(Convert.ToBase64String(System.IO.File.ReadAllBytes(item))))]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <Assign sap:VirtualizedContainerService.HintSize="384,64" sap2010:WorkflowViewState.IdRef="Assign_35">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[mail_Content]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[mailTextHTML.
Replace("&amp;MachineName&amp;",Environment.MachineName).
Replace("&amp;BodySendMail&amp;",mail_Content).
Replace(Dns.GetHostByName(Dns.GetHostName()).AddressList(0).ToString,Environment.MachineName).
Replace("tel:+8438233793","tel:+84 0251 3566 155").
Replace(" +84-3823.3793&lt;/a&gt;"," +84-2513.566.155&lt;/a&gt;").
Replace("&amp;EmailAddressDeveloper&amp;","roboticsnt@ykk.com").
Replace("Email IO HCM Team", "Email IO NT Team").
Replace("hcm-improve-operation.vnm@ykk.com","nt-improve-operation.vnm@ykk.com").
Replace("YKK VietNam Co., LTD - Ho Chi Minh Branch Office","YKK VietNam Co., LTD - Nhon Trach Factory").
Replace("https://www.bing.com/maps/embed?h=280&amp;w=325&amp;cp=10.7705335011062~106.69431446751928&amp;lvl=19&amp;typ=d&amp;sty=r&amp;src=SHELL&amp;FORM=MBEDV8",
"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3920.368408278629!2d106.93912831472151!3d10.706041263416658!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3175183bdb5b5de3%3A0xa4ca564e3cabdf5c!2sC%C3%B4ng%20Ty%20TNHH%20Ykk%20Vi%E1%BB%87t%20Nam!5e0!3m2!1svi!2s!4v1627975863991!5m2!1svi!2s").
Replace("https://www.bing.com/maps/directions?cp=10.7705335011062~106.69431446751928&amp;amp;sty=r&amp;amp;lvl=19&amp;amp;rtp=~pos.10.7705335011062_106.69431446751928____&amp;amp;FORM=MBEDLD",
"https://goo.gl/maps/jpeKs4QjhiuLddkc7").
Replace("4th Floor, AB Tower, 76 Le Lai St., Ben Thanh Ward, Dist. 1, HCMC, Viet Nam",
"No 10, N2 Road (Long Tho 1), Nhon Trach 3 Industrial Park, Nhon Trach District , Dong Nai Province, Viet Nam.")]</InArgument>
        </Assign.Value>
      </Assign>
      <If sap2010:Annotation.AnnotationText="Remove dòng &quot;This email was sent automatically by RPA, please don't reply this email.&quot; nếu là fc SEND MAIL FOR SUPPLIER" Condition="[mail_Subject.ToString.ToUpper.Contains(&quot;PURCHASE ORDER&quot;) And mail_Content.ToString.Contains(&quot;Công ty YKK gửi quý Công Ty&quot;)]" sap:VirtualizedContainerService.HintSize="484,471" sap2010:WorkflowViewState.IdRef="If_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_49">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[image_base64]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["&lt;p&gt;&lt;img src='data:image/jpeg;base64,"+ Convert.ToBase64String(System.IO.File.ReadAllBytes("\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\Domestic Purchasing\YKK Calendar.png")) + "' width ='100%'&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;"]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[mail_Content]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[mail_Content.Replace("This email was sent automatically by RPA, please don't reply this email.",image_base64)]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Process mail to, cc, bcc" sap:VirtualizedContainerService.HintSize="438,66" sap2010:WorkflowViewState.IdRef="Sequence_37">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If sap2010:Annotation.AnnotationText="" Condition="[NOT string.IsNullOrEmpty(specialReceiver)]" DisplayName="IF NULL THEN" sap:VirtualizedContainerService.HintSize="901,1160" sap2010:WorkflowViewState.IdRef="If_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <If Condition="[specialReceiver.Contains(&quot;@&quot;)]" DisplayName="If specialReveiver is mail address" sap:VirtualizedContainerService.HintSize="756,942" sap2010:WorkflowViewState.IdRef="If_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Else>
              <Sequence sap2010:Annotation.AnnotationText="Get mail to &amp; mail CC from db robot_schedule_nt" DisplayName="GET EMAIL TO, CC FROM ROBOT_SCHEDULE_NT" sap:VirtualizedContainerService.HintSize="611,784" sap2010:WorkflowViewState.IdRef="Sequence_36">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:String[]" Name="stAttColection" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dtMail" />
                  <Variable x:TypeArguments="x:String" Name="robotName" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_Address" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[robotName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[specialReceiver.ToUpper]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get Email Address" sap:VirtualizedContainerService.HintSize="569,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="Query">["SELECT Email_To,Email_CC FROM RPALIB.robot_schedule_nt WHERE NAME='"+robotName+"'"]</InArgument>
                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_Address]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <If Condition="[String.IsNullOrEmpty(mail_CC)]" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_7">
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[mail_CC]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[dt_Address.Rows(0)(1).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[mail_CC]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[mail_CC + "," + dt_Address.Rows(0)(1).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
                <Assign sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[specialReceiver]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dt_Address.Rows(0)(0).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="569,51" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="326,396" sap2010:WorkflowViewState.IdRef="Sequence_35">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:SplitString DisplayName="Split string stTo" sap:VirtualizedContainerService.HintSize="284,132" sap2010:WorkflowViewState.IdRef="SplitString_7" Input="[dt_Address.Rows(0)(0).ToString]" Result="[stTo]" Separator="," StringSplitOptions="RemoveEmptyEntries" />
                      <p:SplitString DisplayName="Split string stCC" sap:VirtualizedContainerService.HintSize="284,132" sap2010:WorkflowViewState.IdRef="SplitString_8" Input="[dt_Address.Rows(0)(1).ToString]" Result="[stCC]" Separator="," StringSplitOptions="RemoveEmptyEntries" />
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
              </Sequence>
            </If.Else>
          </If>
        </If.Then>
      </If>
      <p:SplitString DisplayName="Split string stTo" sap:VirtualizedContainerService.HintSize="901,51" sap2010:WorkflowViewState.IdRef="SplitString_9" Input="[specialReceiver.Trim.Replace(&quot; &quot;,&quot;&quot;).Replace(&quot;  &quot;,&quot;&quot;).Replace(&quot;   &quot;,&quot;&quot;)]" Result="[stTo]" Separator="," StringSplitOptions="RemoveEmptyEntries">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </p:SplitString>
      <p:SplitString DisplayName="Split string stCC" sap:VirtualizedContainerService.HintSize="901,51" sap2010:WorkflowViewState.IdRef="SplitString_10" Input="[mail_CC.Trim.Replace(&quot; &quot;,&quot;&quot;).Replace(&quot;  &quot;,&quot;&quot;).Replace(&quot;   &quot;,&quot;&quot;)]" Result="[stCC]" Separator="," StringSplitOptions="RemoveEmptyEntries">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </p:SplitString>
      <p:SplitString DisplayName="Split string stBCC" sap:VirtualizedContainerService.HintSize="901,51" sap2010:WorkflowViewState.IdRef="SplitString_11" Input="[mail_BCC.Trim.Replace(&quot; &quot;,&quot;&quot;).Replace(&quot;  &quot;,&quot;&quot;).Replace(&quot;   &quot;,&quot;&quot;)]" Result="[stBCC]" Separator="," StringSplitOptions="RemoveEmptyEntries">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </p:SplitString>
    </Sequence>
    <Sequence DisplayName="Check file attached" sap:VirtualizedContainerService.HintSize="438,66" sap2010:WorkflowViewState.IdRef="Sequence_75">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_47">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[listAttached]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">[mail_Attach.ToList]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[mail_Attach]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_74">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:PathExists DisplayName="Path Exists" Exists="[checkExists]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="PathExists_6" Path="[item]" PathType="File">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:PathExists>
              <If Condition="[checkExists]" DisplayName="Check file" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_73">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <RemoveFromCollection x:TypeArguments="x:String" Collection="[listAttached]" DisplayName="Remove From Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_3" Item="[item]" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_48">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[mail_Attach]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[listAttached.ToArray]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <TryCatch DisplayName="SMTP OUTLOOK" sap:VirtualizedContainerService.HintSize="438,372" sap2010:WorkflowViewState.IdRef="TryCatch_14">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:SendMail From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[mail_Attach]" Bcc="[String.Join(&quot;,&quot;,stBCC)]" Body="[mail_Content +&quot;&lt;br&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;*Send by SMTP Outlook*&lt;/p&gt;&quot;]" Cc="[String.Join(&quot;,&quot;,stCC)]" DisplayName="Send mail SMTP Outlook" Email="[get_OutlookAddress]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendMail_23" IsBodyHtml="True" Password="[get_OutlookPassword]" Port="[get_PortMail]" SecureConnection="Auto" Server="[get_MailServerOutlook]" Subject="[mail_Subject.Replace(Dns.GetHostByName(Dns.GetHostName()).AddressList(0).ToString,Environment.MachineName)]" To="[String.Join(&quot;,&quot;,stTo)]">
          <ui:SendMail.Files>
            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
          </ui:SendMail.Files>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:SendMail>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_14">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="SEND MAIL OFFICE 365" sap:VirtualizedContainerService.HintSize="548,1337" sap2010:WorkflowViewState.IdRef="Sequence_38">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="SEND MAIL OFFICE 365" sap:VirtualizedContainerService.HintSize="434,805" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <uma:Office365ApplicationScope ApplicationSecret="{x:Null}" ContinueOnError="{x:Null}" Password="{x:Null}" SecureApplicationSecret="{x:Null}" SecurePassword="{x:Null}" Tenant="{x:Null}" Username="{x:Null}" ApplicationId="f2f43f65-16a6-4319-91b6-d2a342a88744" AuthenticationType="InteractiveToken" DisplayName="Microsoft Office 365 Scope" sap:VirtualizedContainerService.HintSize="468,436" sap2010:WorkflowViewState.IdRef="Office365ApplicationScope_6" OAuthApplication="Custom" Services="Mail" Timeout="30000">
                    <uma:Office365ApplicationScope.Body>
                      <ActivityAction x:TypeArguments="mg:GraphServiceClient">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="mg:GraphServiceClient" Name="ParentScope" />
                        </ActivityAction.Argument>
                        <umam:SendMail Account="{x:Null}" From="{x:Null}" AttachmentsCollection="[mail_Attach]" Bcc="[stBCC]" Body="[mail_Content + &quot;&lt;/br&gt;*Send by Microsoft Office 365*&quot;]" Cc="[stCC]" DisplayName="Send Mail" sap:VirtualizedContainerService.HintSize="434,350" sap2010:WorkflowViewState.IdRef="SendMail_27" IsBodyHTML="True" IsDraft="False" Subject="[mail_Subject]" To="[stTo]">
                          <umam:SendMail.Attachments>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                          </umam:SendMail.Attachments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </umam:SendMail>
                      </ActivityAction>
                    </uma:Office365ApplicationScope.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </uma:Office365ApplicationScope>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,643" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,574" sap2010:WorkflowViewState.IdRef="Sequence_63">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[mail_Attach]" Body="[&quot;&lt;p&gt;Ip Address : &quot; + Dns.GetHostByName(Dns.GetHostName()).AddressList(0).ToString + &quot;&lt;/p&gt;&quot; +&#xA;&quot;&lt;p&gt;To : &quot; + String.Join(&quot;,&quot;,stTo) + &quot;&lt;/p&gt;&quot; +&#xA;&quot;&lt;p&gt;CC : &quot; + String.Join(&quot;,&quot;,stCC) + &quot;&lt;/p&gt;&quot; +&#xA;&quot;&lt;p&gt;Write log error Schedule&lt;/p&gt;&quot; +&#xA;&quot;&lt;p&gt;&quot; + exception.Message + &quot;&lt;/p&gt;&quot; +&#xA;&quot;&lt;p&gt;**************************************************************************************************************&lt;/br&gt;&quot; +&#xA;mail_Content + &quot;&lt;/p&gt;&quot; +&#xA;&quot;&lt;p&gt;**************************************************************************************************************&lt;/br&gt;&quot; +&#xA;&quot;List Attached Files: &lt;/br&gt;&quot; +&#xA;String.Join(&quot;,&quot;,mail_Attach) + &quot;&lt;/p&gt;&quot; +&#xA;&quot;&lt;p&gt;**************************************************************************************************************&lt;/br&gt;&quot; +&#xA;exception.ToString + &quot;&lt;/p&gt;&quot; + &quot;&lt;/br&gt;&quot; +&#xA;&quot;&lt;/br&gt;*Send by SMTP Lotus*&quot;]" DisplayName="Send mail SMTP Lotus" Email="[get_OutlookAddress]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendMail_28" IsBodyHtml="True" Password="[get_OutlookPassword]" Port="[get_PortMail]" SecureConnection="Auto" Server="[get_MailServer]" Subject="[mail_Subject]" To="[get_PIC]">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                          </ui:SendMail.Files>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SendMail>
                        <ui:SendMail Bcc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[mail_Attach]" Body="[mail_Content +&quot;&lt;/br&gt;*Send by SMTP Lotus*&quot;]" Cc="[String.Join(&quot;,&quot;,stCC)]" DisplayName="Send mail SMTP Lotus" Email="[get_OutlookAddress]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendMail_29" IsBodyHtml="True" Password="[get_OutlookPassword]" Port="[get_PortMail]" SecureConnection="Auto" Server="[get_MailServer]" Subject="[mail_Subject]" To="[String.Join(&quot;,&quot;,stTo)]">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                          </ui:SendMail.Files>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SendMail>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="RESTART FOR CHECK LOGIN BY MAINSERVER_AUTOMATIC" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="Query">["UPDATE RPALIB.server_nt SET gitUpdate='1',updateUser='"+DateTime.Now.ToString+"' WHERE SERVERNAME='"+Dns.GetHostByName(Dns.GetHostName()).AddressList(0).ToString+"'"]</InArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result" />
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:Comment sap:VirtualizedContainerService.HintSize="438,190" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Function có chức năng:&#xA;&#xA;1 - Gửi mail cho RPA Team.&#xA;&#xA;2 - Gửi mail cho user cụ thể.&#xA;&#xA;Nếu biến &quot;specialReceiver&quot; = null thì robot sẽ gửi mail cho RPA team, và ngược lại." />
    <ui:Comment sap:VirtualizedContainerService.HintSize="438,170" sap2010:WorkflowViewState.IdRef="Comment_2" Text="Function có thể đính kèm nhiều file gửi mail cùng 1 lúc.&#xA;&#xA;Chỉ cần truyền giá trị vào argument: mail_Attach&#xA;&#xA;Ví dụ: {&quot;D:\TEST.XLSX&quot;, &quot;D:\NOTEPAD.TXT&quot;}&#xA;&#xA;" />
  </Sequence>
</Activity>