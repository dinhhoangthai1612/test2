<Activity mc:Ignorable="sap sap2010" x:Class="MAKE_TOTAL_OVERTIME" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:bew="clr-namespace:BalaReva.Excel.WorkBook;assembly=BalaReva.Excel" xmlns:ee="clr-namespace:ExcelCustomActivities.Excel;assembly=ExcelCustomActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="EndMessage" Type="InOutArgument(x:String)" />
    <x:Property Name="EndStatus" Type="InOutArgument(x:String)" />
    <x:Property Name="Order_Number" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>994,1428</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>MAKE_TOTAL_OVERTIME_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="41">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPathTeam.Excel.Extensions</x:String>
      <x:String>BalaReva.Excel.WorkBook</x:String>
      <x:String>BalaReva.Excel.Base</x:String>
      <x:String>ExcelCustomActivities.Excel</x:String>
      <x:String>Microsoft.Activities.Expressions</x:String>
      <x:String>BalaReva.EasyExcel.Utilities</x:String>
      <x:String>BalaReva.EasyExcel.Sheets</x:String>
      <x:String>BalaReva.EasyExcel.Base</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="88">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Excel.Activities</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Base</AssemblyReference>
      <AssemblyReference>ExcelCustomActivities</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel.Utilities</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="MAKE_TOTAL_OVERTIME" sap:VirtualizedContainerService.HintSize="1004,1363" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="pathFolder" />
      <Variable x:TypeArguments="x:Boolean" Name="checkExists" />
      <Variable x:TypeArguments="x:Boolean" Name="fileThisMonth" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_library" />
      <Variable x:TypeArguments="x:String" Name="Path_downloads" />
      <Variable x:TypeArguments="x:String" Name="Mail_PIC" />
      <Variable x:TypeArguments="x:String" Name="Path_template" />
      <Variable x:TypeArguments="x:String" Name="Path_Folder" />
      <Variable x:TypeArguments="x:String" Name="pathExportFile" />
      <Variable x:TypeArguments="x:String" Name="pathSaveFileExport" />
      <Variable x:TypeArguments="x:String" Name="pathFileLastMonth" />
      <Variable x:TypeArguments="x:String" Name="pathFileThisMonth" />
      <Variable x:TypeArguments="x:Boolean" Name="fileLastMonth" />
      <Variable x:TypeArguments="x:String" Name="pathVFDivisionManpower" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wb" />
      <Variable x:TypeArguments="x:String" Name="stLastCell" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtExportFile" />
      <Variable x:TypeArguments="x:String" Name="sheetName" />
      <Variable x:TypeArguments="x:Int32" Name="countSheetName" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtManpowerStatus" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtFilter1" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtFilter2" />
      <Variable x:TypeArguments="s:DateTime" Name="convertDatetime" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtCalendar" />
      <Variable x:TypeArguments="s:String[]" Name="arrColumn" />
      <Variable x:TypeArguments="x:String" Name="sumColumnTotal" />
      <Variable x:TypeArguments="x:String" Name="pathTotalOvertime" />
      <Variable x:TypeArguments="x:String" Name="pathFile" />
      <Variable x:TypeArguments="x:String" Name="stMailTo" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wb2" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">420,22.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Double x:Key="Width">969.6516683121024</x:Double>
        <x:Double x:Key="Height">1327.2835078476471</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">450,97.5 450,127.5</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID12</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">260,796</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">360,862 360,892 360.141666666667,892 360.141666666667,904</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Check Exist File" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_14">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[pathVFDivisionManpower]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_152">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[checkExists]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,727" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[Directory.GetFiles(&quot;\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\VF Division manpower\&quot;,&quot;*.xls*&quot;)]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="item" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,593" sap2010:WorkflowViewState.IdRef="Sequence_38">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[Path.GetFileName(item.ToString).ToUpper.StartsWith(&quot;VF DIVISION MANPOWER&quot;)]" sap:VirtualizedContainerService.HintSize="484,501" sap2010:WorkflowViewState.IdRef="If_9">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,314" sap2010:WorkflowViewState.IdRef="Sequence_36">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[pathVFDivisionManpower]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[checkExists]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_12" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_37">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </Sequence>
      <FlowStep.Next>
        <FlowDecision x:Name="__ReferenceID7" Condition="[checkExists]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">320.641666666667,904</av:Point>
              <av:Size x:Key="ShapeSize">79,87</av:Size>
              <av:PointCollection x:Key="TrueConnector">320.641666666667,947.5 240,947.5 240,1026</av:PointCollection>
              <av:PointCollection x:Key="FalseConnector">399.641666666667,947.5 500,947.5 500,1026.04</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">140,1026</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">240,1092 240,1134</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Process" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_27">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If sap2010:Annotation.AnnotationText="Ngày hiện tại &lt; 7 (các ngày trong tuần có tháng khác nhau)&#xA;Write data vào 2 sheet tháng hiện tại -1 và tháng hiện tại" Condition="[DateTime.Now.Day &lt; 7]" sap:VirtualizedContainerService.HintSize="200,138" sap2010:WorkflowViewState.IdRef="If_63">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="242,526" sap2010:WorkflowViewState.IdRef="Sequence_203">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If sap2010:Annotation.AnnotationText="Tháng hiện tại = 4 kiểm tra chưa có file Total Overtime thì copy file Total Overtime mới&#xA;Xử lí file cũ và file mới copy" Condition="[DateTime.Now.Month = 4]" sap:VirtualizedContainerService.HintSize="200,138" sap2010:WorkflowViewState.IdRef="If_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="242,348" sap2010:WorkflowViewState.IdRef="Sequence_124">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap2010:Annotation.AnnotationText="Process file Total Overtime năm hiện tại" DisplayName="Process new file" sap:VirtualizedContainerService.HintSize="565,1153" sap2010:WorkflowViewState.IdRef="Sequence_85">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data Manpower Status" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="523,82" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" InstanceCachePeriod="3000" ReadOnly="True" Workbook="[wb]" WorkbookPath="[pathVFDivisionManpower]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="947,2928" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="905,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Lặp qua từng sheet tìm sheet tên có chứa VF yyyy để read data" Condition="[countSheetName &lt; wb.GetSheets.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="905,759" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                                        <ui:InterruptibleWhile.Body>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,592" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[wb.GetSheets(countSheetName).ToString.ToUpper.Contains(&quot;VF 20&quot;)]" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_12">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[wb.GetSheets(countSheetName)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[countSheetName + 1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:InterruptibleWhile.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InterruptibleWhile>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA1" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="905,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_3" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A7" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity1" sap:VirtualizedContainerService.HintSize="905,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_4" MoveDirection="Down" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtManpowerStatus]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="905,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="[&quot;A7:AB&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                      <ui:BuildDataTable DataTable="[dtFilter1]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="905,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Code&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Full_x0020_Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Section&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Position&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:BuildDataTable DataTable="[dtFilter2]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="905,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_4" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Grade&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Lặp từng dòng chỉ giữ những dòng có giá trị tại cột Resignation date = blank và &gt;= tháng hiện tại" DataTable="[dtManpowerStatus]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="905,1272" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="855,1092" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[row(27).ToString.Trim.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="813,342" sap2010:WorkflowViewState.IdRef="If_17">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="s:DateTime">[convertDatetime]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(row(27).ToString.Trim)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_65">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                              <If Condition="[String.IsNullOrEmpty(row(27).ToString)]" sap:VirtualizedContainerService.HintSize="813,618" sap2010:WorkflowViewState.IdRef="If_19">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_6" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="526,458" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[convertDatetime.Year &gt;= DateTime.Now.Year And Convert.ToInt32(convertDatetime.ToString(&quot;yyyyMM&quot;)) &gt;= Convert.ToInt32(DateTime.Now.ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="484,366" sap2010:WorkflowViewState.IdRef="If_18">
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_7" />
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_8" />
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_68">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachRow>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_5" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                              <Assign sap:VirtualizedContainerService.HintSize="523,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[pathTotalOvertime]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\Tăng ca\ROBOT\Total Overtime in " + DateTime.Now.Year.ToString+ ".xlsx"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:PathExists DisplayName="Path Exists" Exists="[checkExists]" sap:VirtualizedContainerService.HintSize="523,89" sap2010:WorkflowViewState.IdRef="PathExists_5" Path="[pathTotalOvertime]" PathType="File" />
                              <If Condition="[checkExists = False]" sap:VirtualizedContainerService.HintSize="523,546" sap2010:WorkflowViewState.IdRef="If_71">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="487,359" sap2010:WorkflowViewState.IdRef="Sequence_226">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[pathTotalOvertime]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="445,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[Path_template + &quot;Make Total Overtime -VF\Total Overtime_Template.xlsx&quot;]" />
                                    <bew:RenameSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Rename Work Sheet" FilePath="[pathTotalOvertime]" sap:VirtualizedContainerService.HintSize="445,70" sap2010:WorkflowViewState.IdRef="RenameSheet_2" NewSheetName="[&quot;4.&quot; + DateTime.Now.Year.ToString]" SheetName="4.2021" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="242,83" sap2010:WorkflowViewState.IdRef="Sequence_227">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="pathTotalOvertime năm hiện tại" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="821,4426" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathTotalOvertime]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="787,4286" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data file Export This Month" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="745,956" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_37" InstanceCachePeriod="3000" Workbook="[wb2]" WorkbookPath="[pathFileThisMonth]">
                                        <ui:ExcelApplicationScope.Body>
                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,816" sap2010:WorkflowViewState.IdRef="Sequence_299">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA2" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{wb2.GetSheets(0)}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_70" />
                                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity2" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_54" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wb2.GetSheets(0)]" WorkBook="[wb2]" />
                                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_23" Range="[&quot;C7:AO&quot; + stLastCell.Substring(1)]" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:FilterDataTable DataTable="[dtExportFile]" DisplayName="Filter Data Table1" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_11" OutputDataTable="[dtExportFile]" SelectColumnsMode="Keep">
                                                <ui:FilterDataTable.Filters>
                                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["VF"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                    <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["vf"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                  </scg:List>
                                                </ui:FilterDataTable.Filters>
                                                <ui:FilterDataTable.SelectColumns>
                                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                    <x:Null />
                                                  </scg:List>
                                                </ui:FilterDataTable.SelectColumns>
                                              </ui:FilterDataTable>
                                              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_1" Range="K7:AO3000" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="c" KeyModifiers="Ctrl">
                                                <ui:SendHotkey.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a9f678b2-e753-41bb-be8e-aa649095973f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Danh sách nhân viên tăng ca*' /&gt;" TimeoutMS="5000">
                                                    <ui:Target.WaitForReady>
                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                    </ui:Target.WaitForReady>
                                                  </ui:Target>
                                                </ui:SendHotkey.Target>
                                              </ui:SendHotkey>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ExcelApplicationScope.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelApplicationScope>
                                      <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("M.yyyy")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Transparent]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="745,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_1" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_8" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="745,116" sap2010:WorkflowViewState.IdRef="SendHotkey_6" Key="v" KeyModifiers="Ctrl">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="19714676-4c8a-414a-98f9-de3459e03cec" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Total Overtime*' /&gt;" TimeoutMS="5000">
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_36" Workbook="[wb2]" />
                                      <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[sheetName]" Text="[&quot;CÔNG OVERTIMES &quot; + DateTime.Now.ToString(&quot;yyyy-MM&quot;)]" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="[sheetName]" StartingCell="C7" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity3" sap:VirtualizedContainerService.HintSize="745,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_6" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA3" EntryMethodName="RoundNumberInRange" EntryMethodParameters="[{&quot;K7:AO&quot; + stLastCell.Substring(1),sheetName}]" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_4" />
                                      <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Lấy lịch làm việc bên HR" CommandType="Text" DataTable="[dtCalendar]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="745,119" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT &quot; + &#xA;&quot; WHERE LOCATION = 'NT' AND DAY LIKE '&quot;+ DateTime.Now.ToString(&quot;yyyyMM&quot;) +&quot;%'&quot;]" ConnectionString="Dsn=RPALIB;uid=robotnt;pwd=robotnt123">
                                        <ui:ExecuteQuery.Parameters>
                                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                        </ui:ExecuteQuery.Parameters>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExecuteQuery>
                                      <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:String[]">[arrColumn]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:String[]">[{"$K7","$L7","$M7","$N7","$O7","$P7","$Q7","$R7","$S7","$T7","$U7","$V7","$W7","$X7","$Y7","$Z7","$AA7","$AB7","$AC7","$AD7","$AE7","$AF7","$AG7","$AH7","$AI7","$AJ7","$AK7","$AL7","$AM7","$AN7","$AO7"}]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCalendar]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="745,548" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,401" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[String.IsNullOrEmpty(sumColumnTotal)]" sap:VirtualizedContainerService.HintSize="653,309" sap2010:WorkflowViewState.IdRef="If_22">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[sumColumnTotal + "," + arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                      </ui:ForEachRow>
                                      <ui:ExcelWriteCell Cell="AP7" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="[sheetName]" Text="[&quot;=+SUM(&quot;+sumColumnTotal+&quot;)&quot;]" />
                                      <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                      <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;AP7:AR&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_2" SheetName="[sheetName]" SourceRange="AP7:AR7" />
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="Delay_12" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA4" EntryMethodName="SortColumnTOTAL" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_61" />
                                      <ui:ExcelWriteCell Cell="C1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="TOTAL" Text="[DateTime.Now.Year.ToString]" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="TOTAL" StartingCell="B5" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_6" SheetName="TOTAL" StartingCell="F5" />
                                      <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                            <Sequence sap2010:Annotation.AnnotationText="Process file Total Overtime năm hiện tại - 1" DisplayName="Process old file" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_98">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data Manpower Status" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="262,82" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" InstanceCachePeriod="3000" ReadOnly="True" Workbook="[wb]" WorkbookPath="[pathVFDivisionManpower]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="947,2844" sap2010:WorkflowViewState.IdRef="Sequence_120">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="905,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Lặp qua từng sheet tìm sheet tên có chứa VF yyyy để read data" Condition="[countSheetName &lt; wb.GetSheets.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="905,108" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
                                        <ui:InterruptibleWhile.Body>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,592" sap2010:WorkflowViewState.IdRef="Sequence_112">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[wb.GetSheets(countSheetName).ToString.ToUpper.Contains(&quot;VF 20&quot;)]" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_33">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_110">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[wb.GetSheets(countSheetName)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_3" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_111">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[countSheetName + 1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:InterruptibleWhile.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InterruptibleWhile>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA5" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="905,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_14" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A7" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity4" sap:VirtualizedContainerService.HintSize="905,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_11" MoveDirection="Down" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtManpowerStatus]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="905,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" Range="[&quot;A7:AB&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                      <ui:BuildDataTable DataTable="[dtFilter1]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="905,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_7" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Code&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Full_x0020_Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Section&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Position&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:BuildDataTable DataTable="[dtFilter2]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="905,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_8" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Grade&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Lặp từng dòng chỉ giữ những dòng có giá trị tại cột Resignation date = blank và &gt;= tháng hiện tại" DataTable="[dtManpowerStatus]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="905,1188" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="855,1081" sap2010:WorkflowViewState.IdRef="Sequence_119">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[row(27).ToString.Trim.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="813,338" sap2010:WorkflowViewState.IdRef="If_34">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_113">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="s:DateTime">[convertDatetime]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(row(27).ToString.Trim)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_114">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                              <If Condition="[String.IsNullOrEmpty(row(27).ToString)]" sap:VirtualizedContainerService.HintSize="813,611" sap2010:WorkflowViewState.IdRef="If_36">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_115">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_13" />
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_14" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="526,454" sap2010:WorkflowViewState.IdRef="Sequence_118">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[convertDatetime.Year &gt;= DateTime.Now.AddMonths(-1).Year And Convert.ToInt32(convertDatetime.ToString(&quot;yyyyMM&quot;)) &gt;= Convert.ToInt32(DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_35">
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_116">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_15" />
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_16" />
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_117">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachRow>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_10" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[pathTotalOvertime]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\Tăng ca\ROBOT\Total Overtime in " + DateTime.Now.AddYears(-1).Year.ToString+ ".xlsx"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Process file Total Overtime năm hiện tại - 1" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="873,5631" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathTotalOvertime]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,5491" sap2010:WorkflowViewState.IdRef="Sequence_95">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[DateTime.Now.AddMonths(-1).ToString("M.yyyy")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[wb.GetSheets.Contains(sheetName)]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_27">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA6" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_79" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA7" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_80" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_94">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA8" EntryMethodName="CopyNewSheet" EntryMethodParameters="[{DateTime.Now.AddMonths(-2).ToString(&quot;M.yyyy&quot;),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_8" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA9" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_9" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA10" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_10" />
                                            <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="[sheetName]" Text="[&quot;CÔNG OVERTIMES &quot; + DateTime.Now.AddMonths(-1).ToString(&quot;yyyy-MM&quot;)]" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data file Export Last Month" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="797,956" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_38" InstanceCachePeriod="3000" Workbook="[wb2]" WorkbookPath="[pathFileLastMonth]">
                                        <ui:ExcelApplicationScope.Body>
                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,816" sap2010:WorkflowViewState.IdRef="Sequence_300">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA11" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{wb2.GetSheets(0)}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_71" />
                                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity5" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_55" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wb2.GetSheets(0)]" WorkBook="[wb2]" />
                                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_24" Range="[&quot;C7:AO&quot; + stLastCell.Substring(1)]" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:FilterDataTable DataTable="[dtExportFile]" DisplayName="Filter Data Table2" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_12" OutputDataTable="[dtExportFile]" SelectColumnsMode="Keep">
                                                <ui:FilterDataTable.Filters>
                                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["VF"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                    <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["vf"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                  </scg:List>
                                                </ui:FilterDataTable.Filters>
                                                <ui:FilterDataTable.SelectColumns>
                                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                    <x:Null />
                                                  </scg:List>
                                                </ui:FilterDataTable.SelectColumns>
                                              </ui:FilterDataTable>
                                              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_2" Range="K7:AO3000" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_7" Key="c" KeyModifiers="Ctrl">
                                                <ui:SendHotkey.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a9f678b2-e753-41bb-be8e-aa649095973f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Danh sách nhân viên tăng ca*' /&gt;" TimeoutMS="5000">
                                                    <ui:Target.WaitForReady>
                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                    </ui:Target.WaitForReady>
                                                  </ui:Target>
                                                </ui:SendHotkey.Target>
                                              </ui:SendHotkey>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ExcelApplicationScope.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelApplicationScope>
                                      <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Transparent]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="797,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_2" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_9" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="745,116" sap2010:WorkflowViewState.IdRef="SendHotkey_8" Key="v" KeyModifiers="Ctrl">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="19714676-4c8a-414a-98f9-de3459e03cec" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Total Overtime*' /&gt;" TimeoutMS="5000">
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_37" Workbook="[wb2]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_29" Range="C7:AP3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_30" Range="AQ8:AR3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_7" SheetName="[sheetName]" StartingCell="C7" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity6" sap:VirtualizedContainerService.HintSize="797,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_12" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA12" EntryMethodName="RoundNumberInRange" EntryMethodParameters="[{&quot;K7:AO&quot; + stLastCell.Substring(1),sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_15" />
                                      <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Lấy lịch làm việc bên HR" CommandType="Text" DataTable="[dtCalendar]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="797,119" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT &quot; + &#xA;&quot; WHERE LOCATION = 'NT' AND DAY LIKE '&quot;+ DateTime.Now.ToString(&quot;yyyyMM&quot;) +&quot;%'&quot;]" ConnectionString="Dsn=RPALIB;uid=robotnt;pwd=robotnt123">
                                        <ui:ExecuteQuery.Parameters>
                                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                        </ui:ExecuteQuery.Parameters>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExecuteQuery>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:String[]">[arrColumn]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:String[]">[{"$K7","$L7","$M7","$N7","$O7","$P7","$Q7","$R7","$S7","$T7","$U7","$V7","$W7","$X7","$Y7","$Z7","$AA7","$AB7","$AC7","$AD7","$AE7","$AF7","$AG7","$AH7","$AI7","$AJ7","$AK7","$AL7","$AM7","$AN7","$AO7"}]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCalendar]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="797,550" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,402" sap2010:WorkflowViewState.IdRef="Sequence_123">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[String.IsNullOrEmpty(sumColumnTotal)]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_37">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_121">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_122">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[sumColumnTotal + "," + arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                      </ui:ForEachRow>
                                      <ui:ExcelWriteCell Cell="AP7" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="[sheetName]" Text="[&quot;=+SUM(&quot;+sumColumnTotal+&quot;)&quot;]" />
                                      <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
                                      <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;AP7:AR&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_3" SheetName="[sheetName]" SourceRange="AP7:AR7" />
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_13" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA13" EntryMethodName="SortColumnTOTAL" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_62" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="B100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity7" sap:VirtualizedContainerService.HintSize="745,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_13" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="TOTAL" WorkBook="[wb]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="745,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_5" Range="[&quot;B5:F&quot; + stLastCell.Substring(1)]" SheetName="TOTAL" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="TOTAL" StartingCell="B5" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_9" SheetName="TOTAL" StartingCell="F5" />
                                      <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_2" />
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_8" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_43">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <If sap2010:Annotation.AnnotationText="Tháng hiện tại &lt; 4 -&gt; pathTotalOvertime = năm hiện tại -1" Condition="[DateTime.Now.Month &lt; 4]" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="If_23">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,448" sap2010:WorkflowViewState.IdRef="Sequence_80">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[pathTotalOvertime]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\Tăng ca\ROBOT\Total Overtime in " + DateTime.Now.AddYears(-1).Year.ToString+ ".xlsx"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Sequence sap2010:Annotation.AnnotationText="Write data vào sheet tháng hiện tại -1" DisplayName="Process this month - 1" sap:VirtualizedContainerService.HintSize="262,108" sap2010:WorkflowViewState.IdRef="Sequence_145">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data Manpower Status" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,82" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_12" InstanceCachePeriod="3000" ReadOnly="True" Workbook="[wb]" WorkbookPath="[pathVFDivisionManpower]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="947,1170" sap2010:WorkflowViewState.IdRef="Sequence_137">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="905,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Lặp qua từng sheet tìm sheet tên có chứa VF yyyy để read data" Condition="[countSheetName &lt; wb.GetSheets.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="905,108" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_4">
                                        <ui:InterruptibleWhile.Body>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,592" sap2010:WorkflowViewState.IdRef="Sequence_129">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[wb.GetSheets(countSheetName).ToString.ToUpper.Contains(&quot;VF 20&quot;)]" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_39">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_127">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[wb.GetSheets(countSheetName)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_4" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_128">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[countSheetName + 1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:InterruptibleWhile.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InterruptibleWhile>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA14" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="905,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_16" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A7" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity8" sap:VirtualizedContainerService.HintSize="905,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_14" MoveDirection="Down" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtManpowerStatus]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="905,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" Range="[&quot;A7:AB&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                      <ui:BuildDataTable DataTable="[dtFilter1]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="905,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_9" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Code&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Full_x0020_Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Section&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Position&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:BuildDataTable DataTable="[dtFilter2]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="905,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_10" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Grade&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Lặp từng dòng chỉ giữ những dòng có giá trị tại cột Resignation date = blank và &gt;= tháng hiện tại" DataTable="[dtManpowerStatus]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="905,123" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="855,1081" sap2010:WorkflowViewState.IdRef="Sequence_136">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[row(27).ToString.Trim.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="813,338" sap2010:WorkflowViewState.IdRef="If_40">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_130">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="s:DateTime">[convertDatetime]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(row(27).ToString.Trim)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_131">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                              <If Condition="[String.IsNullOrEmpty(row(27).ToString)]" sap:VirtualizedContainerService.HintSize="813,611" sap2010:WorkflowViewState.IdRef="If_42">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_132">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_17" />
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_18" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="526,454" sap2010:WorkflowViewState.IdRef="Sequence_135">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[convertDatetime.Year &gt;= DateTime.Now.AddMonths(-1).Year And Convert.ToInt32(convertDatetime.ToString(&quot;yyyyMM&quot;)) &gt;= Convert.ToInt32(DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_41">
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_133">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_19" />
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_20" />
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_134">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachRow>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="905,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_11" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Process file Total Overtime năm hiện tại - 1" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="873,5631" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_14" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathTotalOvertime]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,5491" sap2010:WorkflowViewState.IdRef="Sequence_144">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[DateTime.Now.AddMonths(-1).ToString("M.yyyy")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[wb.GetSheets.Contains(sheetName)]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_43">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_139">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA15" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_81" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA16" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_82" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_140">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA17" EntryMethodName="CopyNewSheet" EntryMethodParameters="[{DateTime.Now.AddMonths(-2).ToString(&quot;M.yyyy&quot;),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_18" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA18" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_19" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA19" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_20" />
                                            <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="[sheetName]" Text="[&quot;CÔNG OVERTIMES &quot; + DateTime.Now.AddMonths(-1).ToString(&quot;yyyy-MM&quot;)]" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data file Export Last Month" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="797,956" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_39" InstanceCachePeriod="3000" Workbook="[wb2]" WorkbookPath="[pathFileLastMonth]">
                                        <ui:ExcelApplicationScope.Body>
                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,816" sap2010:WorkflowViewState.IdRef="Sequence_301">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA20" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{wb2.GetSheets(0)}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_72" />
                                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity9" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_56" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wb2.GetSheets(0)]" WorkBook="[wb2]" />
                                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_25" Range="[&quot;C7:AO&quot; + stLastCell.Substring(1)]" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:FilterDataTable DataTable="[dtExportFile]" DisplayName="Filter Data Table3" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_13" OutputDataTable="[dtExportFile]" SelectColumnsMode="Keep">
                                                <ui:FilterDataTable.Filters>
                                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["VF"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                    <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["vf"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                  </scg:List>
                                                </ui:FilterDataTable.Filters>
                                                <ui:FilterDataTable.SelectColumns>
                                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                    <x:Null />
                                                  </scg:List>
                                                </ui:FilterDataTable.SelectColumns>
                                              </ui:FilterDataTable>
                                              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_4" Range="K7:AO3000" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_11" Key="c" KeyModifiers="Ctrl">
                                                <ui:SendHotkey.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a9f678b2-e753-41bb-be8e-aa649095973f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Danh sách nhân viên tăng ca*' /&gt;" TimeoutMS="5000">
                                                    <ui:Target.WaitForReady>
                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                    </ui:Target.WaitForReady>
                                                  </ui:Target>
                                                </ui:SendHotkey.Target>
                                              </ui:SendHotkey>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ExcelApplicationScope.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelApplicationScope>
                                      <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Transparent]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="745,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_3" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_10" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="745,116" sap2010:WorkflowViewState.IdRef="SendHotkey_12" Key="v" KeyModifiers="Ctrl">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="19714676-4c8a-414a-98f9-de3459e03cec" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Total Overtime*' /&gt;" TimeoutMS="5000">
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_38" Workbook="[wb2]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_6" Range="C7:AP3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_7" Range="AQ8:AR3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_10" SheetName="[sheetName]" StartingCell="C7" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity10" sap:VirtualizedContainerService.HintSize="797,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_17" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA21" EntryMethodName="RoundNumberInRange" EntryMethodParameters="[{&quot;K7:AO&quot; + stLastCell.Substring(1),sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_21" />
                                      <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Lấy lịch làm việc bên HR" CommandType="Text" DataTable="[dtCalendar]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="797,119" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT &quot; + &#xA;&quot; WHERE LOCATION = 'NT' AND DAY LIKE '&quot;+ DateTime.Now.ToString(&quot;yyyyMM&quot;) +&quot;%'&quot;]" ConnectionString="Dsn=RPALIB;uid=robotnt;pwd=robotnt123">
                                        <ui:ExecuteQuery.Parameters>
                                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                        </ui:ExecuteQuery.Parameters>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExecuteQuery>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:String[]">[arrColumn]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:String[]">[{"$K7","$L7","$M7","$N7","$O7","$P7","$Q7","$R7","$S7","$T7","$U7","$V7","$W7","$X7","$Y7","$Z7","$AA7","$AB7","$AC7","$AD7","$AE7","$AF7","$AG7","$AH7","$AI7","$AJ7","$AK7","$AL7","$AM7","$AN7","$AO7"}]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCalendar]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="797,550" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,402" sap2010:WorkflowViewState.IdRef="Sequence_143">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[String.IsNullOrEmpty(sumColumnTotal)]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_44">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_141">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_73">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_142">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[sumColumnTotal + "," + arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                      </ui:ForEachRow>
                                      <ui:ExcelWriteCell Cell="AP7" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="[sheetName]" Text="[&quot;=+SUM(&quot;+sumColumnTotal+&quot;)&quot;]" />
                                      <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
                                      <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;AP7:AR&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_4" SheetName="[sheetName]" SourceRange="AP7:AR7" />
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_14" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA22" EntryMethodName="SortColumnTOTAL" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_63" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="B100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity11" sap:VirtualizedContainerService.HintSize="797,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_18" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="TOTAL" WorkBook="[wb]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_8" Range="[&quot;B5:F&quot; + stLastCell.Substring(1)]" SheetName="TOTAL" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_11" SheetName="TOTAL" StartingCell="B5" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_12" SheetName="TOTAL" StartingCell="F5" />
                                      <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_3" />
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_13" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                            <Sequence sap2010:Annotation.AnnotationText="Write data vào sheet tháng hiện tại" DisplayName="Process this month" sap:VirtualizedContainerService.HintSize="242,338" sap2010:WorkflowViewState.IdRef="Sequence_164">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data Manpower Status" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,82" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_15" InstanceCachePeriod="3000" ReadOnly="True" Workbook="[wb]" WorkbookPath="[pathVFDivisionManpower]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,1170" sap2010:WorkflowViewState.IdRef="Sequence_156">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Lặp qua từng sheet tìm sheet tên có chứa VF yyyy để read data" Condition="[countSheetName &lt; wb.GetSheets.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_5">
                                        <ui:InterruptibleWhile.Body>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,592" sap2010:WorkflowViewState.IdRef="Sequence_148">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[wb.GetSheets(countSheetName).ToString.ToUpper.Contains(&quot;VF 20&quot;)]" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_45">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_146">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[wb.GetSheets(countSheetName)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_5" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_147">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[countSheetName + 1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:InterruptibleWhile.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InterruptibleWhile>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA23" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_22" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A7" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity12" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_19" MoveDirection="Down" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtManpowerStatus]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" Range="[&quot;A7:AB&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                      <ui:BuildDataTable DataTable="[dtFilter1]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_11" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Code&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Full_x0020_Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Section&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Position&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:BuildDataTable DataTable="[dtFilter2]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_12" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Grade&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Lặp từng dòng chỉ giữ những dòng có giá trị tại cột Resignation date = blank và &gt;= tháng hiện tại" DataTable="[dtManpowerStatus]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="340,123" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="855,1081" sap2010:WorkflowViewState.IdRef="Sequence_155">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[row(27).ToString.Trim.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="813,338" sap2010:WorkflowViewState.IdRef="If_46">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_149">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_79">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="s:DateTime">[convertDatetime]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(row(27).ToString.Trim)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_150">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                              <If Condition="[String.IsNullOrEmpty(row(27).ToString)]" sap:VirtualizedContainerService.HintSize="813,611" sap2010:WorkflowViewState.IdRef="If_48">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_151">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_21" />
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_22" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="526,454" sap2010:WorkflowViewState.IdRef="Sequence_154">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[convertDatetime.Year &gt;= DateTime.Now.Year And Convert.ToInt32(convertDatetime.ToString(&quot;yyyyMM&quot;)) &gt;= Convert.ToInt32(DateTime.Now.ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_47">
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_152">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_23" />
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_24" />
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_153">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachRow>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_14" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Process file Total Overtime năm hiện tại - 1" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="873,5631" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_17" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathTotalOvertime]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,5491" sap2010:WorkflowViewState.IdRef="Sequence_163">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_80">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("M.yyyy")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[wb.GetSheets.Contains(sheetName)]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_49">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_158">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA24" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_85" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA25" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_86" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_159">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA26" EntryMethodName="CopyNewSheet" EntryMethodParameters="[{DateTime.Now.AddMonths(-1).ToString(&quot;M.yyyy&quot;),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_24" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA27" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_25" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA28" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_26" />
                                            <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="[sheetName]" Text="[&quot;CÔNG OVERTIMES &quot; + DateTime.Now.ToString(&quot;yyyy-MM&quot;)]" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data file Export This Month" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="797,956" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_40" InstanceCachePeriod="3000" Workbook="[wb2]" WorkbookPath="[pathFileThisMonth]">
                                        <ui:ExcelApplicationScope.Body>
                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,816" sap2010:WorkflowViewState.IdRef="Sequence_302">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA29" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{wb2.GetSheets(0)}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_73" />
                                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity13" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_57" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wb2.GetSheets(0)]" WorkBook="[wb2]" />
                                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_26" Range="[&quot;C7:AO&quot; + stLastCell.Substring(1)]" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:FilterDataTable DataTable="[dtExportFile]" DisplayName="Filter Data Table4" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_14" OutputDataTable="[dtExportFile]" SelectColumnsMode="Keep">
                                                <ui:FilterDataTable.Filters>
                                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["VF"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                    <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["vf"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                  </scg:List>
                                                </ui:FilterDataTable.Filters>
                                                <ui:FilterDataTable.SelectColumns>
                                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                    <x:Null />
                                                  </scg:List>
                                                </ui:FilterDataTable.SelectColumns>
                                              </ui:FilterDataTable>
                                              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_5" Range="K7:AO3000" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_14" Key="c" KeyModifiers="Ctrl">
                                                <ui:SendHotkey.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a9f678b2-e753-41bb-be8e-aa649095973f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Danh sách nhân viên tăng ca*' /&gt;" TimeoutMS="5000">
                                                    <ui:Target.WaitForReady>
                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                    </ui:Target.WaitForReady>
                                                  </ui:Target>
                                                </ui:SendHotkey.Target>
                                              </ui:SendHotkey>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ExcelApplicationScope.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelApplicationScope>
                                      <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Transparent]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="745,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_4" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_11" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="745,116" sap2010:WorkflowViewState.IdRef="SendHotkey_13" Key="v" KeyModifiers="Ctrl">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="19714676-4c8a-414a-98f9-de3459e03cec" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Total Overtime*' /&gt;" TimeoutMS="5000">
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_39" Workbook="[wb2]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_9" Range="C7:AP3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_10" Range="AQ8:AR3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_13" SheetName="[sheetName]" StartingCell="C7" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity14" sap:VirtualizedContainerService.HintSize="797,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_22" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA30" EntryMethodName="RoundNumberInRange" EntryMethodParameters="[{&quot;K7:AO&quot; + stLastCell.Substring(1),sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_27" />
                                      <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Lấy lịch làm việc bên HR" CommandType="Text" DataTable="[dtCalendar]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="745,119" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT &quot; + &#xA;&quot; WHERE LOCATION = 'NT' AND DAY LIKE '&quot;+ DateTime.Now.ToString(&quot;yyyyMM&quot;) +&quot;%'&quot;]" ConnectionString="Dsn=RPALIB;uid=robotnt;pwd=robotnt123">
                                        <ui:ExecuteQuery.Parameters>
                                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                        </ui:ExecuteQuery.Parameters>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExecuteQuery>
                                      <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_82">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:String[]">[arrColumn]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:String[]">[{"$K7","$L7","$M7","$N7","$O7","$P7","$Q7","$R7","$S7","$T7","$U7","$V7","$W7","$X7","$Y7","$Z7","$AA7","$AB7","$AC7","$AD7","$AE7","$AF7","$AG7","$AH7","$AI7","$AJ7","$AK7","$AL7","$AM7","$AN7","$AO7"}]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_83">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCalendar]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="797,550" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,402" sap2010:WorkflowViewState.IdRef="Sequence_162">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[String.IsNullOrEmpty(sumColumnTotal)]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_50">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_160">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_84">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_161">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_85">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[sumColumnTotal + "," + arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                      </ui:ForEachRow>
                                      <ui:ExcelWriteCell Cell="AP7" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="[sheetName]" Text="[&quot;=+SUM(&quot;+sumColumnTotal+&quot;)&quot;]" />
                                      <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_5" />
                                      <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;AP7:AR&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_5" SheetName="[sheetName]" SourceRange="AP7:AR7" />
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_15" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA31" EntryMethodName="SortColumnTOTAL" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_64" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="B100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity15" sap:VirtualizedContainerService.HintSize="745,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_23" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="TOTAL" WorkBook="[wb]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="745,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_11" Range="[&quot;B5:F&quot; + stLastCell.Substring(1)]" SheetName="TOTAL" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_14" SheetName="TOTAL" StartingCell="B5" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_15" SheetName="TOTAL" StartingCell="F5" />
                                      <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_4" />
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_16" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_81">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <If sap2010:Annotation.AnnotationText="Tháng hiện tại &gt; 4 -&gt; pathTotalOvertime = năm hiện tại" Condition="[DateTime.Now.Month &gt; 4]" sap:VirtualizedContainerService.HintSize="484,666" sap2010:WorkflowViewState.IdRef="If_38">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,448" sap2010:WorkflowViewState.IdRef="Sequence_125">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[pathTotalOvertime]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\Tăng ca\ROBOT\Total Overtime in " + DateTime.Now.Year.ToString+ ".xlsx"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Sequence sap2010:Annotation.AnnotationText="Write data vào sheet tháng hiện tại -1" DisplayName="Process this month - 1" sap:VirtualizedContainerService.HintSize="262,108" sap2010:WorkflowViewState.IdRef="Sequence_183">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data Manpower Status" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,82" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_18" InstanceCachePeriod="3000" ReadOnly="True" Workbook="[wb]" WorkbookPath="[pathVFDivisionManpower]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,1170" sap2010:WorkflowViewState.IdRef="Sequence_175">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Lặp qua từng sheet tìm sheet tên có chứa VF yyyy để read data" Condition="[countSheetName &lt; wb.GetSheets.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_6">
                                        <ui:InterruptibleWhile.Body>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,592" sap2010:WorkflowViewState.IdRef="Sequence_167">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[wb.GetSheets(countSheetName).ToString.ToUpper.Contains(&quot;VF 20&quot;)]" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_51">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_165">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[wb.GetSheets(countSheetName)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_6" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_166">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[countSheetName + 1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:InterruptibleWhile.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InterruptibleWhile>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA32" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_28" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A7" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity16" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_24" MoveDirection="Down" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtManpowerStatus]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" Range="[&quot;A7:AB&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                      <ui:BuildDataTable DataTable="[dtFilter1]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_13" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Code&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Full_x0020_Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Section&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Position&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:BuildDataTable DataTable="[dtFilter2]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_14" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Grade&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Lặp từng dòng chỉ giữ những dòng có giá trị tại cột Resignation date = blank và &gt;= tháng hiện tại" DataTable="[dtManpowerStatus]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="340,123" sap2010:WorkflowViewState.IdRef="ForEachRow_12">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="855,1081" sap2010:WorkflowViewState.IdRef="Sequence_174">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[row(27).ToString.Trim.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="813,338" sap2010:WorkflowViewState.IdRef="If_52">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_168">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="s:DateTime">[convertDatetime]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(row(27).ToString.Trim)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_169">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                              <If Condition="[String.IsNullOrEmpty(row(27).ToString)]" sap:VirtualizedContainerService.HintSize="813,611" sap2010:WorkflowViewState.IdRef="If_54">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_170">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_25" />
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_26" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="526,454" sap2010:WorkflowViewState.IdRef="Sequence_173">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[convertDatetime.Year &gt;= DateTime.Now.AddMonths(-1).Year And Convert.ToInt32(convertDatetime.ToString(&quot;yyyyMM&quot;)) &gt;= Convert.ToInt32(DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_53">
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_171">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_27" />
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_28" />
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_172">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachRow>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_17" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Process file Total Overtime năm hiện tại" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="873,5631" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_20" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathTotalOvertime]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,5491" sap2010:WorkflowViewState.IdRef="Sequence_182">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_90">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[DateTime.Now.AddMonths(-1).ToString("M.yyyy")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[wb.GetSheets.Contains(sheetName)]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_55">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_177">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA33" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_87" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA34" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_88" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_178">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA35" EntryMethodName="CopyNewSheet" EntryMethodParameters="[{DateTime.Now.AddMonths(-2).ToString(&quot;M.yyyy&quot;),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_30" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA36" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_31" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA37" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_32" />
                                            <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="[sheetName]" Text="[&quot;CÔNG OVERTIMES &quot; + DateTime.Now.AddMonths(-1).ToString(&quot;yyyy-MM&quot;)]" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data file Export Last Month" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="797,956" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_41" InstanceCachePeriod="3000" Workbook="[wb2]" WorkbookPath="[pathFileLastMonth]">
                                        <ui:ExcelApplicationScope.Body>
                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,816" sap2010:WorkflowViewState.IdRef="Sequence_303">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA38" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{wb2.GetSheets(0)}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_74" />
                                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity17" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_58" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wb2.GetSheets(0)]" WorkBook="[wb2]" />
                                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_27" Range="[&quot;C7:AO&quot; + stLastCell.Substring(1)]" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:FilterDataTable DataTable="[dtExportFile]" DisplayName="Filter Data Table5" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_15" OutputDataTable="[dtExportFile]" SelectColumnsMode="Keep">
                                                <ui:FilterDataTable.Filters>
                                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["VF"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                    <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["vf"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                  </scg:List>
                                                </ui:FilterDataTable.Filters>
                                                <ui:FilterDataTable.SelectColumns>
                                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                    <x:Null />
                                                  </scg:List>
                                                </ui:FilterDataTable.SelectColumns>
                                              </ui:FilterDataTable>
                                              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_6" Range="K7:AO3000" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_16" Key="c" KeyModifiers="Ctrl">
                                                <ui:SendHotkey.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a9f678b2-e753-41bb-be8e-aa649095973f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Danh sách nhân viên tăng ca*' /&gt;" TimeoutMS="5000">
                                                    <ui:Target.WaitForReady>
                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                    </ui:Target.WaitForReady>
                                                  </ui:Target>
                                                </ui:SendHotkey.Target>
                                              </ui:SendHotkey>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ExcelApplicationScope.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelApplicationScope>
                                      <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Transparent]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="745,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_5" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_12" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="745,116" sap2010:WorkflowViewState.IdRef="SendHotkey_15" Key="v" KeyModifiers="Ctrl">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="19714676-4c8a-414a-98f9-de3459e03cec" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Total Overtime*' /&gt;" TimeoutMS="5000">
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_40" Workbook="[wb2]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_12" Range="C7:AP3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_13" Range="AQ8:AR3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_16" SheetName="[sheetName]" StartingCell="C7" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity18" sap:VirtualizedContainerService.HintSize="797,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_27" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA39" EntryMethodName="RoundNumberInRange" EntryMethodParameters="[{&quot;K7:AO&quot; + stLastCell.Substring(1),sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_33" />
                                      <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Lấy lịch làm việc bên HR" CommandType="Text" DataTable="[dtCalendar]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="745,119" sap2010:WorkflowViewState.IdRef="ExecuteQuery_6" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT &quot; + &#xA;&quot; WHERE LOCATION = 'NT' AND DAY LIKE '&quot;+ DateTime.Now.ToString(&quot;yyyyMM&quot;) +&quot;%'&quot;]" ConnectionString="Dsn=RPALIB;uid=robotnt;pwd=robotnt123">
                                        <ui:ExecuteQuery.Parameters>
                                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                        </ui:ExecuteQuery.Parameters>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExecuteQuery>
                                      <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:String[]">[arrColumn]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:String[]">[{"$K7","$L7","$M7","$N7","$O7","$P7","$Q7","$R7","$S7","$T7","$U7","$V7","$W7","$X7","$Y7","$Z7","$AA7","$AB7","$AC7","$AD7","$AE7","$AF7","$AG7","$AH7","$AI7","$AJ7","$AK7","$AL7","$AM7","$AN7","$AO7"}]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_93">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCalendar]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="797,550" sap2010:WorkflowViewState.IdRef="ForEachRow_13">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,402" sap2010:WorkflowViewState.IdRef="Sequence_181">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[String.IsNullOrEmpty(sumColumnTotal)]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_56">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_179">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_180">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[sumColumnTotal + "," + arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                      </ui:ForEachRow>
                                      <ui:ExcelWriteCell Cell="AP7" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="[sheetName]" Text="[&quot;=+SUM(&quot;+sumColumnTotal+&quot;)&quot;]" />
                                      <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_6" />
                                      <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;AP7:AR&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_6" SheetName="[sheetName]" SourceRange="AP7:AR7" />
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_16" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA40" EntryMethodName="SortColumnTOTAL" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_65" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="B100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity19" sap:VirtualizedContainerService.HintSize="745,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_28" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="TOTAL" WorkBook="[wb]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="745,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_14" Range="[&quot;B5:F&quot; + stLastCell.Substring(1)]" SheetName="TOTAL" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_17" SheetName="TOTAL" StartingCell="B5" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_18" SheetName="TOTAL" StartingCell="F5" />
                                      <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_5" />
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_19" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                            <Sequence sap2010:Annotation.AnnotationText="Write data vào sheet tháng hiện tại" DisplayName="Process this month" sap:VirtualizedContainerService.HintSize="242,338" sap2010:WorkflowViewState.IdRef="Sequence_202">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data Manpower Status" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,82" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_21" InstanceCachePeriod="3000" ReadOnly="True" Workbook="[wb]" WorkbookPath="[pathVFDivisionManpower]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,1170" sap2010:WorkflowViewState.IdRef="Sequence_194">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_96">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Lặp qua từng sheet tìm sheet tên có chứa VF yyyy để read data" Condition="[countSheetName &lt; wb.GetSheets.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_7">
                                        <ui:InterruptibleWhile.Body>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,592" sap2010:WorkflowViewState.IdRef="Sequence_186">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[wb.GetSheets(countSheetName).ToString.ToUpper.Contains(&quot;VF 20&quot;)]" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_57">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_184">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_97">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[wb.GetSheets(countSheetName)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_7" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_185">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_98">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[countSheetName + 1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:InterruptibleWhile.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InterruptibleWhile>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA41" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_34" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A7" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity20" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_29" MoveDirection="Down" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtManpowerStatus]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_13" Range="[&quot;A7:AB&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                      <ui:BuildDataTable DataTable="[dtFilter1]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_15" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Code&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Full_x0020_Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Section&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Position&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:BuildDataTable DataTable="[dtFilter2]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_16" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Grade&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                      <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Lặp từng dòng chỉ giữ những dòng có giá trị tại cột Resignation date = blank và &gt;= tháng hiện tại" DataTable="[dtManpowerStatus]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="340,123" sap2010:WorkflowViewState.IdRef="ForEachRow_14">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="855,1081" sap2010:WorkflowViewState.IdRef="Sequence_193">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[row(27).ToString.Trim.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="813,338" sap2010:WorkflowViewState.IdRef="If_58">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_187">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_99">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="s:DateTime">[convertDatetime]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(row(27).ToString.Trim)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_188">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                              <If Condition="[String.IsNullOrEmpty(row(27).ToString)]" sap:VirtualizedContainerService.HintSize="813,611" sap2010:WorkflowViewState.IdRef="If_60">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_189">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_29" />
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_30" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="526,454" sap2010:WorkflowViewState.IdRef="Sequence_192">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[convertDatetime.Year &gt;= DateTime.Now.Year And Convert.ToInt32(convertDatetime.ToString(&quot;yyyyMM&quot;)) &gt;= Convert.ToInt32(DateTime.Now.ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_59">
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_190">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_31" />
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_32" />
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_191">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachRow>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_20" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                              <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Process file Total Overtime năm hiện tại" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="873,5631" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_23" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathTotalOvertime]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,5491" sap2010:WorkflowViewState.IdRef="Sequence_201">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_100">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("M.yyyy")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[wb.GetSheets.Contains(sheetName)]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_61">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_196">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA42" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_89" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA43" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_90" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_197">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA44" EntryMethodName="CopyNewSheet" EntryMethodParameters="[{DateTime.Now.AddMonths(-1).ToString(&quot;M.yyyy&quot;),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_36" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA45" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_37" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA46" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_38" />
                                            <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="[sheetName]" Text="[&quot;CÔNG OVERTIMES &quot; + DateTime.Now.ToString(&quot;yyyy-MM&quot;)]" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data file Export This Month" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="797,956" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_42" InstanceCachePeriod="3000" Workbook="[wb2]" WorkbookPath="[pathFileThisMonth]">
                                        <ui:ExcelApplicationScope.Body>
                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,816" sap2010:WorkflowViewState.IdRef="Sequence_304">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA47" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{wb2.GetSheets(0)}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_75" />
                                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity21" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_59" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wb2.GetSheets(0)]" WorkBook="[wb2]" />
                                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_28" Range="[&quot;C7:AO&quot; + stLastCell.Substring(1)]" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:FilterDataTable DataTable="[dtExportFile]" DisplayName="Filter Data Table6" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_16" OutputDataTable="[dtExportFile]" SelectColumnsMode="Keep">
                                                <ui:FilterDataTable.Filters>
                                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["VF"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                    <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["vf"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                  </scg:List>
                                                </ui:FilterDataTable.Filters>
                                                <ui:FilterDataTable.SelectColumns>
                                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                    <x:Null />
                                                  </scg:List>
                                                </ui:FilterDataTable.SelectColumns>
                                              </ui:FilterDataTable>
                                              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_7" Range="K7:AO3000" SheetName="[wb2.GetSheets(0)]" />
                                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_18" Key="c" KeyModifiers="Ctrl">
                                                <ui:SendHotkey.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a9f678b2-e753-41bb-be8e-aa649095973f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Danh sách nhân viên tăng ca*' /&gt;" TimeoutMS="5000">
                                                    <ui:Target.WaitForReady>
                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                    </ui:Target.WaitForReady>
                                                  </ui:Target>
                                                </ui:SendHotkey.Target>
                                              </ui:SendHotkey>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ExcelApplicationScope.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelApplicationScope>
                                      <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Transparent]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="745,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_6" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_13" Range="K7:AO3000" SheetName="[sheetName]" />
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="745,116" sap2010:WorkflowViewState.IdRef="SendHotkey_17" Key="v" KeyModifiers="Ctrl">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="19714676-4c8a-414a-98f9-de3459e03cec" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Total Overtime*' /&gt;" TimeoutMS="5000">
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_41" Workbook="[wb2]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_15" Range="C7:AP3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_16" Range="AQ8:AR3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_19" SheetName="[sheetName]" StartingCell="C7" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity22" sap:VirtualizedContainerService.HintSize="797,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_32" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA48" EntryMethodName="RoundNumberInRange" EntryMethodParameters="[{&quot;K7:AO&quot; + stLastCell.Substring(1),sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_39" />
                                      <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Lấy lịch làm việc bên HR" CommandType="Text" DataTable="[dtCalendar]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="797,119" sap2010:WorkflowViewState.IdRef="ExecuteQuery_7" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT &quot; + &#xA;&quot; WHERE LOCATION = 'NT' AND DAY LIKE '&quot;+ DateTime.Now.ToString(&quot;yyyyMM&quot;) +&quot;%'&quot;]" ConnectionString="Dsn=RPALIB;uid=robotnt;pwd=robotnt123">
                                        <ui:ExecuteQuery.Parameters>
                                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                        </ui:ExecuteQuery.Parameters>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExecuteQuery>
                                      <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_102">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:String[]">[arrColumn]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:String[]">[{"$K7","$L7","$M7","$N7","$O7","$P7","$Q7","$R7","$S7","$T7","$U7","$V7","$W7","$X7","$Y7","$Z7","$AA7","$AB7","$AC7","$AD7","$AE7","$AF7","$AG7","$AH7","$AI7","$AJ7","$AK7","$AL7","$AM7","$AN7","$AO7"}]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_103">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCalendar]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="797,550" sap2010:WorkflowViewState.IdRef="ForEachRow_15">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,402" sap2010:WorkflowViewState.IdRef="Sequence_200">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[String.IsNullOrEmpty(sumColumnTotal)]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_62">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_198">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_104">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_199">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_105">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[sumColumnTotal + "," + arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                      </ui:ForEachRow>
                                      <ui:ExcelWriteCell Cell="AP7" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="[sheetName]" Text="[&quot;=+SUM(&quot;+sumColumnTotal+&quot;)&quot;]" />
                                      <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_7" />
                                      <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;AP7:AR&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_7" SheetName="[sheetName]" SourceRange="AP7:AR7" />
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_17" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA49" EntryMethodName="SortColumnTOTAL" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_66" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="B100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity23" sap:VirtualizedContainerService.HintSize="745,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_33" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="TOTAL" WorkBook="[wb]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="745,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_17" Range="[&quot;B5:F&quot; + stLastCell.Substring(1)]" SheetName="TOTAL" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_20" SheetName="TOTAL" StartingCell="B5" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_21" SheetName="TOTAL" StartingCell="F5" />
                                      <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_6" />
                                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_22" Workbook="[wb]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_126">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_204">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <If sap2010:Annotation.AnnotationText="Ngày hiện tại &gt;= 7 (các ngày trong tuần có tháng giống nhau)&#xA;Write data vào sheet tháng hiện tại" Condition="[DateTime.Now.Day &gt;= 7]" sap:VirtualizedContainerService.HintSize="484,745" sap2010:WorkflowViewState.IdRef="If_70">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="242,526" sap2010:WorkflowViewState.IdRef="Sequence_224">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If sap2010:Annotation.AnnotationText="Tháng hiện tại = 4 kiểm tra chưa có file Total Overtime thì copy file Total Overtime mới&#xA;Xử lí file cũ và file mới copy" Condition="[DateTime.Now.Month = 4]" sap:VirtualizedContainerService.HintSize="200,138" sap2010:WorkflowViewState.IdRef="If_69">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="565,1122" sap2010:WorkflowViewState.IdRef="Sequence_222">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data Manpower Status" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="523,82" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_24" InstanceCachePeriod="3000" ReadOnly="True" Workbook="[wb]" WorkbookPath="[pathVFDivisionManpower]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="947,2235" sap2010:WorkflowViewState.IdRef="Sequence_215">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_106">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Lặp qua từng sheet tìm sheet tên có chứa VF yyyy để read data" Condition="[countSheetName &lt; wb.GetSheets.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,108" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_8">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,592" sap2010:WorkflowViewState.IdRef="Sequence_207">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[wb.GetSheets(countSheetName).ToString.ToUpper.Contains(&quot;VF 20&quot;)]" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_64">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_205">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_107">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[wb.GetSheets(countSheetName)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_8" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_206">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_108">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[countSheetName + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InterruptibleWhile>
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA50" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_40" />
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A7" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity24" sap:VirtualizedContainerService.HintSize="562,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_34" MoveDirection="Down" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dtManpowerStatus]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_15" Range="[&quot;A7:AB&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                    <ui:BuildDataTable DataTable="[dtFilter1]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_17" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Code&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Full_x0020_Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Section&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Position&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                    <ui:BuildDataTable DataTable="[dtFilter2]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_18" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Grade&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                    <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Lặp từng dòng chỉ giữ những dòng có giá trị tại cột Resignation date = blank và &gt;= tháng hiện tại" DataTable="[dtManpowerStatus]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="562,123" sap2010:WorkflowViewState.IdRef="ForEachRow_16">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="855,1081" sap2010:WorkflowViewState.IdRef="Sequence_214">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[row(27).ToString.Trim.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="813,338" sap2010:WorkflowViewState.IdRef="If_65">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_208">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_109">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="s:DateTime">[convertDatetime]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(row(27).ToString.Trim)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_209">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <If Condition="[String.IsNullOrEmpty(row(27).ToString)]" sap:VirtualizedContainerService.HintSize="813,611" sap2010:WorkflowViewState.IdRef="If_67">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_210">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_33" />
                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_34" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="526,454" sap2010:WorkflowViewState.IdRef="Sequence_213">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If Condition="[convertDatetime.Year &gt;= DateTime.Now.Year And Convert.ToInt32(convertDatetime.ToString(&quot;yyyyMM&quot;)) &gt;= Convert.ToInt32(DateTime.Now.ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_66">
                                                    <If.Then>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_211">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_35" />
                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_36" />
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_212">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEachRow>
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_23" Workbook="[wb]" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelApplicationScope>
                            <Assign sap:VirtualizedContainerService.HintSize="523,60" sap2010:WorkflowViewState.IdRef="Assign_110">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[pathTotalOvertime]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\Tăng ca\ROBOT\Total Overtime in " + DateTime.Now.Year.ToString+ ".xlsx"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:PathExists DisplayName="Path Exists" Exists="[checkExists]" sap:VirtualizedContainerService.HintSize="523,89" sap2010:WorkflowViewState.IdRef="PathExists_6" Path="[pathTotalOvertime]" PathType="File" />
                            <If Condition="[checkExists = False]" sap:VirtualizedContainerService.HintSize="523,546" sap2010:WorkflowViewState.IdRef="If_72">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="487,359" sap2010:WorkflowViewState.IdRef="Sequence_228">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:CopyFile ContinueOnError="{x:Null}" Destination="[pathTotalOvertime]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="445,157" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[Path_template + &quot;Make Total Overtime -VF\Total Overtime_Template.xlsx&quot;]" />
                                  <bew:RenameSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Rename Work Sheet" FilePath="[pathTotalOvertime]" sap:VirtualizedContainerService.HintSize="445,70" sap2010:WorkflowViewState.IdRef="RenameSheet_3" NewSheetName="[&quot;4.&quot; + DateTime.Now.Year.ToString]" SheetName="4.2021" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_229">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                            <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="pathTotalOvertime năm hiện tại" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="821,4428" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_26" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathTotalOvertime]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="787,4288" sap2010:WorkflowViewState.IdRef="Sequence_220">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data file Export This Month" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="745,956" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_43" InstanceCachePeriod="3000" Workbook="[wb2]" WorkbookPath="[pathFileThisMonth]">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,816" sap2010:WorkflowViewState.IdRef="Sequence_305">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA51" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{wb2.GetSheets(0)}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_76" />
                                            <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity25" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_60" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wb2.GetSheets(0)]" WorkBook="[wb2]" />
                                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_29" Range="[&quot;C7:AO&quot; + stLastCell.Substring(1)]" SheetName="[wb2.GetSheets(0)]" />
                                            <ui:FilterDataTable DataTable="[dtExportFile]" DisplayName="Filter Data Table7" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_17" OutputDataTable="[dtExportFile]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                                    <ui:FilterOperationArgument.Column>
                                                      <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                    </ui:FilterOperationArgument.Column>
                                                    <ui:FilterOperationArgument.Operand>
                                                      <InArgument x:TypeArguments="x:String">["VF"]</InArgument>
                                                    </ui:FilterOperationArgument.Operand>
                                                  </ui:FilterOperationArgument>
                                                  <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                                    <ui:FilterOperationArgument.Column>
                                                      <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                    </ui:FilterOperationArgument.Column>
                                                    <ui:FilterOperationArgument.Operand>
                                                      <InArgument x:TypeArguments="x:String">["vf"]</InArgument>
                                                    </ui:FilterOperationArgument.Operand>
                                                  </ui:FilterOperationArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <x:Null />
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                            </ui:FilterDataTable>
                                            <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_15" Range="K7:AO3000" SheetName="[wb2.GetSheets(0)]" />
                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_20" Key="c" KeyModifiers="Ctrl">
                                              <ui:SendHotkey.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a9f678b2-e753-41bb-be8e-aa649095973f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Danh sách nhân viên tăng ca*' /&gt;" TimeoutMS="5000">
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:SendHotkey.Target>
                                            </ui:SendHotkey>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelApplicationScope>
                                    <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_153">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("M.yyyy")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Transparent]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="745,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_7" Range="K7:AO3000" SheetName="[sheetName]" />
                                    <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_14" Range="K7:AO3000" SheetName="[sheetName]" />
                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="745,116" sap2010:WorkflowViewState.IdRef="SendHotkey_19" Key="v" KeyModifiers="Ctrl">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="19714676-4c8a-414a-98f9-de3459e03cec" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Total Overtime*' /&gt;" TimeoutMS="5000">
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_42" Workbook="[wb2]" />
                                    <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="[sheetName]" Text="[&quot;CÔNG OVERTIMES &quot; + DateTime.Now.ToString(&quot;yyyy-MM&quot;)]" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_22" SheetName="[sheetName]" StartingCell="C7" />
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity26" sap:VirtualizedContainerService.HintSize="745,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_36" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA52" EntryMethodName="RoundNumberInRange" EntryMethodParameters="[{&quot;K7:AO&quot; + stLastCell.Substring(1),sheetName}]" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_42" />
                                    <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Lấy lịch làm việc bên HR" CommandType="Text" DataTable="[dtCalendar]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="745,119" sap2010:WorkflowViewState.IdRef="ExecuteQuery_8" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT &quot; + &#xA;&quot; WHERE LOCATION = 'NT' AND DAY LIKE '&quot;+ DateTime.Now.ToString(&quot;yyyyMM&quot;) +&quot;%'&quot;]" ConnectionString="Dsn=RPALIB;uid=robotnt;pwd=robotnt123">
                                      <ui:ExecuteQuery.Parameters>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:ExecuteQuery.Parameters>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExecuteQuery>
                                    <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_112">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:String[]">[arrColumn]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:String[]">[{"$K7","$L7","$M7","$N7","$O7","$P7","$Q7","$R7","$S7","$T7","$U7","$V7","$W7","$X7","$Y7","$Z7","$AA7","$AB7","$AC7","$AD7","$AE7","$AF7","$AG7","$AH7","$AI7","$AJ7","$AK7","$AL7","$AM7","$AN7","$AO7"}]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_113">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCalendar]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="745,550" sap2010:WorkflowViewState.IdRef="ForEachRow_17">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,402" sap2010:WorkflowViewState.IdRef="Sequence_219">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[String.IsNullOrEmpty(sumColumnTotal)]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_68">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_217">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_114">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_218">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_115">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[sumColumnTotal + "," + arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                    </ui:ForEachRow>
                                    <ui:ExcelWriteCell Cell="AP7" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="[sheetName]" Text="[&quot;=+SUM(&quot;+sumColumnTotal+&quot;)&quot;]" />
                                    <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="Delay_8" />
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;AP7:AR&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_8" SheetName="[sheetName]" SourceRange="AP7:AR7" />
                                    <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="Delay_18" />
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA53" EntryMethodName="SortColumnTOTAL" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_67" />
                                    <ui:ExcelWriteCell Cell="C1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="TOTAL" Text="[DateTime.Now.Year.ToString]" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_23" SheetName="TOTAL" StartingCell="B5" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_24" SheetName="TOTAL" StartingCell="F5" />
                                    <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_7" />
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_25" Workbook="[wb]" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelApplicationScope>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_223">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <If sap2010:Annotation.AnnotationText="Tháng hiện tại &lt; 4 -&gt; pathTotalOvertime = năm hiện tại -1" Condition="[DateTime.Now.Month &lt; 4]" sap:VirtualizedContainerService.HintSize="484,615" sap2010:WorkflowViewState.IdRef="If_79">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,407" sap2010:WorkflowViewState.IdRef="Sequence_249">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_116">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[pathTotalOvertime]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\Tăng ca\ROBOT\Total Overtime in " + DateTime.Now.AddYears(-1).Year.ToString+ ".xlsx"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data Manpower Status" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="262,82" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_27" InstanceCachePeriod="3000" ReadOnly="True" Workbook="[wb]" WorkbookPath="[pathVFDivisionManpower]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="604,1779" sap2010:WorkflowViewState.IdRef="Sequence_240">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_117">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Lặp qua từng sheet tìm sheet tên có chứa VF yyyy để read data" Condition="[countSheetName &lt; wb.GetSheets.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,108" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_9">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,592" sap2010:WorkflowViewState.IdRef="Sequence_232">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[wb.GetSheets(countSheetName).ToString.ToUpper.Contains(&quot;VF 20&quot;)]" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_73">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_230">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_118">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[wb.GetSheets(countSheetName)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_9" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_231">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_119">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[countSheetName + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InterruptibleWhile>
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA54" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_43" />
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A7" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity27" sap:VirtualizedContainerService.HintSize="562,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_37" MoveDirection="Down" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dtManpowerStatus]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_17" Range="[&quot;A7:AB&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                    <ui:BuildDataTable DataTable="[dtFilter1]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_19" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Code&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Full_x0020_Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Section&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Position&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                    <ui:BuildDataTable DataTable="[dtFilter2]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_20" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Grade&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                    <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Lặp từng dòng chỉ giữ những dòng có giá trị tại cột Resignation date = blank và &gt;= tháng hiện tại" DataTable="[dtManpowerStatus]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="340,123" sap2010:WorkflowViewState.IdRef="ForEachRow_18">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="855,1081" sap2010:WorkflowViewState.IdRef="Sequence_239">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[row(27).ToString.Trim.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="813,338" sap2010:WorkflowViewState.IdRef="If_74">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_233">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_120">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="s:DateTime">[convertDatetime]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(row(27).ToString.Trim)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_234">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <If Condition="[String.IsNullOrEmpty(row(27).ToString)]" sap:VirtualizedContainerService.HintSize="813,611" sap2010:WorkflowViewState.IdRef="If_76">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_235">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_37" />
                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_38" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="526,454" sap2010:WorkflowViewState.IdRef="Sequence_238">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If Condition="[convertDatetime.Year &gt;= DateTime.Now.Year And Convert.ToInt32(convertDatetime.ToString(&quot;yyyyMM&quot;)) &gt;= Convert.ToInt32(DateTime.Now.ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_75">
                                                    <If.Then>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_236">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_39" />
                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_40" />
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_237">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEachRow>
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_26" Workbook="[wb]" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelApplicationScope>
                            <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Process file Total Overtime năm hiện tại - 1" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="262,93" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_29" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathTotalOvertime]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,5489" sap2010:WorkflowViewState.IdRef="Sequence_247">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_121">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("M.yyyy")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[wb.GetSheets.Contains(sheetName)]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_77">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_242">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA55" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_83" />
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA56" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_84" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_243">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA57" EntryMethodName="CopyNewSheet" EntryMethodParameters="[{DateTime.Now.AddMonths(-1).ToString(&quot;M.yyyy&quot;),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_45" />
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA58" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_46" />
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA59" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_47" />
                                          <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="[sheetName]" Text="[&quot;CÔNG OVERTIMES &quot; + DateTime.Now.ToString(&quot;yyyy-MM&quot;)]" />
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data file Export This Month" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="797,956" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_44" InstanceCachePeriod="3000" Workbook="[wb2]" WorkbookPath="[pathFileThisMonth]">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,816" sap2010:WorkflowViewState.IdRef="Sequence_306">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA60" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{wb2.GetSheets(0)}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_77" />
                                            <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity28" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_61" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wb2.GetSheets(0)]" WorkBook="[wb2]" />
                                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_30" Range="[&quot;C7:AO&quot; + stLastCell.Substring(1)]" SheetName="[wb2.GetSheets(0)]" />
                                            <ui:FilterDataTable DataTable="[dtExportFile]" DisplayName="Filter Data Table8" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_18" OutputDataTable="[dtExportFile]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                                    <ui:FilterOperationArgument.Column>
                                                      <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                    </ui:FilterOperationArgument.Column>
                                                    <ui:FilterOperationArgument.Operand>
                                                      <InArgument x:TypeArguments="x:String">["VF"]</InArgument>
                                                    </ui:FilterOperationArgument.Operand>
                                                  </ui:FilterOperationArgument>
                                                  <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                                    <ui:FilterOperationArgument.Column>
                                                      <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                    </ui:FilterOperationArgument.Column>
                                                    <ui:FilterOperationArgument.Operand>
                                                      <InArgument x:TypeArguments="x:String">["vf"]</InArgument>
                                                    </ui:FilterOperationArgument.Operand>
                                                  </ui:FilterOperationArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <x:Null />
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                            </ui:FilterDataTable>
                                            <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_17" Range="K7:AO3000" SheetName="[wb2.GetSheets(0)]" />
                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_22" Key="c" KeyModifiers="Ctrl">
                                              <ui:SendHotkey.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a9f678b2-e753-41bb-be8e-aa649095973f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Danh sách nhân viên tăng ca*' /&gt;" TimeoutMS="5000">
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:SendHotkey.Target>
                                            </ui:SendHotkey>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelApplicationScope>
                                    <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Transparent]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="797,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_8" Range="K7:AO3000" SheetName="[sheetName]" />
                                    <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="797,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_16" Range="K7:AO3000" SheetName="[sheetName]" />
                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="797,116" sap2010:WorkflowViewState.IdRef="SendHotkey_21" Key="v" KeyModifiers="Ctrl">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="19714676-4c8a-414a-98f9-de3459e03cec" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Total Overtime*' /&gt;" TimeoutMS="5000">
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="797,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_43" Workbook="[wb2]" />
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_27" Range="C7:AP3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_28" Range="AQ8:AR3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_25" SheetName="[sheetName]" StartingCell="C7" />
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity29" sap:VirtualizedContainerService.HintSize="797,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_40" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA61" EntryMethodName="RoundNumberInRange" EntryMethodParameters="[{&quot;K7:AO&quot; + stLastCell.Substring(1),sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_48" />
                                    <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Lấy lịch làm việc bên HR" CommandType="Text" DataTable="[dtCalendar]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="797,119" sap2010:WorkflowViewState.IdRef="ExecuteQuery_9" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT &quot; + &#xA;&quot; WHERE LOCATION = 'NT' AND DAY LIKE '&quot;+ DateTime.Now.ToString(&quot;yyyyMM&quot;) +&quot;%'&quot;]" ConnectionString="Dsn=RPALIB;uid=robotnt;pwd=robotnt123">
                                      <ui:ExecuteQuery.Parameters>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:ExecuteQuery.Parameters>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExecuteQuery>
                                    <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_123">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:String[]">[arrColumn]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:String[]">[{"$K7","$L7","$M7","$N7","$O7","$P7","$Q7","$R7","$S7","$T7","$U7","$V7","$W7","$X7","$Y7","$Z7","$AA7","$AB7","$AC7","$AD7","$AE7","$AF7","$AG7","$AH7","$AI7","$AJ7","$AK7","$AL7","$AM7","$AN7","$AO7"}]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_124">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCalendar]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="797,548" sap2010:WorkflowViewState.IdRef="ForEachRow_19">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,401" sap2010:WorkflowViewState.IdRef="Sequence_246">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[String.IsNullOrEmpty(sumColumnTotal)]" sap:VirtualizedContainerService.HintSize="653,309" sap2010:WorkflowViewState.IdRef="If_78">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_244">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_125">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_245">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_126">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[sumColumnTotal + "," + arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                    </ui:ForEachRow>
                                    <ui:ExcelWriteCell Cell="AP7" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="[sheetName]" Text="[&quot;=+SUM(&quot;+sumColumnTotal+&quot;)&quot;]" />
                                    <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_9" />
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;AP7:AR&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_9" SheetName="[sheetName]" SourceRange="AP7:AR7" />
                                    <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_19" />
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA62" EntryMethodName="SortColumnTOTAL" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_68" />
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="B100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity30" sap:VirtualizedContainerService.HintSize="797,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_41" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="TOTAL" WorkBook="[wb]" />
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_20" Range="[&quot;B5:F&quot; + stLastCell.Substring(1)]" SheetName="TOTAL" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_26" SheetName="TOTAL" StartingCell="B5" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_27" SheetName="TOTAL" StartingCell="F5" />
                                    <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_8" />
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="797,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_28" Workbook="[wb]" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelApplicationScope>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_250">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <If sap2010:Annotation.AnnotationText="Tháng hiện tại &gt; 4 -&gt; pathTotalOvertime = năm hiện tại" Condition="[DateTime.Now.Month &gt; 4]" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="If_92">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,407" sap2010:WorkflowViewState.IdRef="Sequence_289">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_127">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[pathTotalOvertime]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\Tăng ca\ROBOT\Total Overtime in " + DateTime.Now.Year.ToString+ ".xlsx"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data Manpower Status" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="262,82" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_33" InstanceCachePeriod="3000" ReadOnly="True" Workbook="[wb]" WorkbookPath="[pathVFDivisionManpower]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="604,1170" sap2010:WorkflowViewState.IdRef="Sequence_280">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_138">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Lặp qua từng sheet tìm sheet tên có chứa VF yyyy để read data" Condition="[countSheetName &lt; wb.GetSheets.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,108" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_11">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,592" sap2010:WorkflowViewState.IdRef="Sequence_272">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[wb.GetSheets(countSheetName).ToString.ToUpper.Contains(&quot;VF 20&quot;)]" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_86">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_270">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_139">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[wb.GetSheets(countSheetName)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_11" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_271">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_140">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[countSheetName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[countSheetName + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InterruptibleWhile>
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA63" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_55" />
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A7" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity31" sap:VirtualizedContainerService.HintSize="562,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_47" MoveDirection="Down" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dtManpowerStatus]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_21" Range="[&quot;A7:AB&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                    <ui:BuildDataTable DataTable="[dtFilter1]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_23" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Code&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Full_x0020_Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Section&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Position&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                    <ui:BuildDataTable DataTable="[dtFilter2]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_24" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Grade&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                    <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Lặp từng dòng chỉ giữ những dòng có giá trị tại cột Resignation date = blank và &gt;= tháng hiện tại" DataTable="[dtManpowerStatus]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="340,123" sap2010:WorkflowViewState.IdRef="ForEachRow_22">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="855,1081" sap2010:WorkflowViewState.IdRef="Sequence_279">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[row(27).ToString.Trim.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="813,338" sap2010:WorkflowViewState.IdRef="If_87">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_273">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_141">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="s:DateTime">[convertDatetime]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(row(27).ToString.Trim)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_274">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <If Condition="[String.IsNullOrEmpty(row(27).ToString)]" sap:VirtualizedContainerService.HintSize="813,611" sap2010:WorkflowViewState.IdRef="If_89">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_275">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_45" />
                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_46" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="526,454" sap2010:WorkflowViewState.IdRef="Sequence_278">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If Condition="[convertDatetime.Year &gt;= DateTime.Now.Year And Convert.ToInt32(convertDatetime.ToString(&quot;yyyyMM&quot;)) &gt;= Convert.ToInt32(DateTime.Now.ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_88">
                                                    <If.Then>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_276">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(0).ToString,row(1).ToString,row(2).ToString,row(3).ToString}]" DataTable="[dtFilter1]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_47" />
                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{row(5).ToString}]" DataTable="[dtFilter2]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_48" />
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_277">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEachRow>
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_32" Workbook="[wb]" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelApplicationScope>
                            <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Process file Total Overtime năm hiện tại" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="873,5631" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_35" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathTotalOvertime]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,5491" sap2010:WorkflowViewState.IdRef="Sequence_287">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_142">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("M.yyyy")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[wb.GetSheets.Contains(sheetName)]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_90">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_282">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA64" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_91" />
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA65" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_92" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_283">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA66" EntryMethodName="CopyNewSheet" EntryMethodParameters="[{DateTime.Now.AddMonths(-1).ToString(&quot;M.yyyy&quot;),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_57" />
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA67" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_58" />
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA68" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_59" />
                                          <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_25" SheetName="[sheetName]" Text="[&quot;CÔNG OVERTIMES &quot; + DateTime.Now.ToString(&quot;yyyy-MM&quot;)]" />
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Read data file Export This Month" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="797,956" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_45" InstanceCachePeriod="3000" Workbook="[wb2]" WorkbookPath="[pathFileThisMonth]">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,816" sap2010:WorkflowViewState.IdRef="Sequence_307">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA69" EntryMethodName="CheckHideColumnOnSheet" EntryMethodParameters="[{wb2.GetSheets(0)}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_78" />
                                            <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity32" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_62" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wb2.GetSheets(0)]" WorkBook="[wb2]" />
                                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_31" Range="[&quot;C7:AO&quot; + stLastCell.Substring(1)]" SheetName="[wb2.GetSheets(0)]" />
                                            <ui:FilterDataTable DataTable="[dtExportFile]" DisplayName="Filter Data Table9" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_19" OutputDataTable="[dtExportFile]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                                    <ui:FilterOperationArgument.Column>
                                                      <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                    </ui:FilterOperationArgument.Column>
                                                    <ui:FilterOperationArgument.Operand>
                                                      <InArgument x:TypeArguments="x:String">["VF"]</InArgument>
                                                    </ui:FilterOperationArgument.Operand>
                                                  </ui:FilterOperationArgument>
                                                  <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                                    <ui:FilterOperationArgument.Column>
                                                      <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                    </ui:FilterOperationArgument.Column>
                                                    <ui:FilterOperationArgument.Operand>
                                                      <InArgument x:TypeArguments="x:String">["vf"]</InArgument>
                                                    </ui:FilterOperationArgument.Operand>
                                                  </ui:FilterOperationArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <x:Null />
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                            </ui:FilterDataTable>
                                            <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_20" Range="K7:AO3000" SheetName="[wb2.GetSheets(0)]" />
                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_25" Key="c" KeyModifiers="Ctrl">
                                              <ui:SendHotkey.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a9f678b2-e753-41bb-be8e-aa649095973f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Danh sách nhân viên tăng ca*' /&gt;" TimeoutMS="5000">
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:SendHotkey.Target>
                                            </ui:SendHotkey>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelApplicationScope>
                                    <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Transparent]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="745,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_9" Range="K7:AO3000" SheetName="[sheetName]" />
                                    <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_18" Range="K7:AO3000" SheetName="[sheetName]" />
                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="745,116" sap2010:WorkflowViewState.IdRef="SendHotkey_23" Key="v" KeyModifiers="Ctrl">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="19714676-4c8a-414a-98f9-de3459e03cec" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Total Overtime*' /&gt;" TimeoutMS="5000">
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_44" Workbook="[wb2]" />
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_24" Range="C7:AP3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_25" Range="AQ8:AR3000" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtExportFile]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_31" SheetName="[sheetName]" StartingCell="C7" />
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity33" sap:VirtualizedContainerService.HintSize="797,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_50" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA70" EntryMethodName="RoundNumberInRange" EntryMethodParameters="[{&quot;K7:AO&quot; + stLastCell.Substring(1),sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_60" />
                                    <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Lấy lịch làm việc bên HR" CommandType="Text" DataTable="[dtCalendar]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="745,119" sap2010:WorkflowViewState.IdRef="ExecuteQuery_11" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT &quot; + &#xA;&quot; WHERE LOCATION = 'NT' AND DAY LIKE '&quot;+ DateTime.Now.ToString(&quot;yyyyMM&quot;) +&quot;%'&quot;]" ConnectionString="Dsn=RPALIB;uid=robotnt;pwd=robotnt123">
                                      <ui:ExecuteQuery.Parameters>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:ExecuteQuery.Parameters>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExecuteQuery>
                                    <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_144">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:String[]">[arrColumn]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:String[]">[{"$K7","$L7","$M7","$N7","$O7","$P7","$Q7","$R7","$S7","$T7","$U7","$V7","$W7","$X7","$Y7","$Z7","$AA7","$AB7","$AC7","$AD7","$AE7","$AF7","$AG7","$AH7","$AI7","$AJ7","$AK7","$AL7","$AM7","$AN7","$AO7"}]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="745,60" sap2010:WorkflowViewState.IdRef="Assign_145">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCalendar]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="797,550" sap2010:WorkflowViewState.IdRef="ForEachRow_23">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,402" sap2010:WorkflowViewState.IdRef="Sequence_286">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[String.IsNullOrEmpty(sumColumnTotal)]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_91">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_284">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_146">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_285">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_147">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[sumColumnTotal]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[sumColumnTotal + "," + arrColumn(Convert.ToInt32(row(0).ToString.Substring(6,2)) - 1)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                    </ui:ForEachRow>
                                    <ui:ExcelWriteCell Cell="AP7" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="[sheetName]" Text="[&quot;=+SUM(&quot;+sumColumnTotal+&quot;)&quot;]" />
                                    <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_11" />
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;AP7:AR&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_11" SheetName="[sheetName]" SourceRange="AP7:AR7" />
                                    <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Delay_20" />
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\MAKE TOTAL OVERTIME.vb" DisplayName="Invoke VBA71" EntryMethodName="SortColumnTOTAL" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_69" />
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="B100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity34" sap:VirtualizedContainerService.HintSize="745,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_51" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="TOTAL" WorkBook="[wb]" />
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="745,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_26" Range="[&quot;B5:F&quot; + stLastCell.Substring(1)]" SheetName="TOTAL" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_32" SheetName="TOTAL" StartingCell="B5" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="745,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_33" SheetName="TOTAL" StartingCell="F5" />
                                    <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="745,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_10" />
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="745,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_34" Workbook="[wb]" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelApplicationScope>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_290">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_225">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">140,1134</av:Point>
                      <av:Size x:Key="ShapeSize">200,66</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Send Mail" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_28">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send Mail Successful" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">["[RPA] TOTAL OVERTIME - VF (" + DateTime.Now.ToString("MM/dd/yyyy") + ")"]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="mail_Content" xml:space="preserve">["&lt;p&gt;Dear Nhung san,&lt;/p&gt;&lt;p&gt;&lt;/p&gt;" + 
"&lt;p&gt;Robot run has been complete&lt;/p&gt;" + 
"&lt;p&gt;Please check the result file in folder link below:&lt;/p&gt;" + 
"&lt;p&gt;Folder link: \\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\Tăng ca\ROBOT\&lt;/p&gt;" + 
"&lt;p&gt;Thanks!&lt;/p&gt;"]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">MAKE TOTAL OVERTIME</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                        <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">[{}]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowStep x:Name="__ReferenceID8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">400,1026.04</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="File Not Found" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_41">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send Mail TH2" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">["[RPA] TOTAL OVERTIME - VF (" + DateTime.Now.ToString("MM/dd/yyyy") + ") - NOT FOUND INPUT FILE"]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="mail_Content" xml:space="preserve">["&lt;p&gt;Dear Nhung san,&lt;/p&gt;&lt;p&gt;&lt;/p&gt;" + 
"&lt;p&gt;Robot cannot find input file: VF Division manpower&lt;/p&gt;" + 
"&lt;p&gt;Please help to check again&lt;/p&gt;" + 
"&lt;p&gt;Folder link: \\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\VF Division manpower\&lt;/p&gt;" + 
"&lt;p&gt;Thanks!&lt;/p&gt;"]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">MAKE TOTAL OVERTIME</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                    <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">[{}]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </FlowStep>
          </FlowDecision.False>
        </FlowDecision>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">610,743.5</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">710,809.5 710,849.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="IVS - Login" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:RetryScope ContinueOnError="True" DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="518,1294" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="3" RetryInterval="00:00:02">
          <ui:RetryScope.ActivityBody>
            <ActivityAction>
              <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="476,1067" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="Ihrm" />
                <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="C:\Users\robotics\Desktop\AutoUpdateClient.lnk" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="StartProcess_2" />
                <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window" sap:VirtualizedContainerService.HintSize="434,676" sap2010:WorkflowViewState.IdRef="WindowScope_1" Selector="&lt;wnd app='ihrm.exe' ctrlname='LoginForm' /&gt;">
                  <ui:WindowScope.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,568" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Type Into Username" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="robotnt">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b7144b1b-7265-424b-81d0-3c1d96759b5a" Selector="&lt;wnd ctrlname='txtUserName' /&gt;" TimeoutMS="5000">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:TypeInto.Target>
                        </ui:TypeInto>
                        <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Type Into Password" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="TypeInto_2" Text="123456">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="07089798-89a7-46ef-b1c7-ad2fd561197f" Selector="&lt;wnd ctrlname='txtPassword' /&gt;" TimeoutMS="5000">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:TypeInto.Target>
                        </ui:TypeInto>
                        <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Set Language" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="SetValue_1" Text="Tiếng Việt">
                          <ui:SetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7bc51d49-833c-4283-884f-8146e96651e6" Selector="&lt;wnd ctrlname='cboLanguage' /&gt;" TimeoutMS="5000">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:SetValue.Target>
                        </ui:SetValue>
                        <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click Login" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="750044bc-2b98-4f05-8b12-ab97633d2c61" Selector="&lt;wnd ctrlname='btnLogin' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                    </ActivityAction>
                  </ui:WindowScope.Body>
                </ui:WindowScope>
              </Sequence>
            </ActivityAction>
          </ui:RetryScope.ActivityBody>
          <ui:RetryScope.Condition>
            <ActivityFunc x:TypeArguments="x:Boolean">
              <ui:UiElementExists DisplayName="Check Login Success" Exists="[fileThisMonth]" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                <ui:UiElementExists.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8f09e58a-52c9-4b5b-8a67-b666a1f065c3" Selector="&lt;wnd app='ihrm.exe' ctrlname='MainForm' /&gt;" TimeoutMS="5000">
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:UiElementExists.Target>
              </ui:UiElementExists>
            </ActivityFunc>
          </ui:RetryScope.Condition>
        </ui:RetryScope>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">610,849.5</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">610,883.5 580,883.5 580,830 460,830</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="IVS - Export Data" sap:VirtualizedContainerService.HintSize="476,922" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[pathExportFile]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">C:\Users\robotics\AppData\Local\IFMS\Reports\</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[pathSaveFileExport]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[Path_template + "Make Total Overtime -VF\" + DateTime.Now.ToString("yyyyMMdd") + "\"]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[pathFileThisMonth]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[pathFileLastMonth]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="434,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[pathSaveFileExport]" />
            <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window" sap:VirtualizedContainerService.HintSize="434,372" sap2010:WorkflowViewState.IdRef="WindowScope_2" Selector="&lt;wnd app='ihrm.exe' ctrlname='MainForm' /&gt;">
              <ui:WindowScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,264" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Select Menu" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Click SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="100" DelayMS="100" DisplayName="Click Báo Cáo" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2514ce7d-2c15-44c5-82bf-56de309b375f" Selector="&lt;ctrl name='The Ribbon' role='property page' /&gt;&lt;ctrl name='Ribbon Tabs' role='page tab list' /&gt;&lt;ctrl name='Báo Cáo' role='page tab' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:Click SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="100" DelayMS="100" DisplayName="Click DS Báo Cáo" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6d564e36-5037-4311-b405-1281519c586a" Selector="&lt;ctrl name='The Ribbon' role='property page' /&gt;&lt;ctrl name='Lower Ribbon' role='pane' /&gt;&lt;ctrl name='Báo Cáo' role='pane' /&gt;&lt;ctrl name='Báo cáo' role='tool bar' /&gt;&lt;ctrl name='Danh sách báo cáo' role='push button' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Phân hệ: Chấm công" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="SetValue_2" Text="Chấm công">
                        <ui:SetValue.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="634a035b-f06e-48ee-8a0e-bf456912f010" Selector="&lt;wnd ctrlname='RPRL00Form' /&gt;&lt;wnd ctrlname='dockPanel1' /&gt;&lt;wnd ctrlname='panel1' /&gt;&lt;wnd ctrlname='panelDock' /&gt;&lt;wnd ctrlname='cboModule' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SetValue.Target>
                      </ui:SetValue>
                      <ui:Click SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="100" DelayMS="100" DisplayName="Click Tìm Kiếm" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="798ca2ee-f0c7-4014-8895-1006d559bfc4" Selector="&lt;wnd ctrlname='RPRL00Form' /&gt;&lt;wnd ctrlname='dockPanel1' /&gt;&lt;wnd ctrlname='panel1' /&gt;&lt;wnd ctrlname='layoutControl1' /&gt;&lt;wnd ctrlname='btnSearch' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                    </Sequence>
                    <Sequence DisplayName="Export File" sap:VirtualizedContainerService.HintSize="504,3147" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="462,60" sap2010:WorkflowViewState.IdRef="Assign_155">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[checkExists]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="462,592" sap2010:WorkflowViewState.IdRef="RetryScope_5" NumberOfRetries="3" RetryInterval="00:00:01">
                        <ui:RetryScope.ActivityBody>
                          <ActivityAction>
                            <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="376,354" sap2010:WorkflowViewState.IdRef="Sequence_308">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ClickImage ContinueOnError="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_DOUBLE" DelayBefore="100" DelayMS="100" DisplayName="Click Image 'ihrm.exe IVS'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="ClickImage_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:ClickImage.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:ClickImage.CursorPosition>
                                <ui:ClickImage.Image>
                                  <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAAJUAAAAUCAYAAACETn8yAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAKASURBVGhD7ZfbbeswDIa7SbvEmSIdoVskA2QNP3aPvHSRAJ1EJRlRoRgqIW0VOUD5AUZtWbzql5y+lCSZTIoqmU6KKplOiiqZTooqmc7/L6rzZ3l/PZZTfXwG5+WjvL1+lOVcByYyx/dXOey/4O93WXbP7RVyK6rTEYr8J64NBaMgdp9lS7+w6QdPl7bEumsLC4aixr7Qwm2ki7XWN9ipfE/7y3q9L9915HnYopIFbjkpZojq7GzSb4kK4rdxeT+Dtb4n9PU3eSwqAHcBnxaX47qeYjwPi9wfYdcZ43AcH3ZqvAOP7PoeLrnTzFgI+uVxFrwn1oo8Q/UK0E7XQs8UqwpCfhXcvkW/qp9wji3usSxga34J0J5txaEyXBOBS1RmQ/jopgmYAAfW4/z5FOOSLp6ytWLR/fWTTEWivSdWNM9RDiM/ks4WhVD983j3XmzcqO/OjydHvJe1Xg+MK3IOuJI9tmIpYqKiB0yWFawaRROMBupxifSn4j6OJfDGiub5MIdBLOC0F/O5NraVp1S9bjeupw4An5ufBzkqW/kVamj/EiuWIvb5o0YYincVMG4+IZL1xxJ4YkXzjNarqb3sFo5tjT4T0To2rQmYR0Q1iqWI/VCX7yhApAC7Qe1orWCRtGNHsXQx+A5jOGKF84zWewPkSr/VeCEAtsW/rQ70URfX41vOCeco+4f3hqhGPR7FUtiiasebPuIuSdB4/RF4txGeBgEopBavzR/EQtAvv2PBe2KF8wzWa0C1iU3T2cpe8xyX75oXzVuRY4sL862TCkF79tudTkYsxa2okj/E/Q2xlhTVn0OcNnC1f8AmkqJKppOiSqaTokqmk6JKJlPKD/3uGis5YKfSAAAAAElFTkSuQmCC" />
                                </ui:ClickImage.Image>
                                <ui:ClickImage.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5a898424-bb86-4c84-bc7e-0bb4094fa838" Selector="&lt;wnd ctrlname='RPRL00Form' /&gt;&lt;wnd ctrlname='ivsPanel1' /&gt;&lt;wnd ctrlname='panelMain' /&gt;&lt;wnd ctrlname='dgcMain' /&gt;&lt;ctrl name='Row 11' role='row' /&gt;&lt;ctrl name='Tên báo cáo (VN) row10' role='cell' /&gt;" TimeoutMS="5000">
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:ClickImage.Target>
                              </ui:ClickImage>
                              <ui:UiElementExists DisplayName="Element Exists" Exists="[checkExists]" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
                                <ui:UiElementExists.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a627c822-e8cf-438e-90b9-f95d17d55ec0" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;ctrl name='Báo cáo danh sách nhân viên tăng ca' role='client' /&gt;" TimeoutMS="5000">
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:UiElementExists.Target>
                              </ui:UiElementExists>
                            </Sequence>
                          </ActivityAction>
                        </ui:RetryScope.ActivityBody>
                        <ui:RetryScope.Condition>
                          <ActivityFunc x:TypeArguments="x:Boolean">
                            <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[checkExists]" />
                          </ActivityFunc>
                        </ui:RetryScope.Condition>
                      </ui:RetryScope>
                      <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Mã nhân viên" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_3">
                        <ui:SetValue.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9716f944-c9d5-40ec-a41e-1edbf5a89377" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='txtEmployeeID' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SetValue.Target>
                        <ui:SetValue.Text>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:SetValue.Text>
                      </ui:SetValue>
                      <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Tên nhân viên" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_4">
                        <ui:SetValue.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="06565957-9a13-4333-884c-f009ab5e8ce0" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='txtEmployeeName' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SetValue.Target>
                        <ui:SetValue.Text>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:SetValue.Text>
                      </ui:SetValue>
                      <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Department 1" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_5">
                        <ui:SetValue.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d4d7492e-f02b-45e2-bfb3-d3dd72525cfc" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='cboOffice' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SetValue.Target>
                        <ui:SetValue.Text>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:SetValue.Text>
                      </ui:SetValue>
                      <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Department 2" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_6">
                        <ui:SetValue.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d4d7492e-f02b-45e2-bfb3-d3dd72525cfc" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='cboDepartment' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SetValue.Target>
                        <ui:SetValue.Text>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:SetValue.Text>
                      </ui:SetValue>
                      <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Division 1" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_7">
                        <ui:SetValue.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d4d7492e-f02b-45e2-bfb3-d3dd72525cfc" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='cboSection' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SetValue.Target>
                        <ui:SetValue.Text>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:SetValue.Text>
                      </ui:SetValue>
                      <ui:Click SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="100" DelayMS="100" DisplayName="Click Nơi làm việc" sap:VirtualizedContainerService.HintSize="462,68" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="43556fda-a6d9-4f6d-a274-093cfcb9f251" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;ctrl idx='10' role='text' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:SendHotkey Activate="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="462,116" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="pgup" KeyModifiers="None" SpecialKey="True">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="23b90c6f-c1ac-47da-907e-f86b8224708d">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SendHotkey.Target>
                      </ui:SendHotkey>
                      <ui:SendHotkey Activate="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="462,116" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="enter" KeyModifiers="None" SpecialKey="True">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="34d4aebb-bc15-437d-83cc-64da86e3438d">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SendHotkey.Target>
                      </ui:SendHotkey>
                      <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Kỳ" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_8" Text="[DateTime.Now.ToString(&quot;yyyy-MM&quot;)]">
                        <ui:SetValue.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f62ed076-2a6d-4366-a768-4d0ba1945ee6" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='cboPeriod' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SetValue.Target>
                      </ui:SetValue>
                      <ui:Click SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="100" DelayMS="100" DisplayName="Click Đồng ý" sap:VirtualizedContainerService.HintSize="462,68" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="dd17dc89-4805-4b9b-b593-9fee761cf20d" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='btnOK' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:RetryScope DisplayName="Waiting for export file open" sap:VirtualizedContainerService.HintSize="462,51" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="10" RetryInterval="00:00:02">
                        <ui:RetryScope.ActivityBody>
                          <ActivityAction>
                            <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_20">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </ActivityAction>
                        </ui:RetryScope.ActivityBody>
                        <ui:RetryScope.Condition>
                          <ActivityFunc x:TypeArguments="x:Boolean">
                            <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                              <ui:UiElementExists.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="72e0b563-3e59-42d2-8add-d3e0cd8465a6" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*' /&gt;&lt;uia cls='MsoCommandBar' name='Ribbon' /&gt;&lt;uia cls='NetUIOfficeCaption' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:UiElementExists.Target>
                            </ui:UiElementExists>
                          </ActivityFunc>
                        </ui:RetryScope.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:RetryScope>
                      <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="462,132" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="EXCEL">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:KillProcess>
                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="462,483" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Directory.GetFiles(pathExportFile,&quot;*.xls*&quot;,SearchOption.AllDirectories)]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="426,349" sap2010:WorkflowViewState.IdRef="Sequence_13">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MoveFile ContinueOnError="{x:Null}" Destination="[pathSaveFileExport + &quot;Danh sách nhân viên tăng ca_&quot; + DateTime.Now.ToString(&quot;yyyy-MM&quot;) + &quot;.xlsx&quot;]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[file]" />
                              <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[pathFileThisMonth]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[pathSaveFileExport + "Danh sách nhân viên tăng ca_" + DateTime.Now.ToString("yyyy-MM") + ".xlsx"]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                      <Assign sap:VirtualizedContainerService.HintSize="462,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[fileThisMonth]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If sap2010:Annotation.AnnotationText="Nếu ngày hiện tại &lt; 7 thì export dữ liệu tháng trước" Condition="[DateTime.Now.Day &lt; 7]" sap:VirtualizedContainerService.HintSize="540,3420" sap2010:WorkflowViewState.IdRef="If_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="504,3212" sap2010:WorkflowViewState.IdRef="Sequence_14">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="462,60" sap2010:WorkflowViewState.IdRef="Assign_154">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[checkExists]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="462,786" sap2010:WorkflowViewState.IdRef="RetryScope_6" NumberOfRetries="3" RetryInterval="00:00:01">
                              <ui:RetryScope.ActivityBody>
                                <ActivityAction>
                                  <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="376,548" sap2010:WorkflowViewState.IdRef="Sequence_309">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ClickImage ContinueOnError="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="100" DelayMS="100" DisplayName="Click Image 'ihrm.exe IVS'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="ClickImage_4" KeyModifiers="None" MouseButton="BTN_LEFT">
                                      <ui:ClickImage.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:ClickImage.CursorPosition>
                                      <ui:ClickImage.Image>
                                        <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAAJ0AAAASCAYAAABBwNzbAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAKySURBVGhD7VbbkcMgDLxOkiZSRVLCdeEU4Db8mT78k0Y8k0o4JDCRQCL4eZcLO+MZLPCyEgvmy1RU7IxquordUU1XsTuq6XbA0H2b4/lmBv/+6aim2xwP051b0/u3irmmG27mcli5kKtzwmKfzPFwMpfu4WP7A0+5w7fpNjjm+gbyez9Dp6bDxXeLNT7XKCsoZBxbilmcoDX727qbbmvDZTXczRVM0bfm2Nx9bCX4eXtbt+Wbym1Qqf5gbORP8oTcrD8gr1yfANl0CQHfqcOw/kLO4swu+E7IabA5hThtrwHCt856gPGiE5luFpanM1Uwaa5PQJnpyLv7XfhTkDiZxtWdB9zjt+S3MJsTtbZWX/5bVrjGjo/jACgwxlt7OiqnrqR/jgYy/tLZ0zh3DZDmhLBUmzXyo+ahPgh9gqlyfQKKfq+8YEQULXwoCMSlOwyPY9GAdwmn1+qSJL+IYk6JH9pS4bgGpp99S+ZSNfjxcTuMH5GbU9CexKfk5wBzgIn75jkvAvXZPvBDrDPXJ2D67xUTGw3p49GdBe4BSVIJL8ESzlBY++oL5l4ETqaB/E4ibZP0a5yAVxq09ggpBtBqw8ZPzI8A+pNTFzgwB7e5WX+uT0CB6YhIPKKF3bPEdEs5JdNpnEzDxqYr0aC1R2hzarXRtEQ8Yn4EL/OHtt1IYUyuT0DhSeeLR5PFopKkpAIzRHH4HuZZwskSdLsM2znOkBtZFMYPbaloin6Ns0SD1g7IzDllUxXl90TRpsOcvIZcn4CiO91TgBOMcX9hHfvwvpGMj8C4adFmcmKy0iVe4WTFoYtigYWCb+x47SSQ9KucBRq0NoU0J4Sl2qhaLEry8yg96WFcuvEcQp9/p0hN9/GIFuvf4ffzq6ZDkFPJPq8uwu+Hv5VfNV3F7qimq9gZxvwAbSZ4/TxYGdkAAAAASUVORK5CYII=" />
                                      </ui:ClickImage.Image>
                                      <ui:ClickImage.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="38ddc164-a193-452c-92a6-2b62affeb2dd" Selector="&lt;wnd ctrlname='RPRL00Form' /&gt;&lt;wnd ctrlname='ivsPanel1' /&gt;&lt;wnd ctrlname='panelMain' /&gt;&lt;wnd ctrlname='dgcMain' /&gt;&lt;ctrl name='Row 5' role='row' /&gt;&lt;ctrl name='Tên báo cáo (VN) row4' role='cell' /&gt;" TimeoutMS="5000">
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:ClickImage.Target>
                                    </ui:ClickImage>
                                    <ui:ClickImage ContinueOnError="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_DOUBLE" DelayBefore="100" DelayMS="100" DisplayName="Click Image 'ihrm.exe IVS'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="ClickImage_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                                      <ui:ClickImage.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:ClickImage.CursorPosition>
                                      <ui:ClickImage.Image>
                                        <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAAJUAAAAUCAYAAACETn8yAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAKASURBVGhD7ZfbbeswDIa7SbvEmSIdoVskA2QNP3aPvHSRAJ1EJRlRoRgqIW0VOUD5AUZtWbzql5y+lCSZTIoqmU6KKplOiiqZTooqmc7/L6rzZ3l/PZZTfXwG5+WjvL1+lOVcByYyx/dXOey/4O93WXbP7RVyK6rTEYr8J64NBaMgdp9lS7+w6QdPl7bEumsLC4aixr7Qwm2ki7XWN9ipfE/7y3q9L9915HnYopIFbjkpZojq7GzSb4kK4rdxeT+Dtb4n9PU3eSwqAHcBnxaX47qeYjwPi9wfYdcZ43AcH3ZqvAOP7PoeLrnTzFgI+uVxFrwn1oo8Q/UK0E7XQs8UqwpCfhXcvkW/qp9wji3usSxga34J0J5txaEyXBOBS1RmQ/jopgmYAAfW4/z5FOOSLp6ytWLR/fWTTEWivSdWNM9RDiM/ks4WhVD983j3XmzcqO/OjydHvJe1Xg+MK3IOuJI9tmIpYqKiB0yWFawaRROMBupxifSn4j6OJfDGiub5MIdBLOC0F/O5NraVp1S9bjeupw4An5ufBzkqW/kVamj/EiuWIvb5o0YYincVMG4+IZL1xxJ4YkXzjNarqb3sFo5tjT4T0To2rQmYR0Q1iqWI/VCX7yhApAC7Qe1orWCRtGNHsXQx+A5jOGKF84zWewPkSr/VeCEAtsW/rQ70URfX41vOCeco+4f3hqhGPR7FUtiiasebPuIuSdB4/RF4txGeBgEopBavzR/EQtAvv2PBe2KF8wzWa0C1iU3T2cpe8xyX75oXzVuRY4sL862TCkF79tudTkYsxa2okj/E/Q2xlhTVn0OcNnC1f8AmkqJKppOiSqaTokqmk6JKJlPKD/3uGis5YKfSAAAAAElFTkSuQmCC" />
                                      </ui:ClickImage.Image>
                                      <ui:ClickImage.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5a898424-bb86-4c84-bc7e-0bb4094fa838" Selector="&lt;wnd ctrlname='RPRL00Form' /&gt;&lt;wnd ctrlname='ivsPanel1' /&gt;&lt;wnd ctrlname='panelMain' /&gt;&lt;wnd ctrlname='dgcMain' /&gt;&lt;ctrl name='Row 11' role='row' /&gt;&lt;ctrl name='Tên báo cáo (VN) row10' role='cell' /&gt;" TimeoutMS="5000">
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:ClickImage.Target>
                                    </ui:ClickImage>
                                    <ui:UiElementExists DisplayName="Element Exists" Exists="[checkExists]" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="UiElementExists_5">
                                      <ui:UiElementExists.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d8086f89-a026-400c-a5fc-f3c1644c77ce" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;ctrl name='Báo cáo danh sách nhân viên tăng ca' role='client' /&gt;" TimeoutMS="5000">
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:UiElementExists.Target>
                                    </ui:UiElementExists>
                                  </Sequence>
                                </ActivityAction>
                              </ui:RetryScope.ActivityBody>
                              <ui:RetryScope.Condition>
                                <ActivityFunc x:TypeArguments="x:Boolean">
                                  <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="IsTrue_2" Input="[checkExists]" />
                                </ActivityFunc>
                              </ui:RetryScope.Condition>
                            </ui:RetryScope>
                            <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Mã nhân viên" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_9">
                              <ui:SetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9716f944-c9d5-40ec-a41e-1edbf5a89377" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='txtEmployeeID' /&gt;" TimeoutMS="5000">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SetValue.Target>
                              <ui:SetValue.Text>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:SetValue.Text>
                            </ui:SetValue>
                            <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Tên nhân viên" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_10">
                              <ui:SetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="06565957-9a13-4333-884c-f009ab5e8ce0" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='txtEmployeeName' /&gt;" TimeoutMS="5000">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SetValue.Target>
                              <ui:SetValue.Text>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:SetValue.Text>
                            </ui:SetValue>
                            <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Department 1" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_11">
                              <ui:SetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d4d7492e-f02b-45e2-bfb3-d3dd72525cfc" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='cboOffice' /&gt;" TimeoutMS="5000">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SetValue.Target>
                              <ui:SetValue.Text>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:SetValue.Text>
                            </ui:SetValue>
                            <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Department 2" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_12">
                              <ui:SetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d4d7492e-f02b-45e2-bfb3-d3dd72525cfc" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='cboDepartment' /&gt;" TimeoutMS="5000">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SetValue.Target>
                              <ui:SetValue.Text>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:SetValue.Text>
                            </ui:SetValue>
                            <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Division 1" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_13">
                              <ui:SetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d4d7492e-f02b-45e2-bfb3-d3dd72525cfc" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='cboSection' /&gt;" TimeoutMS="5000">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SetValue.Target>
                              <ui:SetValue.Text>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:SetValue.Text>
                            </ui:SetValue>
                            <ui:Click SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="100" DelayMS="100" DisplayName="Click Nơi làm việc" sap:VirtualizedContainerService.HintSize="462,68" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="43556fda-a6d9-4f6d-a274-093cfcb9f251" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;ctrl idx='10' role='text' /&gt;" TimeoutMS="5000">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <ui:SendHotkey Activate="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="462,116" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="pgup" KeyModifiers="None" SpecialKey="True">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="23b90c6f-c1ac-47da-907e-f86b8224708d">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                            </ui:SendHotkey>
                            <ui:SendHotkey Activate="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="462,116" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="enter" KeyModifiers="None" SpecialKey="True">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="34d4aebb-bc15-437d-83cc-64da86e3438d">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                            </ui:SendHotkey>
                            <ui:SetValue ContinueOnError="{x:Null}" AlterIfDisabled="True" DelayAfter="100" DelayBefore="100" DisplayName="Kỳ" sap:VirtualizedContainerService.HintSize="462,96" sap2010:WorkflowViewState.IdRef="SetValue_14" Text="[DateTime.Now.AddMonths(-1).ToString(&quot;yyyy-MM&quot;)]">
                              <ui:SetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f62ed076-2a6d-4366-a768-4d0ba1945ee6" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='gcEmployeeSettings' /&gt;&lt;wnd ctrlname='cboPeriod' /&gt;" TimeoutMS="5000">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SetValue.Target>
                            </ui:SetValue>
                            <ui:Click SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="100" DelayMS="100" DisplayName="Click Đồng ý" sap:VirtualizedContainerService.HintSize="462,68" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="dd17dc89-4805-4b9b-b593-9fee761cf20d" Selector="&lt;wnd app='ihrm.exe' ctrlname='RPMO00Form' /&gt;&lt;wnd ctrlname='btnOK' /&gt;" TimeoutMS="5000">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <ui:RetryScope DisplayName="Waiting for export file open" sap:VirtualizedContainerService.HintSize="462,51" sap2010:WorkflowViewState.IdRef="RetryScope_4" NumberOfRetries="10" RetryInterval="00:00:02">
                              <ui:RetryScope.ActivityBody>
                                <ActivityAction>
                                  <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </ActivityAction>
                              </ui:RetryScope.ActivityBody>
                              <ui:RetryScope.Condition>
                                <ActivityFunc x:TypeArguments="x:Boolean">
                                  <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                                    <ui:UiElementExists.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="72e0b563-3e59-42d2-8add-d3e0cd8465a6" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*' /&gt;&lt;uia cls='MsoCommandBar' name='Ribbon' /&gt;&lt;uia cls='NetUIOfficeCaption' /&gt;">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:UiElementExists.Target>
                                  </ui:UiElementExists>
                                </ActivityFunc>
                              </ui:RetryScope.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:RetryScope>
                            <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="462,132" sap2010:WorkflowViewState.IdRef="KillProcess_4" ProcessName="EXCEL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:KillProcess>
                            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="462,487" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Directory.GetFiles(pathExportFile,&quot;*.xls*&quot;,SearchOption.AllDirectories)]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="426,352" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MoveFile ContinueOnError="{x:Null}" Destination="[pathSaveFileExport + &quot;Danh sách nhân viên tăng ca_&quot; + DateTime.Now.AddMonths(-1).ToString(&quot;yyyy-MM&quot;) + &quot;.xlsx&quot;]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="True" Path="[file]" />
                                    <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[pathFileLastMonth]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[pathSaveFileExport + "Danh sách nhân viên tăng ca_" + DateTime.Now.AddMonths(-1).ToString("yyyy-MM") + ".xlsx"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                            </ui:ForEach>
                            <Assign sap:VirtualizedContainerService.HintSize="462,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[fileLastMonth]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </ui:WindowScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:WindowScope>
            <ui:CloseApplication DisplayName="Close Application" sap:VirtualizedContainerService.HintSize="434,68" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
              <ui:CloseApplication.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4ea35ec4-253f-4979-89ab-4c2d2561bd29" Selector="&lt;wnd app='ihrm.exe' ctrlname='MainForm' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:CloseApplication.Target>
            </ui:CloseApplication>
          </Sequence>
          <FlowStep.Next>
            <x:Reference>__ReferenceID0</x:Reference>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <FlowStep x:Name="__ReferenceID12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">350,127.5</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">450,193.5 450,235.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Setting SQL" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT * FROM RPALIB.LIBRARY_NT WHERE Name IN ('dirDownFile','PIC','ServerTemp','ServerSavedFile') ORDER BY UPPER(NAME) ASC</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_library]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_downloads]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(0)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_PIC]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(1)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_template]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(3)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_Folder]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(2)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">350,235.5</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">450,301.5 450,331.5 450.141666666667,331.5 450.141666666667,343.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Run Daily Check Folder" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_297">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_148">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pathFolder]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\Tăng ca\ROBOT\CHECKED\"]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_149">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[checkExists]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="484,386" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Directory.GetFiles(pathFolder,&quot;*.xls*&quot;)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_293">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_150">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[checkExists]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_151">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[pathFile]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[pathFolder + Path.GetFileName(file.ToString)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <If Condition="[checkExists = True]" sap:VirtualizedContainerService.HintSize="484,629" sap2010:WorkflowViewState.IdRef="If_94">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="426,442" sap2010:WorkflowViewState.IdRef="Sequence_294">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReadTextFile Content="[stMailTo]" DisplayName="Read Text File" FileName="[Path_template + &quot;Make Total Overtime -VF\MailTo.txt&quot;]" sap:VirtualizedContainerService.HintSize="384,79" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send Mail TH1" sap:VirtualizedContainerService.HintSize="384,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">["[RPA] TOTAL OVERTIME - VF (" + DateTime.Now.ToString("MM/dd/yyyy") + ")"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="mail_Content" xml:space="preserve">["&lt;p&gt;Dear VF Team,&lt;/p&gt;&lt;p&gt;&lt;/p&gt;" + 
"&lt;p&gt;We would like to send Total overtime report ("+DateTime.Now.ToString("MM/dd/yyyy")+")&lt;/p&gt;" + 
"&lt;p&gt;Please check the attachment on this mail or folder link as below&lt;/p&gt;" + 
"&lt;p&gt;Folder link: \\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\VF\3.VF ASSEMBLING\VF Data\Tăng ca\ROBOT\&lt;/p&gt;" + 
"&lt;p&gt;Thanks!&lt;/p&gt;"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">[stMailTo]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                      <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">[{pathFile}]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">thaidh@ykk.com,thamltn@ykk.com</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="384,79" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[pathFile]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_295">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID11" Condition="[DateTime.Now.DayOfWeek.ToString.ToUpper = &quot;SUNDAY&quot;]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">410.641666666667,343.5</av:Point>
                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                  <av:PointCollection x:Key="TrueConnector">410.641666666667,387 308.39492810905,387 308.39492810905,499.5 350,499.5</av:PointCollection>
                  <x:String x:Key="TrueLabel">Is Sunday</x:String>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">350,465.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,66</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">550,499.5 620.141666666667,499.5 620.141666666667,541.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Check File Export" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1122,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[pathSaveFileExport]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[Path_template + "Make Total Overtime -VF\" + DateTime.Now.ToString("yyyyMMdd") + "\"]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[pathFileThisMonth]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[pathSaveFileExport + "Danh sách nhân viên tăng ca_" + DateTime.Now.ToString("yyyy-MM") + ".xlsx"]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[pathFileLastMonth]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[pathSaveFileExport + "Danh sách nhân viên tăng ca_" + DateTime.Now.AddMonths(-1).ToString("yyyy-MM") + ".xlsx"]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <ui:PathExists DisplayName="Path Exists" Exists="[checkExists]" sap:VirtualizedContainerService.HintSize="1122,89" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[pathFileThisMonth]" PathType="File" />
                    <If Condition="[checkExists]" sap:VirtualizedContainerService.HintSize="1122,1068" sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="773,910" sap2010:WorkflowViewState.IdRef="Sequence_23">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[fileThisMonth]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[DateTime.Now.Day &lt; 7]" sap:VirtualizedContainerService.HintSize="731,718" sap2010:WorkflowViewState.IdRef="If_6">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="695,531" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:PathExists DisplayName="Path Exists" Exists="[checkExists]" sap:VirtualizedContainerService.HintSize="653,89" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[pathFileLastMonth]" PathType="File" />
                                <If Condition="[checkExists]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_5">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[fileLastMonth]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[fileLastMonth]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_24">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[fileThisMonth]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowDecision x:Name="__ReferenceID4" Condition="[fileThisMonth]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">580.641666666667,541.5</av:Point>
                          <av:Size x:Key="ShapeSize">79,87</av:Size>
                          <av:PointCollection x:Key="TrueConnector">580.641666666667,585 510.141666666667,585 510.141666666667,646.5</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">659.641666666667,585 840,585 840,777.5 810,777.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowDecision x:Name="__ReferenceID9" Condition="[DateTime.Now.Day &lt; 7 And fileLastMonth = True Or DateTime.Now.Day &gt;= 7 And fileLastMonth = False]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4" True="{x:Reference __ReferenceID0}" False="{x:Reference __ReferenceID2}">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:Point x:Key="ShapeLocation">470.641666666667,646.5</av:Point>
                              <av:Size x:Key="ShapeSize">79,87</av:Size>
                              <av:PointCollection x:Key="TrueConnector">470.641666666667,690 360,690 360,796</av:PointCollection>
                              <av:PointCollection x:Key="FalseConnector">549.641666666667,690 710,690 710,743.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </FlowDecision>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <x:Reference>__ReferenceID2</x:Reference>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.True>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
  </Flowchart>
</Activity>