<Activity mc:Ignorable="sap sap2010" x:Class="PRINT_YKK_GL_ACCOUNT" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:ee="clr-namespace:ExcelCustomActivities.Excel;assembly=ExcelCustomActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="EndStatus" Type="InOutArgument(x:String)" />
    <x:Property Name="EndMessage" Type="InOutArgument(x:String)" />
    <x:Property Name="Order_Number" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1165,1044</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>PRINT_YKK_GL_ACCOUNT_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Printing</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>ReachFramework</AssemblyReference>
      <AssemblyReference>System.Printing</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="PRINT_YKK_GL_ACCOUNT" sap:VirtualizedContainerService.HintSize="634,979" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_library" />
      <Variable x:TypeArguments="x:String" Name="Path_Folder" />
      <Variable x:TypeArguments="x:String" Name="Path_downloads" />
      <Variable x:TypeArguments="x:String" Name="Path_template" />
      <Variable x:TypeArguments="x:String" Name="Mail_Password" />
      <Variable x:TypeArguments="x:String" Name="Mail_PIC" />
      <Variable x:TypeArguments="x:String" Name="Mail_Email" />
      <Variable x:TypeArguments="x:String" Name="Mail_Server" />
      <Variable x:TypeArguments="x:String" Name="pathFileInput" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtParameter" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wb" />
      <Variable x:TypeArguments="x:Boolean" Name="printAllFlag" />
      <Variable x:TypeArguments="ui:GenericValue" Name="resultCell" />
      <Variable x:TypeArguments="x:String" Name="currentCell" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtVAS" />
      <Variable x:TypeArguments="x:String" Name="pathVasFolder" />
      <Variable x:TypeArguments="x:Boolean" Name="validFlag" />
      <Variable x:TypeArguments="x:Boolean" Name="checkFlag" />
      <Variable x:TypeArguments="x:String" Name="strDateTime" />
      <Variable x:TypeArguments="si:FileInfo" Name="fileInfo" />
      <Variable x:TypeArguments="x:String" Name="fileNamVas" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbTemplate" />
      <Variable x:TypeArguments="x:Int32" Name="lastRowE" />
      <Variable x:TypeArguments="x:Int32" Name="lastRowD" />
      <Variable x:TypeArguments="x:Boolean" Name="isBegin" />
      <Variable x:TypeArguments="s:DateTime" Name="starttime" />
      <Variable x:TypeArguments="s:DateTime" Name="endtime" />
      <Variable x:TypeArguments="x:TimeSpan" Name="totaltime" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,117</av:PointCollection>
        <x:Double x:Key="Height">943</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID7</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,117</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,183 300,213 296,213 296,241.54</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Setting SQL" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dt_Server" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT * FROM RPALIB.LIBRARY_NT WHERE Name IN ('dirDownFile','PIC','ServerTemp','ServerSavedFile') ORDER BY UPPER(NAME) ASC</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_library]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Lấy tài khoản Mail" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT * FROM RPALIB.LIBRARY_NT WHERE Name IN ('MailAddress_Outlook','MailPassword_Outlook','MailServer') ORDER BY UPPER(NAME) ASC</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_Server]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="338,284" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Server]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(2)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Email]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(0)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Password]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(1)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_downloads]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(0)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_PIC]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(1)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_template]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(3)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_Folder]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(2)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">196,241.54</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">296,307.54 296,337.54 300,337.54 300,367</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Get Parameter" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="645,60" sap2010:WorkflowViewState.IdRef="Assign_77">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pathFileInput]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path_template + "PRINT YKK GL ACCOUNT\Print_Gl_Account.xlsx"]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="645,606" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Workbook="[wbTemplate]" WorkbookPath="[pathFileInput]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="611,497" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dtParameter]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="569,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A4:C4" SheetName="Sheet1" />
                    <ui:ExcelReadCell Cell="D4" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="569,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Sheet1">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="ui:GenericValue">[resultCell]</OutArgument>
                      </ui:ExcelReadCell.Result>
                    </ui:ExcelReadCell>
                    <If Condition="[String.IsNullOrEmpty(resultCell)]" sap:VirtualizedContainerService.HintSize="569,207" sap2010:WorkflowViewState.IdRef="If_2">
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[printAllFlag]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[printAllFlag]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="645,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_8" Workbook="[wbTemplate]" />
            <Assign sap:VirtualizedContainerService.HintSize="645,60" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pathVasFolder]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\Accounting\Public-HCM-BH\So chi tiet\" + dtParameter(0)(2).toString.Trim]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,367</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,433 300,496.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Check Valid Input Data" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="828,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strDateTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dtParameter(0)(0).toString.Trim + " " + dtParameter(0)(1).toString.Trim.padleft(5,CChar(“0”)) + ":00"]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[Date.TryParseExact(strDateTime,“MM/dd/yyyy HH:mm:ss”,Nothing,Globalization.DateTimeStyles.None,Nothing)]" sap:VirtualizedContainerService.HintSize="828,208" sap2010:WorkflowViewState.IdRef="If_7">
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[validFlag]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[validFlag]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
                <If Condition="[validFlag = True]" sap:VirtualizedContainerService.HintSize="828,237" sap2010:WorkflowViewState.IdRef="If_8">
                  <If.Then>
                    <ui:PathExists DisplayName="Path Exists" Exists="[validFlag]" sap:VirtualizedContainerService.HintSize="334,89" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[pathVasFolder]" PathType="Folder" />
                  </If.Then>
                </If>
                <If Condition="[printAllFlag = True And validFlag = True]" sap:VirtualizedContainerService.HintSize="828,1330" sap2010:WorkflowViewState.IdRef="If_35">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="683,1182" sap2010:WorkflowViewState.IdRef="Sequence_72">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:BuildDataTable DataTable="[dtVAS]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="641,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Column1&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="641,688" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[Directory.GetFiles(pathVasFolder)]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,554" sap2010:WorkflowViewState.IdRef="Sequence_71">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="si:FileInfo">[fileInfo]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="si:FileInfo">[new FileInfo(file.ToString)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[fileInfo.Name.StartsWith(&quot;export&quot;) Or &quot;TB.xls&quot;.Equals(fileInfo.Name) Or &quot;GL RF.xlsx&quot;.Equals(fileInfo.Name) Or &quot;CAMXOA.xlsx&quot;.Equals(fileInfo.Name)]" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_33">
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[fileNamVas]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[fileInfo.Name.ToString.Substring(0, fileInfo.Name.Length - 5)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{fileNamVas}]" DataTable="[dtVAS]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                      <If Condition="[dtVAS.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="641,263" sap2010:WorkflowViewState.IdRef="If_34">
                        <If.Then>
                          <ui:WriteRange AddHeaders="False" DataTable="[dtVAS]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Sheet1" StartingCell="D4" WorkbookPath="[pathFileInput]" />
                        </If.Then>
                        <If.Else>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[validFlag]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                </If>
              </Sequence>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID1" Condition="[validFlag]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">260.5,496.5</av:Point>
                      <av:Size x:Key="ShapeSize">79,87</av:Size>
                      <av:PointCollection x:Key="FalseConnector">339.5,540 440,540 440,637</av:PointCollection>
                      <av:PointCollection x:Key="TrueConnector">260.5,540 170,540 170,637</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">70,637</av:Point>
                          <av:Size x:Key="ShapeSize">200,66</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">170,703 170,733 240,733 240,756.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Process Print" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_69">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1483,2053" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_12" InstanceCachePeriod="3000" Workbook="[wbTemplate]" WorkbookPath="[pathFileInput]">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1218,1944" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="1176,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[isBegin]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ExcelReadCell Cell="E4" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="1176,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="Sheet1">
                                  <ui:ExcelReadCell.Result>
                                    <OutArgument x:TypeArguments="ui:GenericValue">[resultCell]</OutArgument>
                                  </ui:ExcelReadCell.Result>
                                </ui:ExcelReadCell>
                                <If Condition="[String.IsNullOrEmpty(resultCell)]" sap:VirtualizedContainerService.HintSize="1176,583" sap2010:WorkflowViewState.IdRef="If_36">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_51">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[currentCell]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">E3</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[isBegin]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="382,436" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[currentCell]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="E20000" ClipboardCopyFlg="False" CurrentCell="[currentCell]" DisplayName="Move vertical activity" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_2" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="Sheet1" WorkBook="[wbTemplate]" />
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[isBegin]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Assign sap:VirtualizedContainerService.HintSize="1176,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[lastRowE]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(currentCell.Substring(1))]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="1176,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[currentCell]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="D20000" ClipboardCopyFlg="False" CurrentCell="[currentCell]" DisplayName="Move vertical activity" sap:VirtualizedContainerService.HintSize="1176,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_5" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="Sheet1" WorkBook="[wbTemplate]" />
                                <Assign sap:VirtualizedContainerService.HintSize="1176,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[lastRowD]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(currentCell.Substring(1))]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[isBegin = True]" sap:VirtualizedContainerService.HintSize="1176,546" sap2010:WorkflowViewState.IdRef="If_37">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,251" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[lastRowE]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtVAS]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" Range="[&quot;D4:D&quot; + lastRowD.ToString]" SheetName="Sheet1" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="755,399" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[lastRowE + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[lastRowD - lastRowE &gt; 1]" sap:VirtualizedContainerService.HintSize="713,207" sap2010:WorkflowViewState.IdRef="If_38">
                                        <If.Then>
                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dtVAS]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" Range="[&quot;D&quot; + (lastRowE + 2).ToString + &quot;:D&quot; + lastRowD.ToString]" SheetName="Sheet1" />
                                        </If.Then>
                                        <If.Else>
                                          <ui:BuildDataTable DataTable="[dtVAS]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_4" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Column1&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                        </ui:ExcelApplicationScope>
                        <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="1483,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_9" Workbook="[wbTemplate]" />
                        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtVAS]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="1483,3847" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1433,3699" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[String.IsNullOrEmpty(row(0).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="1391,3507" sap2010:WorkflowViewState.IdRef="If_30">
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="1246,3359" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:PathExists DisplayName="Path Exists" Exists="[validFlag]" sap:VirtualizedContainerService.HintSize="1204,89" sap2010:WorkflowViewState.IdRef="PathExists_7" Path="[pathVasFolder + &quot;\&quot; + row(0).ToString.Trim + &quot;.xlsx&quot;]" PathType="File" />
                                      <If Condition="[validFlag]" sap:VirtualizedContainerService.HintSize="1204,3138" sap2010:WorkflowViewState.IdRef="If_29">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="1059,2990" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1017,2799" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathVasFolder + &quot;\&quot; + row(0).ToString.Trim + &quot;.xlsx&quot;]">
                                              <ui:ExcelApplicationScope.Body>
                                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="983,2690" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="941,68" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition Position="Center">
                                                          <ui:CursorPosition.OffsetX>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetX>
                                                          <ui:CursorPosition.OffsetY>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetY>
                                                        </ui:CursorPosition>
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="86ca3201-cf93-4423-9535-dae66c1a8455" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&#xA;&lt;uia cls='MsoCommandBar' name='Ribbon' /&gt;&#xA;&lt;uia automationid='FileTabButton' cls='NetUIRibbonTab' name='File Tab' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="941,68" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition Position="Center">
                                                          <ui:CursorPosition.OffsetX>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetX>
                                                          <ui:CursorPosition.OffsetY>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetY>
                                                        </ui:CursorPosition>
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="164d2204-e46d-4f80-97de-a8d0d837c394" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&#xA;&lt;uia cls='NetUIRibbonTab' name='Print' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="941,22" sap2010:WorkflowViewState.IdRef="Delay_9" />
                                                    <Assign sap:VirtualizedContainerService.HintSize="941,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[checkFlag]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap:VirtualizedContainerService.HintSize="941,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="s:DateTime">[starttime]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="s:DateTime">[now]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="941,1375" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_9">
                                                      <ui:InterruptibleWhile.Body>
                                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="905,1210" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:UiElementExists DisplayName="Element Exists" Exists="[checkFlag]" sap:VirtualizedContainerService.HintSize="863,68" sap2010:WorkflowViewState.IdRef="UiElementExists_12">
                                                            <ui:UiElementExists.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="458bef24-569b-4533-8b10-0bab5780d6cd" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&#xA;&lt;uia cls='NetUIElement' name='Print' /&gt;&#xA;&lt;uia cls='NetUISlabContainer' name='Print' /&gt;&#xA;&lt;uia cls='NetUIElement' name='Printer' /&gt;&#xA;&lt;uia cls='NetUIDropdownAnchor' name='Which Printer' helpText='Status: Ready&amp;#xA;Type: Microsoft enhanced Point and Print driver&amp;#xA;Where: Nhon Trach&amp;#xA;Comment: &amp;#xA;' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:UiElementExists.Target>
                                                          </ui:UiElementExists>
                                                          <If Condition="[checkFlag = False]" sap:VirtualizedContainerService.HintSize="863,409" sap2010:WorkflowViewState.IdRef="If_28">
                                                            <If.Then>
                                                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_19" Key="f9" KeyModifiers="Alt, Ctrl, Shift" SpecialKey="True">
                                                                <ui:SendHotkey.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="768b19d7-484f-4625-a581-f631a0c45d6a">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                    <ui:Target.WaitForReady>
                                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                    </ui:Target.WaitForReady>
                                                                  </ui:Target>
                                                                </ui:SendHotkey.Target>
                                                              </ui:SendHotkey>
                                                            </If.Then>
                                                            <If.Else>
                                                              <If Condition="[index &gt; 3]" sap:VirtualizedContainerService.HintSize="484,262" sap2010:WorkflowViewState.IdRef="If_27">
                                                                <If.Then>
                                                                  <ui:WriteCell Cell="[&quot;E&quot; + index.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="Sheet1" Text="DONE" WorkbookPath="[pathFileInput]" />
                                                                </If.Then>
                                                              </If>
                                                            </If.Else>
                                                          </If>
                                                          <Assign sap:VirtualizedContainerService.HintSize="863,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="s:DateTime">[endtime]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="s:DateTime">[now]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap:VirtualizedContainerService.HintSize="863,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:TimeSpan">[totaltime]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:TimeSpan">[endtime-starttime]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <If Condition="[totaltime.TotalMinutes &gt; 10]" sap:VirtualizedContainerService.HintSize="863,361" sap2010:WorkflowViewState.IdRef="If_40">
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[validFlag]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Boolean">[validFlag]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </If.Else>
                                                          </If>
                                                        </Sequence>
                                                      </ui:InterruptibleWhile.Body>
                                                      <ui:InterruptibleWhile.Condition>
                                                        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="checkFlag = False" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                                                      </ui:InterruptibleWhile.Condition>
                                                    </ui:InterruptibleWhile>
                                                    <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="941,22" sap2010:WorkflowViewState.IdRef="Delay_10" />
                                                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="941,68" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition Position="Center">
                                                          <ui:CursorPosition.OffsetX>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetX>
                                                          <ui:CursorPosition.OffsetY>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetY>
                                                        </ui:CursorPosition>
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="63858dd6-19dc-4647-bb9d-2d32947a3c7f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&lt;uia cls='NetUIElement' name='Print' /&gt;&lt;uia cls='NetUISlabContainer' name='Print' /&gt;&lt;uia cls='NetUIElement' name='Settings' /&gt;&lt;uia cls='NetUIDropdownAnchor' name='Two-Sided Printing' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="941,68" sap2010:WorkflowViewState.IdRef="Click_14" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition Position="Center">
                                                          <ui:CursorPosition.OffsetX>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetX>
                                                          <ui:CursorPosition.OffsetY>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetY>
                                                        </ui:CursorPosition>
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6b2a11fe-2011-4949-8924-ae5ef48878f1" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&#xA;&lt;wnd cls='NetUIHWND' idx='1' /&gt;&#xA;&lt;ctrl idx='2' name='Print on Both Sides' role='list item' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="941,22" sap2010:WorkflowViewState.IdRef="Delay_11" />
                                                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="941,68" sap2010:WorkflowViewState.IdRef="Click_15" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition Position="Center">
                                                          <ui:CursorPosition.OffsetX>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetX>
                                                          <ui:CursorPosition.OffsetY>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetY>
                                                        </ui:CursorPosition>
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="63858dd6-19dc-4647-bb9d-2d32947a3c7f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&lt;uia cls='NetUIElement' name='Print' /&gt;&lt;uia cls='NetUISlabContainer' name='Print' /&gt;&lt;uia cls='NetUIElement' name='Settings' /&gt;&lt;uia cls='NetUIDropdownAnchor' name='Scale to Fit' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="941,68" sap2010:WorkflowViewState.IdRef="Click_16" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition Position="Center">
                                                          <ui:CursorPosition.OffsetX>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetX>
                                                          <ui:CursorPosition.OffsetY>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetY>
                                                        </ui:CursorPosition>
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="01a0b696-03f7-4740-9abd-365e4ecc8941" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&lt;wnd cls='NetUIHWND' idx='1' /&gt;&lt;ctrl name='Fit All Columns on One Page' role='list item' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="941,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_3" />
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="printYKKGlAccount" sap:VirtualizedContainerService.HintSize="941,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_3" />
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ExcelApplicationScope.Body>
                                            </ui:ExcelApplicationScope>
                                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="1017,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_6" Workbook="[wb]" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Assign sap:VirtualizedContainerService.HintSize="1391,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEachRow>
                        <If Condition="[validFlag = True]" sap:VirtualizedContainerService.HintSize="1483,2467" sap2010:WorkflowViewState.IdRef="If_41">
                          <If.Then>
                            <Sequence DisplayName="Process End Vas File" sap:VirtualizedContainerService.HintSize="909,2319" sap2010:WorkflowViewState.IdRef="Sequence_80">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ReadCell Cell="[&quot;D&quot; + lastRowD.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="867,87" sap2010:WorkflowViewState.IdRef="ReadCell_1" SheetName="Sheet1" WorkbookPath="[pathFileInput]">
                                <ui:ReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[currentCell]</OutArgument>
                                </ui:ReadCell.Result>
                              </ui:ReadCell>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="867,2001" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_13" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathVasFolder + &quot;\&quot; + currentCell.Trim + &quot;.xlsx&quot;]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="833,1892" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="791,68" sap2010:WorkflowViewState.IdRef="Click_17" KeyModifiers="None" MouseButton="BTN_LEFT">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="86ca3201-cf93-4423-9535-dae66c1a8455" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&#xA;&lt;uia cls='MsoCommandBar' name='Ribbon' /&gt;&#xA;&lt;uia automationid='FileTabButton' cls='NetUIRibbonTab' name='File Tab' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:Click.Target>
                                      </ui:Click>
                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="791,68" sap2010:WorkflowViewState.IdRef="Click_18" KeyModifiers="None" MouseButton="BTN_LEFT">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="164d2204-e46d-4f80-97de-a8d0d837c394" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&#xA;&lt;uia cls='NetUIRibbonTab' name='Print' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:Click.Target>
                                      </ui:Click>
                                      <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="791,22" sap2010:WorkflowViewState.IdRef="Delay_12" />
                                      <Assign sap:VirtualizedContainerService.HintSize="791,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[checkFlag]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="791,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:DateTime">[starttime]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:DateTime">[now]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InterruptibleWhile Condition="[checkFlag = False]" DisplayName="While" sap:VirtualizedContainerService.HintSize="791,1322" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_10">
                                        <ui:InterruptibleWhile.Body>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="755,1157" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:UiElementExists DisplayName="Element Exists" Exists="[checkFlag]" sap:VirtualizedContainerService.HintSize="713,68" sap2010:WorkflowViewState.IdRef="UiElementExists_14">
                                              <ui:UiElementExists.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="458bef24-569b-4533-8b10-0bab5780d6cd" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&#xA;&lt;uia cls='NetUIElement' name='Print' /&gt;&#xA;&lt;uia cls='NetUISlabContainer' name='Print' /&gt;&#xA;&lt;uia cls='NetUIElement' name='Printer' /&gt;&#xA;&lt;uia cls='NetUIDropdownAnchor' name='Which Printer' helpText='Status: Ready&amp;#xA;Type: Microsoft enhanced Point and Print driver&amp;#xA;Where: Nhon Trach&amp;#xA;Comment: &amp;#xA;' /&gt;">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:UiElementExists.Target>
                                            </ui:UiElementExists>
                                            <If Condition="[checkFlag = True]" sap:VirtualizedContainerService.HintSize="713,263" sap2010:WorkflowViewState.IdRef="If_39">
                                              <If.Then>
                                                <ui:WriteCell Cell="[&quot;E&quot; + index.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_4" SheetName="Sheet1" Text="DONE" WorkbookPath="[pathFileInput]">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:WriteCell>
                                              </If.Then>
                                              <If.Else>
                                                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_20" Key="f9" KeyModifiers="Alt, Ctrl, Shift" SpecialKey="True">
                                                  <ui:SendHotkey.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="768b19d7-484f-4625-a581-f631a0c45d6a">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:SendHotkey.Target>
                                                </ui:SendHotkey>
                                              </If.Else>
                                            </If>
                                            <Assign sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="s:DateTime">[endtime]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="s:DateTime">[now]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_73">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:TimeSpan">[totaltime]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:TimeSpan">[endtime-starttime]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <If Condition="[totaltime.TotalMinutes &gt; 10]" sap:VirtualizedContainerService.HintSize="713,454" sap2010:WorkflowViewState.IdRef="If_42">
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,307" sap2010:WorkflowViewState.IdRef="Sequence_86">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:WriteCell Cell="[&quot;E&quot; + index.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_5" SheetName="Sheet1" Text="DONE" WorkbookPath="[pathFileInput]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:WriteCell>
                                                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[checkFlag]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ui:InterruptibleWhile.Body>
                                      </ui:InterruptibleWhile>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="867,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_10" Workbook="[wb]" />
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                      <FlowStep.Next>
                        <FlowDecision x:Name="__ReferenceID6" Condition="[validFlag]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:Point x:Key="ShapeLocation">200.5,756.5</av:Point>
                              <av:Size x:Key="ShapeSize">79,87</av:Size>
                              <av:PointCollection x:Key="TrueConnector">200.5,800 170,800 170,877</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <FlowDecision.True>
                            <FlowStep x:Name="__ReferenceID4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">70,877</av:Point>
                                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Send Mail Successful" sap:VirtualizedContainerService.HintSize="421,266" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send mail" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">
                                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;[RPA] &quot;+EndStatus+&quot;: &quot; + &quot;PRINT YKK GL ACCOUNT&quot;" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="mail_Content">
                                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;&lt;p&gt;Dear ACCOUNTING,&lt;/p&gt;&quot; +&#xD;&#xA;&quot;&lt;p&gt;Robot đã chạy xong chức năng in!&lt;/p&gt;&quot;" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">
                                      <Literal x:TypeArguments="x:String">tiendung@ykk.com.vn, p-minhphuong@ykk.com.vn, tunam@ykk.com.vn</Literal>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">
                                      <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{Path_template + &quot;PRINT YKK GL ACCOUNT\Print_Gl_Account.xlsx&quot;}" />
                                    </InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="379,22" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[Path_template + &quot;PRINT YKK GL ACCOUNT\Print_Gl_Account.xlsx&quot;]" />
                              </Sequence>
                            </FlowStep>
                          </FlowDecision.True>
                        </FlowDecision>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">340,637</av:Point>
                          <av:Size x:Key="ShapeSize">200,66</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Send Mail Invalid Data" sap:VirtualizedContainerService.HintSize="421,204" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send mail" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;[RPA] ERROR: &quot;+ &quot;PRINT YKK GL ACCOUNT&quot;" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="mail_Content">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;&lt;p&gt;Dear PIC,&lt;/p&gt;&quot; +&#xD;&#xA;&quot;&lt;p&gt;Dữ liệu đầu vào trong file template không đúng&lt;/p&gt;&quot; +&#xD;&#xA;&quot;&lt;p&gt;Vui lòng kiểm tra lại&lt;/p&gt;&quot;" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Mail_PIC" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                            <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">
                              <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{Path_template + &quot;PRINT YKK GL ACCOUNT\Print_Gl_Account.xlsx&quot;}" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
  </Flowchart>
</Activity>