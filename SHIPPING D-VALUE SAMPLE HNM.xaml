<Activity mc:Ignorable="sap sap2010" x:Class="SHIPPING_SAMPLE_D_VALUE_HNM" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:ee="clr-namespace:ExcelCustomActivities.Excel;assembly=ExcelCustomActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Order_Number" Type="InOutArgument(x:String)" />
    <x:Property Name="EndMessage" Type="InOutArgument(x:String)" />
    <x:Property Name="EndStatus" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>862,1096</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SHIPPING_SAMPLE_D_VALUE_HNM_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>ExcelCustomActivities.Excel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Microsoft.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="39">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>ExcelCustomActivities</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="SHIPPING_SAMPLE_D_VALUE_HNM" sap:VirtualizedContainerService.HintSize="661,1031" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Server" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_library" />
      <Variable x:TypeArguments="x:String" Name="Path_Folder" />
      <Variable x:TypeArguments="x:String" Name="Path_downloads" />
      <Variable x:TypeArguments="x:String" Name="Path_template" />
      <Variable x:TypeArguments="x:String" Name="Mail_Password" />
      <Variable x:TypeArguments="x:String" Name="Mail_Email" />
      <Variable x:TypeArguments="x:String" Name="Mail_Server" />
      <Variable x:TypeArguments="x:String" Name="dayNow" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtDays" />
      <Variable x:TypeArguments="x:Boolean" Name="isOffDayHN" />
      <Variable x:TypeArguments="s:DateTime" Name="reportDayHN" />
      <Variable x:TypeArguments="x:String" Name="pathInputFile" />
      <Variable x:TypeArguments="x:Boolean" Name="Check_Exists" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wb" />
      <Variable x:TypeArguments="x:String" Name="stBody" />
      <Variable x:TypeArguments="x:String" Name="stLastCell" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtDataTable" />
      <Variable x:TypeArguments="x:String" Name="stLastColumn" />
      <Variable x:TypeArguments="x:String" Name="stInsertColumn" />
      <Variable x:TypeArguments="x:String" Name="stNextColumn" />
      <Variable x:TypeArguments="x:Int32" Name="processStatus" />
      <Variable x:TypeArguments="x:String" Name="pathFolderResult" />
      <Variable x:TypeArguments="x:String" Name="pathImage" />
      <Variable x:TypeArguments="x:String" Name="stCheckData" />
      <Variable x:TypeArguments="ui:GenericValue" Name="cellValue" />
      <Variable x:TypeArguments="sd1:Image" Name="Image" />
      <Variable x:TypeArguments="x:String" Name="pathChart" />
      <Variable x:TypeArguments="x:String" Name="image_base64" />
      <Variable x:TypeArguments="x:String" Name="pathFolderRun" />
      <Variable x:TypeArguments="x:String" Name="pathFileRun" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="x:String" Name="sheetName" />
      <Variable x:TypeArguments="ui:GenericValue" Name="reasonValue" />
      <Variable x:TypeArguments="ui:GenericValue" Name="coutermesureValue" />
      <Variable x:TypeArguments="x:String" Name="pathChartDelay" />
      <Variable x:TypeArguments="x:Boolean" Name="chartDelay" />
      <Variable x:TypeArguments="x:Boolean" Name="is_Delay" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,22.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,97.5 300,137.5</av:PointCollection>
        <x:Double x:Key="Width">627</x:Double>
        <x:Double x:Key="Height">995</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,137.5</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,203.5 300,243.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Setting SQL" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT * FROM RPALIB.LIBRARY_NT WHERE Name IN ('ServerSavedFile','dirDownFile','ServerTemp') ORDER BY UPPER(NAME) ASC</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_library]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Lấy tài khoản Mail" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT * FROM RPALIB.LIBRARY_NT WHERE Name IN ('MailAddress_Outlook','MailPassword_Outlook','MailServer') ORDER BY UPPER(NAME) ASC</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_Server]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,253" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Server]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(2)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Email]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(0)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Password]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(1)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_downloads]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(0)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_template]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(2)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_Folder]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(1)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:MultipleAssign>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,243.5</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,309.5 300,339.5 300.141666666667,339.5 300.141666666667,349.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Get Working Day HN" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[dayNow]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("yyyyMMdd")]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtDays]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="569,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" ProviderName="System.Data.Odbc" Sql="Select *&#xA;From WAVEDLIB.C0200&#xA;Where YMDU02=? And DPTC02='01' AND HTYC02='0'" ConnectionString="Dsn=WAVEDLIB_HN;uid=ROBOT;pwd=PASSWORD">
              <ui:ExecuteQuery.Parameters>
                <InArgument x:TypeArguments="x:String" x:Key="Argument1">[dayNow]</InArgument>
              </ui:ExecuteQuery.Parameters>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExecuteQuery>
            <If Condition="[dtDays.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="569,220" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[isOffDayHN]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[isOffDayHN]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <Sequence DisplayName="Get Working Day" sap:VirtualizedContainerService.HintSize="569,280" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtDays]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" ProviderName="System.Data.Odbc" Sql="Select YMDU02&#xA;From WAVEDLIB.C0200&#xA;Where YMDU02&lt;? And DPTC02='01' AND HTYC02=0&#xA;Order By YMDU02 DESC &#xA;LIMIT 1" ConnectionString="Dsn=WAVEDLIB_HN;uid=ROBOT;pwd=PASSWORD">
                <ui:ExecuteQuery.Parameters>
                  <InArgument x:TypeArguments="x:String" x:Key="Argument1">[dayNow]</InArgument>
                </ui:ExecuteQuery.Parameters>
              </ui:ExecuteQuery>
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[reportDayHN]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[Datetime.ParseExact(dtDays.Rows(0)(0).ToString,“yyyyMMdd”,System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </Sequence>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID2" Condition="[isOffDayHN]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">260.641666666667,349.5</av:Point>
                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                  <av:PointCollection x:Key="FalseConnector">339.641666666667,393 450,393 450,456.04</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.False>
                <FlowStep x:Name="__ReferenceID3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">350,456.04</av:Point>
                      <av:Size x:Key="ShapeSize">200,66</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">450,522.04 450,552.04 450.141666666667,552.04 450.141666666667,562.04</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Set Parameter" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[pathFolderResult]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["\\10.247.194.230\ykkhnf_data$\PUBLIC\OPERATION\Logistic Control\SHIPPING\6. D-value sample report\"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[pathFolderRun]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["H:\Robotics\SHIPPING D-VALUE SAMPLE HNM\"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[pathInputFile]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[pathFolderResult + "Shipping sample D-value daily report New Ver.xlsm"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:PathExists DisplayName="Path Exists" Exists="[Check_Exists]" sap:VirtualizedContainerService.HintSize="334,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[pathInputFile]" PathType="File" />
                  </Sequence>
                  <FlowStep.Next>
                    <FlowDecision x:Name="__ReferenceID4" Condition="[Check_Exists]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">410.641666666667,562.04</av:Point>
                          <av:Size x:Key="ShapeSize">79,87</av:Size>
                          <av:PointCollection x:Key="TrueConnector">410.641666666667,605.54 270,605.54 270,677</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">489.641666666667,605.54 580,605.54 580,841 550,841</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">170,677</av:Point>
                              <av:Size x:Key="ShapeSize">200,66</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">270,743 270,841 350,841</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Process" sap:VirtualizedContainerService.HintSize="518,1107" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="476,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[pathFileRun]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[pathFolderRun + "Shipping sample D-value daily report New Ver.xlsm"]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[pathImage]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[pathFolderRun + "graph_" + reportDayHN.ToString("yyyyMMdd") + ".jpg"]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[pathChart]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[pathFolderRun + "chart_" + reportDayHN.ToString("yyyyMMdd") + ".jpg"]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[pathChartDelay]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[pathFolderRun + "chartDelay_" + reportDayHN.ToString("yyyyMMdd") + ".jpg"]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="476,305" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Directory.GetFiles(pathFolderRun)]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="x:Object">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,171" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:Delete ContinueOnError="True" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="Delete_8" Path="[pathFolderRun + Path.GetFileName(item.ToString)]" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEach>
                            <Sequence DisplayName="PROCESS" sap:VirtualizedContainerService.HintSize="476,439" sap2010:WorkflowViewState.IdRef="Sequence_72">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[pathFileRun]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="CopyFile_4" Overwrite="True" Path="[pathInputFile]" />
                              <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFileRun]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1039,4065" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window" sap:VirtualizedContainerService.HintSize="997,51" sap2010:WorkflowViewState.IdRef="WindowScope_2" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Shipping sample D-value*' /&gt;">
                                        <ui:WindowScope.Body>
                                          <ActivityAction x:TypeArguments="x:Object">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_2" />
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:WindowScope.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:WindowScope>
                                      <Sequence DisplayName="Sheet 3.SAMPLE D-V (Half day)" sap:VirtualizedContainerService.HintSize="997,66" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="sd:DataTable" Name="dt_HAFLDAY" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelWriteCell Cell="C3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="647,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="3.SAMPLE D-V (Half day)" Text="[reportDayHN.ToString(&quot;yyyyMMdd&quot;)]" />
                                        <ui:ClickImage ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Image 'excel.exe Shipping'" sap:VirtualizedContainerService.HintSize="647,154" sap2010:WorkflowViewState.IdRef="ClickImage_4" KeyModifiers="None" MouseButton="BTN_LEFT">
                                          <ui:ClickImage.CursorPosition>
                                            <ui:CursorPosition Position="Center">
                                              <ui:CursorPosition.OffsetX>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:CursorPosition.OffsetX>
                                              <ui:CursorPosition.OffsetY>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:CursorPosition.OffsetY>
                                            </ui:CursorPosition>
                                          </ui:ClickImage.CursorPosition>
                                          <ui:ClickImage.Image>
                                            <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAAFkAAAAeCAYAAABHVrJ7AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAH/SURBVGhD7Zq/SgNBEIfvwSQ5NWDlS6iJGtLEZ9FGRLAQSaUWEdHOiKWFSBBEUVAL/xSK2FiM+QUG1sns3ZFc1hBn4CO53dnd7HebvUA2ur5/pdnaFhXL21SsHtJ0/YRKK6dGn8AfPMblHZqpbNLV7TNFEDyxuK82MAajsNSkqbl1irCCtQQjHwrzOx3JnaWtVRr5ENeOKLI9eMjUWxSpFUaumOQAmOQAmOQAmOQA5Ca5vnpBiLXdm566h5cvat99/LqW4bZDrgy04XrJ2eVbNwevbrk2Dsf757c3J2msfvgzye41S0IfuEadnCjL4BwXCEMbFqeh9QnkZxkGIyEZQBCvxCQhshzjsVzf+MAkd0CkSd5rPXXz3DLkcl/ue4mvz38jOct2AdC3mwcQPKZ2E5gkyTJ834Z+GZkHn5ufVTKkyn0YgXK3DCRJdj/bMMhNMkD4JLtP/rSJ+YTIlYocLbS2YyPZfXi5INzVlTaxJCFc7vvmyNXOjI1kubcCTADh5qVNTBOCawT3jbF8P9kQ8maPjWTAojk0EVkky9Ck+/pAuRwXZT7JMnw3r19yl2z0YpIDYJIDYJIDYJIDYH+kBsCOBAyZuHZMEY4TaZVGPhTKDYpwXquw3FQTjMEoVg9oEse0cCCutLBBcaXRPe2CwxhaAyM72CKwgiH4vP1IP1kx54ZAk/28AAAAAElFTkSuQmCC" />
                                          </ui:ClickImage.Image>
                                          <ui:ClickImage.Target>
                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e7a3591d-ebfc-491d-89d6-5bdc530e8af6" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Shipping sample D-value*' /&gt;">
                                              <ui:Target.TimeoutMS>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:Target.TimeoutMS>
                                              <ui:Target.WaitForReady>
                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                              </ui:Target.WaitForReady>
                                            </ui:Target>
                                          </ui:ClickImage.Target>
                                        </ui:ClickImage>
                                        <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="647,22" sap2010:WorkflowViewState.IdRef="Delay_12" />
                                        <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_HAFLDAY]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="647,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" Range="A7" SheetName="3.SAMPLE D-V (Half day)" />
                                        <If Condition="[dt_HAFLDAY.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="647,587" sap2010:WorkflowViewState.IdRef="If_22">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="611,410" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:FilterDataTable DataTable="[dt_HAFLDAY]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="569,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[dt_HAFLDAY]" SelectColumnsMode="Keep">
                                                <ui:FilterDataTable.Filters>
                                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:Int32">[12]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">["DELAY"]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                  </scg:List>
                                                </ui:FilterDataTable.Filters>
                                                <ui:FilterDataTable.SelectColumns>
                                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                    <x:Null />
                                                  </scg:List>
                                                </ui:FilterDataTable.SelectColumns>
                                              </ui:FilterDataTable>
                                              <If Condition="[dt_HAFLDAY.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="569,219" sap2010:WorkflowViewState.IdRef="If_21">
                                                <If.Then>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[is_Delay]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </If.Then>
                                                <If.Else>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[is_Delay]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Sheet 4.D-V Half Day" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">4.D-V Half Day</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_10" Range="A4" SheetName="[sheetName]" />
                                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_8" Key="f5" KeyModifiers="Alt" SpecialKey="True">
                                          <ui:SendHotkey.Target>
                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ed4b7970-0a00-4192-88a5-9fec49cacf01" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Shipping sample D-value*' /&gt;">
                                              <ui:Target.TimeoutMS>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:Target.TimeoutMS>
                                              <ui:Target.WaitForReady>
                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                              </ui:Target.WaitForReady>
                                            </ui:Target>
                                          </ui:SendHotkey.Target>
                                        </ui:SendHotkey>
                                        <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_11" Range="F4" SheetName="[sheetName]" />
                                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_9" Key="f5" KeyModifiers="Alt" SpecialKey="True">
                                          <ui:SendHotkey.Target>
                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ed4b7970-0a00-4192-88a5-9fec49cacf01" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Shipping sample D-value*' /&gt;">
                                              <ui:Target.TimeoutMS>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:Target.TimeoutMS>
                                              <ui:Target.WaitForReady>
                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                              </ui:Target.WaitForReady>
                                            </ui:Target>
                                          </ui:SendHotkey.Target>
                                        </ui:SendHotkey>
                                      </Sequence>
                                      <Sequence DisplayName="Sheet 4.2 Pivot" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_73">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">4.2 Pivot</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="797,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_12" Range="B4" SheetName="[sheetName]" />
                                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="797,116" sap2010:WorkflowViewState.IdRef="SendHotkey_10" Key="f5" KeyModifiers="Alt" SpecialKey="True">
                                          <ui:SendHotkey.Target>
                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ed4b7970-0a00-4192-88a5-9fec49cacf01" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Shipping sample D-value*' /&gt;">
                                              <ui:Target.TimeoutMS>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:Target.TimeoutMS>
                                              <ui:Target.WaitForReady>
                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                              </ui:Target.WaitForReady>
                                            </ui:Target>
                                          </ui:SendHotkey.Target>
                                        </ui:SendHotkey>
                                        <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="H10000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity1" sap:VirtualizedContainerService.HintSize="797,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_4" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                        <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="797,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_3" Range="[&quot;H5:I&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                        <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="F10000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity2" sap:VirtualizedContainerService.HintSize="797,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_5" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                        <If Condition="[is_Delay]" sap:VirtualizedContainerService.HintSize="797,663" sap2010:WorkflowViewState.IdRef="If_23">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,504" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDataTable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" Range="[&quot;E5:E&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="[sheetName]" StartingCell="H5" />
                                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDataTable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" Range="[&quot;G5:G&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_9" SheetName="[sheetName]" StartingCell="I5" />
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDataTable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" Range="[&quot;E5:F&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_10" SheetName="[sheetName]" StartingCell="H5" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Sheet 4.3 data (PR)" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">4.3dataPR</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ee:MoveHorizontalActivity MoveCount="{x:Null}" BaseCell="XFD2" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity1" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_14" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                        <ee:MoveHorizontalActivity BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stCheckData]" DisplayName="Move horizontal activity2" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_15" MoveCount="2" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                        <ui:ExcelReadCell Cell="[stCheckData]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_7" SheetName="[sheetName]">
                                          <ui:ExcelReadCell.Result>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                          </ui:ExcelReadCell.Result>
                                        </ui:ExcelReadCell>
                                        <If Condition="[cellValue.ToString.StartsWith(reportDayHN.ToString(&quot;MM/dd&quot;))]" sap:VirtualizedContainerService.HintSize="527,1560" sap2010:WorkflowViewState.IdRef="If_24">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="382,1402" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDataTable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_12" Range="[stLastColumn + &quot;:&quot; + stLastColumn.Substring(0, stLastColumn.Length - 1) + &quot;111&quot;]" SheetName="[sheetName]" />
                                              <ee:MoveHorizontalActivity BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stInsertColumn]" DisplayName="Move horizontal activity3" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_16" MoveCount="1" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                              <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Delay_13" />
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\SHIPPING D-VALUE SAMPLE HNM.vb" DisplayName="Invoke VBA1" EntryMethodName="InsertColumn" EntryMethodParameters="[{stInsertColumn.Substring(0,stInsertColumn.Length - 1)}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_19" />
                                              <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Delay_14" />
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\SHIPPING D-VALUE SAMPLE HNM.vb" DisplayName="Invoke VBA2" EntryMethodName="SetRangeBorder" EntryMethodParameters="[{stInsertColumn.Substring(0,stInsertColumn.Length - 1),sheetName}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_20" />
                                              <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Delay_15" />
                                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_11" SheetName="[sheetName]" StartingCell="[stInsertColumn]" />
                                              <ui:ExcelWriteCell Cell="[stInsertColumn]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="[sheetName]" Text="[reportDayHN.ToString(&quot;M/dd/yyyy&quot;)]" />
                                              <ee:MoveHorizontalActivity BaseCell="[stInsertColumn]" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move horizontal activity4" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_17" MoveCount="11" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                              <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Delay_26" />
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\SHIPPING D-VALUE SAMPLE HNM.vb" DisplayName="Invoke VBA3" EntryMethodName="HideColumn" EntryMethodParameters="[{sheetName,&quot;F&quot;, 2, stLastCell}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_21" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Sheet 4.4GRAPH" sap:VirtualizedContainerService.HintSize="997,3290" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="955,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">4.4GRAPH</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ee:MoveHorizontalActivity MoveCount="{x:Null}" BaseCell="XFD10" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity5" sap:VirtualizedContainerService.HintSize="955,144" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_18" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                        <ui:ExcelReadCell Cell="[stLastColumn]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="955,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_8" SheetName="[sheetName]">
                                          <ui:ExcelReadCell.Result>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                          </ui:ExcelReadCell.Result>
                                        </ui:ExcelReadCell>
                                        <If Condition="[cellValue.ToString.StartsWith(reportDayHN.ToString(&quot;MM/dd&quot;))]" sap:VirtualizedContainerService.HintSize="955,2225" sap2010:WorkflowViewState.IdRef="If_26">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="810,2067" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ee:MoveHorizontalActivity BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stNextColumn]" DisplayName="Move horizontal activity6" sap:VirtualizedContainerService.HintSize="768,144" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_19" MoveCount="1" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" BaseCell="[stNextColumn]" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity3" sap:VirtualizedContainerService.HintSize="768,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_6" MoveCount="1" MoveDirection="Down" MoveLastDataRowFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                              <ui:ExcelCopyPasteRange CopyItems="Formula, NumberFormat, CellFormat" DestinationCell="[stNextColumn]" DestinationSheet="[sheetName]" DisplayName="Copy Range" sap:VirtualizedContainerService.HintSize="768,238" sap2010:WorkflowViewState.IdRef="ExcelCopyPasteRange_3" SheetName="[sheetName]" SourceRange="[stLastColumn.Substring(0, stLastColumn.Length - 2) + &quot;10:&quot; + stLastColumn.Substring(0, stLastColumn.Length - 2) + &quot;16&quot;]" />
                                              <Sequence DisplayName="Set Range Border" sap:VirtualizedContainerService.HintSize="768,66" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="726,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_13" Range="[stNextColumn.Substring(0, stNextColumn.Length - 2) + &quot;10:&quot; + stNextColumn.Substring(0, stNextColumn.Length - 2) + &quot;16&quot;]" SheetName="[sheetName]" />
                                                <ui:AnchorBase AnchorPosition="Auto" DisplayName="Anchor Base" sap:VirtualizedContainerService.HintSize="726,246" sap2010:WorkflowViewState.IdRef="AnchorBase_3">
                                                  <ui:AnchorBase.Action>
                                                    <ActivityAction x:TypeArguments="ui:Anchor">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                                                      </ActivityAction.Argument>
                                                      <ui:ClickImage ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Image 'excel.exe STEP2_Stock'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="ClickImage_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                        <ui:ClickImage.CursorPosition>
                                                          <ui:CursorPosition Position="Center">
                                                            <ui:CursorPosition.OffsetX>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:CursorPosition.OffsetX>
                                                            <ui:CursorPosition.OffsetY>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:CursorPosition.OffsetY>
                                                          </ui:CursorPosition>
                                                        </ui:ClickImage.CursorPosition>
                                                        <ui:ClickImage.Image>
                                                          <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAABMAAAAOCAYAAADNGCeJAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAA4SURBVDhPY/hPRTBqGASUl5djxdgAUYYRCwbOMFxsGCDZZSA+DKMD+hqGDJANotgwQmCwGvb/PwDmbP9ehJj7oQAAAABJRU5ErkJggg==" />
                                                        </ui:ClickImage.Image>
                                                        <ui:ClickImage.Target>
                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="b45e60a5-b210-4ed5-ac12-145795e213d2">
                                                            <ui:Target.TimeoutMS>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:Target.TimeoutMS>
                                                            <ui:Target.WaitForReady>
                                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                                            </ui:Target.WaitForReady>
                                                          </ui:Target>
                                                        </ui:ClickImage.Target>
                                                      </ui:ClickImage>
                                                    </ActivityAction>
                                                  </ui:AnchorBase.Action>
                                                  <ui:AnchorBase.AnchorProvider>
                                                    <ui:WaitImageAppear FoundElement="{x:Null}" DisplayName="Find Image 'excel.exe STEP2_Stock'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitImageAppear_3">
                                                      <ui:WaitImageAppear.Image>
                                                        <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAACQAAAATCAYAAAD4f6+NAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACVSURBVEhL7ZLhDcAQEEY7jTmsYQ5b2MIWxrCLATTX5ARRRxPSNvfjJe4+PS/0CCHEN8FCFCxEwUIU3xMSQhQYY5r7RoEZ3vtmBgwJ9QbMslQIMsQ5V/SttSnDW8U679VMPxkerJRKQ+FwKWXxDeSwhv1Q59mSG6r7eT2T1fxHiHqy7UKYIXcCda21vurHP/VuWKhPiCfgt7MLHn3tMQAAAABJRU5ErkJggg==" />
                                                      </ui:WaitImageAppear.Image>
                                                      <ui:WaitImageAppear.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e7d29907-0591-4294-9d09-c8fe1f7a085e" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Shipping sample*' /&gt;&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIOrderedGroup' name='Home' /&gt;&lt;uia cls='NetUIChunk' name='Font' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:WaitImageAppear.Target>
                                                    </ui:WaitImageAppear>
                                                  </ui:AnchorBase.AnchorProvider>
                                                </ui:AnchorBase>
                                                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click Border" sap:VirtualizedContainerService.HintSize="726,68" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                                  <ui:Click.CursorPosition>
                                                    <ui:CursorPosition Position="Center">
                                                      <ui:CursorPosition.OffsetX>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetX>
                                                      <ui:CursorPosition.OffsetY>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetY>
                                                    </ui:CursorPosition>
                                                  </ui:Click.CursorPosition>
                                                  <ui:Click.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b1d0d57c-d309-4745-9459-1f33663a0e24" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Format Cells' /&gt;&lt;ctrl name='Border' role='page tab' /&gt;">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:Click.Target>
                                                </ui:Click>
                                                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click None" sap:VirtualizedContainerService.HintSize="726,68" sap2010:WorkflowViewState.IdRef="Click_10" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                                  <ui:Click.CursorPosition>
                                                    <ui:CursorPosition Position="Center">
                                                      <ui:CursorPosition.OffsetX>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetX>
                                                      <ui:CursorPosition.OffsetY>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetY>
                                                    </ui:CursorPosition>
                                                  </ui:Click.CursorPosition>
                                                  <ui:Click.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9d73de5e-dc7a-448c-9178-1f5d6304b8f0" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Format Cells' /&gt;&lt;ctrl name='None' role='push button' /&gt;">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:Click.Target>
                                                </ui:Click>
                                                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click Outline" sap:VirtualizedContainerService.HintSize="726,68" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                                  <ui:Click.CursorPosition>
                                                    <ui:CursorPosition Position="Center">
                                                      <ui:CursorPosition.OffsetX>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetX>
                                                      <ui:CursorPosition.OffsetY>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetY>
                                                    </ui:CursorPosition>
                                                  </ui:Click.CursorPosition>
                                                  <ui:Click.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a797a2b8-b93a-4d6c-8ee0-d80f3694eb51" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Format Cells' /&gt;&lt;ctrl name='Outline' role='push button' /&gt;">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:Click.Target>
                                                </ui:Click>
                                                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click Inside" sap:VirtualizedContainerService.HintSize="726,68" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                                  <ui:Click.CursorPosition>
                                                    <ui:CursorPosition Position="Center">
                                                      <ui:CursorPosition.OffsetX>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetX>
                                                      <ui:CursorPosition.OffsetY>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetY>
                                                    </ui:CursorPosition>
                                                  </ui:Click.CursorPosition>
                                                  <ui:Click.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3620360d-3516-4706-8ce8-43a5d4643968" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Format Cells' /&gt;&lt;ctrl name='Inside' role='push button' /&gt;">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:Click.Target>
                                                </ui:Click>
                                                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click OK" sap:VirtualizedContainerService.HintSize="726,68" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                                  <ui:Click.CursorPosition>
                                                    <ui:CursorPosition Position="Center">
                                                      <ui:CursorPosition.OffsetX>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetX>
                                                      <ui:CursorPosition.OffsetY>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetY>
                                                    </ui:CursorPosition>
                                                  </ui:Click.CursorPosition>
                                                  <ui:Click.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ae7a53cd-b033-4056-b751-c25e5bca2f1c" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Format Cells' /&gt;&lt;ctrl name='OK' role='push button' /&gt;">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:Click.Target>
                                                </ui:Click>
                                              </Sequence>
                                              <ui:ExcelWriteCell Cell="[stNextColumn]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="768,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="[sheetName]" Text="[reportDayHN.ToString(&quot;M/dd/yyyy&quot;)]" />
                                              <ui:ExcelWriteCell Cell="[stLastCell]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="768,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="[sheetName]" Text="[reportDayHN.ToString(&quot;ddd&quot;)]" />
                                              <Assign sap:VirtualizedContainerService.HintSize="768,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">12</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Kiểm tra các cell vừa paste dữ liệu nếu có giá trị = IsNullOrEmpty --&gt; border cell đó = &quot;\&quot;" Condition="[index &lt; 17]" DisplayName="While" sap:VirtualizedContainerService.HintSize="882,1534" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                                                <ui:InterruptibleWhile.Body>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="846,1338" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="804,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:ExcelReadCell Cell="[stLastCell.Substring(0, stLastCell.Length - 2) + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="804,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_9" SheetName="[sheetName]">
                                                      <ui:ExcelReadCell.Result>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                                      </ui:ExcelReadCell.Result>
                                                    </ui:ExcelReadCell>
                                                    <If Condition="[String.IsNullOrEmpty(cellValue)]" sap:VirtualizedContainerService.HintSize="804,947" sap2010:WorkflowViewState.IdRef="If_25">
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="768,761" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="726,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_14" Range="[stLastCell.Substring(0, stLastCell.Length - 2) + index.ToString]" SheetName="[sheetName]" />
                                                          <ui:AnchorBase AnchorPosition="Auto" DisplayName="Anchor Base" sap:VirtualizedContainerService.HintSize="726,246" sap2010:WorkflowViewState.IdRef="AnchorBase_5">
                                                            <ui:AnchorBase.Action>
                                                              <ActivityAction x:TypeArguments="ui:Anchor">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                                                                </ActivityAction.Argument>
                                                                <ui:ClickImage ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Image 'excel.exe STEP2_Stock'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="ClickImage_7" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:ClickImage.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:ClickImage.CursorPosition>
                                                                  <ui:ClickImage.Image>
                                                                    <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAABMAAAAOCAYAAADNGCeJAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAA4SURBVDhPY/hPRTBqGASUl5djxdgAUYYRCwbOMFxsGCDZZSA+DKMD+hqGDJANotgwQmCwGvb/PwDmbP9ehJj7oQAAAABJRU5ErkJggg==" />
                                                                  </ui:ClickImage.Image>
                                                                  <ui:ClickImage.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="b45e60a5-b210-4ed5-ac12-145795e213d2">
                                                                      <ui:Target.TimeoutMS>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:Target.TimeoutMS>
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:ClickImage.Target>
                                                                </ui:ClickImage>
                                                              </ActivityAction>
                                                            </ui:AnchorBase.Action>
                                                            <ui:AnchorBase.AnchorProvider>
                                                              <ui:WaitImageAppear FoundElement="{x:Null}" DisplayName="Find Image 'excel.exe STEP2_Stock'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitImageAppear_5">
                                                                <ui:WaitImageAppear.Image>
                                                                  <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAACQAAAATCAYAAAD4f6+NAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACVSURBVEhL7ZLhDcAQEEY7jTmsYQ5b2MIWxrCLATTX5ARRRxPSNvfjJe4+PS/0CCHEN8FCFCxEwUIU3xMSQhQYY5r7RoEZ3vtmBgwJ9QbMslQIMsQ5V/SttSnDW8U679VMPxkerJRKQ+FwKWXxDeSwhv1Q59mSG6r7eT2T1fxHiHqy7UKYIXcCda21vurHP/VuWKhPiCfgt7MLHn3tMQAAAABJRU5ErkJggg==" />
                                                                </ui:WaitImageAppear.Image>
                                                                <ui:WaitImageAppear.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e7d29907-0591-4294-9d09-c8fe1f7a085e" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Shipping sample*' /&gt;&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIOrderedGroup' name='Home' /&gt;&lt;uia cls='NetUIChunk' name='Font' /&gt;">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                    <ui:Target.WaitForReady>
                                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                    </ui:Target.WaitForReady>
                                                                  </ui:Target>
                                                                </ui:WaitImageAppear.Target>
                                                              </ui:WaitImageAppear>
                                                            </ui:AnchorBase.AnchorProvider>
                                                          </ui:AnchorBase>
                                                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click Border" sap:VirtualizedContainerService.HintSize="726,68" sap2010:WorkflowViewState.IdRef="Click_14" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                                            <ui:Click.CursorPosition>
                                                              <ui:CursorPosition Position="Center">
                                                                <ui:CursorPosition.OffsetX>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetX>
                                                                <ui:CursorPosition.OffsetY>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetY>
                                                              </ui:CursorPosition>
                                                            </ui:Click.CursorPosition>
                                                            <ui:Click.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b1d0d57c-d309-4745-9459-1f33663a0e24" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Format Cells' /&gt;&lt;ctrl name='Border' role='page tab' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:Click.Target>
                                                          </ui:Click>
                                                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click Border \" sap:VirtualizedContainerService.HintSize="726,68" sap2010:WorkflowViewState.IdRef="Click_15" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                                            <ui:Click.CursorPosition>
                                                              <ui:CursorPosition Position="Center">
                                                                <ui:CursorPosition.OffsetX>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetX>
                                                                <ui:CursorPosition.OffsetY>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetY>
                                                              </ui:CursorPosition>
                                                            </ui:Click.CursorPosition>
                                                            <ui:Click.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2e908c33-bae9-4ad5-8963-04cc356b9109" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Format Cells' /&gt;&lt;ctrl name='Diagonal Down' role='check box' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:Click.Target>
                                                          </ui:Click>
                                                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click OK" sap:VirtualizedContainerService.HintSize="726,68" sap2010:WorkflowViewState.IdRef="Click_16" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                                            <ui:Click.CursorPosition>
                                                              <ui:CursorPosition Position="Center">
                                                                <ui:CursorPosition.OffsetX>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetX>
                                                                <ui:CursorPosition.OffsetY>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetY>
                                                              </ui:CursorPosition>
                                                            </ui:Click.CursorPosition>
                                                            <ui:Click.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ae7a53cd-b033-4056-b751-c25e5bca2f1c" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Format Cells' /&gt;&lt;ctrl name='OK' role='push button' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:Click.Target>
                                                          </ui:Click>
                                                        </Sequence>
                                                      </If.Then>
                                                    </If>
                                                    <Assign sap:VirtualizedContainerService.HintSize="804,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </ui:InterruptibleWhile.Body>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:InterruptibleWhile>
                                              <ee:MoveHorizontalActivity MoveCount="{x:Null}" BaseCell="XFD10" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity7" sap:VirtualizedContainerService.HintSize="768,144" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_20" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                              <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="768,22" sap2010:WorkflowViewState.IdRef="Delay_27" />
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\SHIPPING D-VALUE SAMPLE HNM.vb" DisplayName="Invoke VBA4" EntryMethodName="FillChart" EntryMethodParameters="[{&quot;BJ&quot;,stLastColumn.Substring(0, stLastColumn.Length - 2),10,11,12,sheetName,&quot;Chart 12&quot;}]" sap:VirtualizedContainerService.HintSize="768,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_22" />
                                              <ee:MoveHorizontalActivity BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move horizontal activity8" sap:VirtualizedContainerService.HintSize="768,144" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_21" MoveCount="11" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                              <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="768,22" sap2010:WorkflowViewState.IdRef="Delay_28" />
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\SHIPPING D-VALUE SAMPLE HNM.vb" DisplayName="Invoke VBA5" EntryMethodName="HideColumn" EntryMethodParameters="[{sheetName,&quot;BJ&quot;, 10, stLastCell}]" sap:VirtualizedContainerService.HintSize="768,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_23" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                        <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtDays]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="955,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" ProviderName="System.Data.Odbc" Sql="[&quot;Select YMDU02 &quot; + &#xA;&quot; From WAVEDLIB.C0200 &quot; + &#xA;&quot; Where YMDU02 LIKE '&quot; + DateTime.Now.ToString(&quot;yyyyMM&quot;) + &quot;%' And DPTC02='01' AND HTYC02=0 &quot; + &#xA;&quot; Order By YMDU02 ASC &quot; + &#xA;&quot;LIMIT 2&quot;]" ConnectionString="Dsn=WAVEDLIB;uid=robotnt;pwd=robotnt123">
                                          <ui:ExecuteQuery.Parameters>
                                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                          </ui:ExecuteQuery.Parameters>
                                        </ui:ExecuteQuery>
                                        <If sap2010:Annotation.AnnotationText="Ngày hiện tại là ngày làm việc thứ 2 của tháng thì đổi tên biểu đồ thành tháng hiện tại" Condition="[dtDays.Rows(1)(0).ToString.Trim = DateTime.Now.ToString(&quot;yyyyMMdd&quot;)]" sap:VirtualizedContainerService.HintSize="955,316" sap2010:WorkflowViewState.IdRef="If_27">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\SHIPPING D-VALUE SAMPLE HNM.vb" DisplayName="Invoke VBA6" EntryMethodName="ChangeTitleChart" EntryMethodParameters="[{DateTime.Now.ToString(&quot;MMM-yyyy&quot;)}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_24" />
                                          </If.Then>
                                        </If>
                                        <Sequence DisplayName="Take Picture" sap:VirtualizedContainerService.HintSize="955,66" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ee:MoveHorizontalActivity MoveCount="{x:Null}" BaseCell="XFD10" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity9" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_23" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                          <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_17" Range="[&quot;B4:&quot; + stLastColumn.Substring(0, stLastColumn.Length - 2) + &quot;16&quot;]" SheetName="[sheetName]" />
                                          <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey 'Grid'" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_13" Key="c" KeyModifiers="Ctrl">
                                            <ui:SendHotkey.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8b7fea77-e2b5-43fb-bdc2-335e69e530cf" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*Shipping*' /&gt;">
                                                <ui:Target.TimeoutMS>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:Target.TimeoutMS>
                                                <ui:Target.WaitForReady>
                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                </ui:Target.WaitForReady>
                                              </ui:Target>
                                            </ui:SendHotkey.Target>
                                          </ui:SendHotkey>
                                          <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Delay_23" />
                                          <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="sd1:Image">[Image]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="sd1:Image">[System.Windows.Forms.Clipboard.GetImage]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Delay_24" />
                                          <ui:SaveImage DisplayName="Save image" FileName="[pathImage]" sap:VirtualizedContainerService.HintSize="340,92" sap2010:WorkflowViewState.IdRef="SaveImage_5" Image="[Image]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:SaveImage>
                                          <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Delay_25" />
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\SHIPPING D-VALUE SAMPLE HNM.vb" DisplayName="Invoke VBA7" EntryMethodName="SaveChartImage" EntryMethodParameters="[{sheetName,&quot;Chart 12&quot;,pathChart}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_28" />
                                        </Sequence>
                                      </Sequence>
                                      <Sequence DisplayName="Sheet 4.5Delay" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="1074,60" sap2010:WorkflowViewState.IdRef="Assign_85">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelReadCell Cell="A2" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="1074,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_10" SheetName="Delay detail">
                                          <ui:ExcelReadCell.Result>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                          </ui:ExcelReadCell.Result>
                                        </ui:ExcelReadCell>
                                        <If Condition="[String.IsNullOrEmpty(cellValue)]" sap:VirtualizedContainerService.HintSize="1074,1501" sap2010:WorkflowViewState.IdRef="If_30">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[chartDelay]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="725,1343" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[cellValue.ToString.Length &gt; 6]" sap:VirtualizedContainerService.HintSize="683,1251" sap2010:WorkflowViewState.IdRef="If_29">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="376,1093" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:ExcelReadCell Cell="N2" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_11" SheetName="Delay detail">
                                                      <ui:ExcelReadCell.Result>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[reasonValue]</OutArgument>
                                                      </ui:ExcelReadCell.Result>
                                                    </ui:ExcelReadCell>
                                                    <ui:ExcelReadCell Cell="O2" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_12" SheetName="Delay detail">
                                                      <ui:ExcelReadCell.Result>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[coutermesureValue]</OutArgument>
                                                      </ui:ExcelReadCell.Result>
                                                    </ui:ExcelReadCell>
                                                    <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_16" Range="B4" SheetName="4.5Delay" />
                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_12" Key="f5" KeyModifiers="Alt" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6a7dcacf-8be3-4ae5-96f8-711fc997d144" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Shipping*' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\SHIPPING D-VALUE SAMPLE HNM.vb" DisplayName="Invoke VBA8" EntryMethodName="ChangeTitleChartDelay" EntryMethodParameters="[{reportDayHN.ToString(&quot;M/d&quot;)}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_26" />
                                                    <Delay Duration="00:00:03" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_19" />
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\SHIPPING D-VALUE SAMPLE HNM.vb" DisplayName="Invoke VBA9" EntryMethodName="SaveChartImage" EntryMethodParameters="[{&quot;4.5Delay&quot;,&quot;Chart 1&quot;,pathChartDelay}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_27" />
                                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_4" Range="[&quot;A2:O&quot; + stLastCell.Substring(1)]" SheetName="Delay detail" ShiftCells="False" ShiftOption="ShiftUp" />
                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[chartDelay]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[chartDelay]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_2" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[wb]" />
                            </Sequence>
                          </Sequence>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID0">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">350,807</av:Point>
                                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Send Mail" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[Check_Exists]" sap:VirtualizedContainerService.HintSize="484,224" sap2010:WorkflowViewState.IdRef="If_2">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="526,1098" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[processStatus]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[Process.GetProcessesByName(“EXCEL”).length]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[processStatus &lt; 1]" sap:VirtualizedContainerService.HintSize="484,226" sap2010:WorkflowViewState.IdRef="If_8">
                                        <If.Else>
                                          <ui:CloseApplication ContinueOnError="True" DisplayName="Close Application" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="CloseApplication_2">
                                            <ui:CloseApplication.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7e323c10-b777-4183-aa45-1f95475650b8" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;">
                                                <ui:Target.TimeoutMS>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:Target.TimeoutMS>
                                                <ui:Target.WaitForReady>
                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                </ui:Target.WaitForReady>
                                              </ui:Target>
                                            </ui:CloseApplication.Target>
                                          </ui:CloseApplication>
                                        </If.Else>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="484,64" sap2010:WorkflowViewState.IdRef="Assign_7">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[stBody]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;p&gt;Dear All,&lt;/p&gt;" + "&lt;p&gt;&lt;/p&gt;" +
"&lt;p&gt;We would like to send to you D-Value Sample Report ("+reportDayHN.ToString("dd-MMM")+")&lt;/p&gt;" + 
"&lt;p&gt;Please kindly check and feedback if have any issue&lt;/p&gt;" + "&lt;p&gt;&lt;/p&gt;" + 
"&lt;p&gt;Thank you!&lt;/p&gt;"]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Sequence DisplayName="Image GRAPH" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[image_base64]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[Convert.ToBase64String(System.IO.File.ReadAllBytes(pathImage))]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[image_base64]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["&lt;p&gt;&lt;img src='data:image/jpeg;base64,"+ image_base64 + "'&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[stBody]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[stBody + image_base64]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                      <Sequence DisplayName="Image Chart" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[image_base64]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[Convert.ToBase64String(System.IO.File.ReadAllBytes(pathChart))]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[image_base64]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["&lt;p&gt;&lt;img src='data:image/jpeg;base64,"+ image_base64 + "'&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[stBody]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[stBody + image_base64]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                      <If Condition="[chartDelay = True]" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="If_13">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence DisplayName="Image Chart Delay" sap:VirtualizedContainerService.HintSize="304,452" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[stBody]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[stBody + "&lt;p&gt;Please kindly to check delay as below&lt;/p&gt;"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[image_base64]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Convert.ToBase64String(System.IO.File.ReadAllBytes(pathChartDelay))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[image_base64]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">["&lt;p&gt;&lt;img src='data:image/jpeg;base64,"+ image_base64 + "'&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[stBody]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[stBody + image_base64]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[pathInputFile]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="CopyFile_3" Overwrite="True" Path="[pathFileRun]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CopyFile>
                                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(pathFolderRun)]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="x:Object">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,172" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="Delete_5" Path="[pathFolderRun + Path.GetFileName(item.ToString)]" />
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEach>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">["[Shipping] D-Value Sample Report (" + reportDayHN.ToString("dd-MMM-yyyy") + ")"]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="mail_Content">[stBody]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">SHIPPING D-VALUE SAMPLE HNM</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">[{pathInputFile}]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="379,64" sap2010:WorkflowViewState.IdRef="Assign_8">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[stBody]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;p&gt;Dear All, &lt;/p&gt;" + "&lt;p&gt;&lt;/p&gt;" + 
"&lt;p&gt;Robot cannot found 'Shipping sample D-value daily report New Ver'. file In folder link below. &lt;/p&gt;" + 
"&lt;p&gt;PUBLIC\OPERATION\Logistic Control\SHIPPING\6. D-value sample report&lt;/p&gt;" + 
"&lt;p&gt;Please check again. Thanks!&lt;/p&gt;"]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">[RPA] ERROR: [Shipping] D-Value Sample</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="mail_Content">[stBody]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">luuthithanhthuy@ykk.com, vat2hn@ykk.com, vat1hn@ykk.com, sample1hn@ykk.com</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach" />
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <x:Reference>__ReferenceID0</x:Reference>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.False>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
  </Flowchart>
</Activity>