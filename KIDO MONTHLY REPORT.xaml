<Activity mc:Ignorable="sap sap2010" x:Class="KIDO_MONTHLY_REPORT" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:ee="clr-namespace:ExcelCustomActivities.Excel;assembly=ExcelCustomActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Order_Number" Type="InOutArgument(x:String)" />
    <x:Property Name="EndMessage" Type="InOutArgument(x:String)" />
    <x:Property Name="EndStatus" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1141,1024</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>KIDO_MONTHLY_REPORT_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="39">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>ExcelCustomActivities.Excel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>UiPath.Presentations.Activities</x:String>
      <x:String>UiPath.Presentations</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Microsoft.Activities.Expressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="98">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>ExcelCustomActivities</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="KIDO_MONTHLY_REPORT" sap:VirtualizedContainerService.HintSize="726,959" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="Path_downloads" />
      <Variable x:TypeArguments="x:String" Name="Path_template" />
      <Variable x:TypeArguments="x:String" Name="Mail_PIC" />
      <Variable x:TypeArguments="x:String" Name="Path_Folder" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_library" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtDataKido" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wb" />
      <Variable x:TypeArguments="x:Boolean" Name="checkFileExist" />
      <Variable x:TypeArguments="x:String" Name="pathInputFile" />
      <Variable x:TypeArguments="x:String" Name="stLastCell" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtAN_AO" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtA_G" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtI_AM" />
      <Variable x:TypeArguments="x:String" Name="sheetName" />
      <Variable x:TypeArguments="x:String" Name="stLastColumn" />
      <Variable x:TypeArguments="x:String" Name="stNextColumn" />
      <Variable x:TypeArguments="ui:GenericValue" Name="cellValue" />
      <Variable x:TypeArguments="x:String" Name="stFirstColumnOfChart" />
      <Variable x:TypeArguments="x:String" Name="stHideColumn" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtInputExFac" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtInputRequest" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtInputDelivery" />
      <Variable x:TypeArguments="x:String" Name="stWriteDataColumn" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtArrRequest" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtArrPack" />
      <Variable x:TypeArguments="x:String" Name="stSubject" />
      <Variable x:TypeArguments="x:String" Name="stContent" />
      <Variable x:TypeArguments="x:Boolean" Name="checkWarningButton" />
      <Variable x:TypeArguments="x:String" Name="pathFileCheck" />
      <Variable x:TypeArguments="x:String" Name="pathFolderPicture" />
      <Variable x:TypeArguments="x:String" Name="pathImage1" />
      <Variable x:TypeArguments="x:String" Name="pathImage2" />
      <Variable x:TypeArguments="x:String" Name="pathImage3" />
      <Variable x:TypeArguments="x:String" Name="pathImage4" />
      <Variable x:TypeArguments="x:String" Name="pathImage5" />
      <Variable x:TypeArguments="x:String" Name="pathImage6" />
      <Variable x:TypeArguments="x:String" Name="pathImage7" />
      <Variable x:TypeArguments="x:String" Name="pathImage8" />
      <Variable x:TypeArguments="x:String" Name="pathImage9" />
      <Variable x:TypeArguments="x:String" Name="pathImage10" />
      <Variable x:TypeArguments="x:String" Name="pathImage11" />
      <Variable x:TypeArguments="x:String" Name="pathImage12" />
      <Variable x:TypeArguments="x:String" Name="pathImage13" />
      <Variable x:TypeArguments="x:String" Name="pathImage14" />
      <Variable x:TypeArguments="ui:Image" Name="Image" />
      <Variable x:TypeArguments="x:Boolean" Name="checkProcess" />
      <Variable x:TypeArguments="x:String" Name="dateValue" />
      <Variable x:TypeArguments="ui:Window" Name="getPP" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">310,22.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Double x:Key="Width">692</x:Double>
        <x:Double x:Key="Height">923</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">340,97.5 340,147.5</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">240,147.5</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">340,213.5 340,263.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Setting SQL" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT * FROM RPALIB.LIBRARY_NT WHERE Name IN ('dirDownFile','PIC','ServerTemp','ServerSavedFile') ORDER BY UPPER(NAME) ASC</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_library]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_downloads]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(0)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_PIC]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(1)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_template]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(3)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_Folder]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(2)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">240,263.5</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">340,329.5 340,359.5 340.141666666667,359.5 340.141666666667,379.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Process Check Folder" sap:VirtualizedContainerService.HintSize="790,5302" sap2010:WorkflowViewState.IdRef="Sequence_64">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="748,60" sap2010:WorkflowViewState.IdRef="Assign_22">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pathFileCheck]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="748,286" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Directory.GetFiles(&quot;H:\Robotics\14 Target Buyer Report\KIDO Monthly Report\CHECK\&quot;,&quot;*.xls*&quot;)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_65">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[pathFileCheck]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[file.ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <If Condition="[Not String.IsNullOrEmpty(pathFileCheck)]" sap:VirtualizedContainerService.HintSize="748,4784" sap2010:WorkflowViewState.IdRef="If_14">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="712,4597" sap2010:WorkflowViewState.IdRef="Sequence_68">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="670,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dateValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Path.GetFileName(pathFileCheck).Substring(Path.GetFileName(pathFileCheck).Replace(".xlsx","").ToString.Trim.Length - 8,8)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="670,532" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathFolderPicture]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">["H:\Robotics\14 Target Buyer Report\KIDO Monthly Report\PICTURE\" + dateValue.ToString.Trim]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage1]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image1.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage2]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image2.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage3]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image3.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage4]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image4.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage5]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image5.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage6]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image6.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage7]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image7.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage8]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image8.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage9]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image9.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage10]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image10.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage11]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image11.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage12]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image12.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage13]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image13.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[pathImage14]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[pathFolderPicture + "\image14.jpg"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="670,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[pathFolderPicture]" />
                  <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="670,1114" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFileCheck]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,1005" sap2010:WorkflowViewState.IdRef="Sequence_70">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window" sap:VirtualizedContainerService.HintSize="434,814" sap2010:WorkflowViewState.IdRef="WindowScope_2" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*.xls*' /&gt;">
                            <ui:WindowScope.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,706" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_2" />
                                  <Sequence DisplayName="Sheet Pivot_Reason" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Pivot_Reason</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_6" Range="B1" SheetName="[sheetName]" />
                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="f5" KeyModifiers="Alt" SpecialKey="True">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fea84a47-0510-437c-ab09-5a16e3064072" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*.xls*' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="B10000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_5" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                    <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_13" Range="[&quot;B1:D&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="340,116" sap2010:WorkflowViewState.IdRef="SendHotkey_9" Key="c" KeyModifiers="Ctrl">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b9d6defa-9859-45ec-8040-ece02ebfdaa0" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*.xls*' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Delay_13" />
                                    <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:Image">[Image]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:Image">[System.Windows.Forms.Clipboard.GetImage]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Delay_14" />
                                    <ui:SaveImage DisplayName="Save Image" FileName="[pathImage14]" sap:VirtualizedContainerService.HintSize="340,92" sap2010:WorkflowViewState.IdRef="SaveImage_7" Image="[Image]" />
                                  </Sequence>
                                  <Sequence DisplayName="Sheet Input_Ex_Fac" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Input_Ex_Fac</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA1" EntryMethodName="UnhideColumn" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_14" />
                                    <Sequence DisplayName="Save Image 1" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_7" Range="AD16:AM17" SheetName="[sheetName]" />
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="c" KeyModifiers="Ctrl">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b9d6defa-9859-45ec-8040-ece02ebfdaa0" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*.xls*' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:Image">[Image]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:Image">[System.Windows.Forms.Clipboard.GetImage]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                      <ui:SaveImage DisplayName="Save Image" FileName="[pathImage1]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="SaveImage_1" Image="[Image]" />
                                    </Sequence>
                                    <Sequence DisplayName="Save Image 3" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_8" Range="AD40:AE41" SheetName="[sheetName]" />
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="c" KeyModifiers="Ctrl">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b9d6defa-9859-45ec-8040-ece02ebfdaa0" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*.xls*' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:Image">[Image]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:Image">[System.Windows.Forms.Clipboard.GetImage]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
                                      <ui:SaveImage DisplayName="Save Image" FileName="[pathImage3]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="SaveImage_2" Image="[Image]" />
                                    </Sequence>
                                    <Sequence DisplayName="Save Image 6" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_9" Range="AD11:AE12" SheetName="[sheetName]" />
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="c" KeyModifiers="Ctrl">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b9d6defa-9859-45ec-8040-ece02ebfdaa0" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*.xls*' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_5" />
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:Image">[Image]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:Image">[System.Windows.Forms.Clipboard.GetImage]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_6" />
                                      <ui:SaveImage DisplayName="Save Image" FileName="[pathImage6]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="SaveImage_3" Image="[Image]" />
                                    </Sequence>
                                    <Sequence DisplayName="Hilde Column" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ee:MoveHorizontalActivity MoveCount="{x:Null}" BaseCell="XFD2" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_24" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ee:MoveHorizontalActivity BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stHideColumn]" DisplayName="Move horizontal activity" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_25" MoveCount="13" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA2" EntryMethodName="HideColumn" EntryMethodParameters="[{sheetName,2,stHideColumn}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_15" />
                                    </Sequence>
                                    <Sequence DisplayName="Save Image 2" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA3" EntryMethodName="SaveChartImage" EntryMethodParameters="[{sheetName,&quot;Chart 2&quot;,pathImage2}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_16" />
                                    </Sequence>
                                    <Sequence DisplayName="Save Image 4" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_10" Range="[&quot;A29:&quot; + stLastColumn.Replace(&quot;2&quot;,&quot;&quot;) + &quot;34&quot;]" SheetName="[sheetName]" />
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_6" Key="c" KeyModifiers="Ctrl">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b9d6defa-9859-45ec-8040-ece02ebfdaa0" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*.xls*' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_7" />
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:Image">[Image]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:Image">[System.Windows.Forms.Clipboard.GetImage]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_8" />
                                      <ui:SaveImage DisplayName="Save Image" FileName="[pathImage4]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="SaveImage_4" Image="[Image]" />
                                    </Sequence>
                                    <Sequence DisplayName="Save Image 5" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA4" EntryMethodName="SaveChartImage" EntryMethodParameters="[{sheetName,&quot;Chart 1&quot;,pathImage5}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_17" />
                                    </Sequence>
                                    <Sequence DisplayName="Save Image 7" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_11" Range="[&quot;A1:&quot; + stLastColumn.Replace(&quot;2&quot;,&quot;&quot;) + &quot;6&quot;]" SheetName="[sheetName]" />
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_7" Key="c" KeyModifiers="Ctrl">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b9d6defa-9859-45ec-8040-ece02ebfdaa0" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*.xls*' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_9" />
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:Image">[Image]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:Image">[System.Windows.Forms.Clipboard.GetImage]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_10" />
                                      <ui:SaveImage DisplayName="Save Image" FileName="[pathImage7]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="SaveImage_5" Image="[Image]" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="Sheet COIL" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">COIL</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Sequence DisplayName="Save Image 8" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_82">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA5" EntryMethodName="SaveChartImage" EntryMethodParameters="[{sheetName,&quot;Chart 3&quot;,pathImage8}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_18" />
                                    </Sequence>
                                    <Sequence DisplayName="Save Image 9" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA6" EntryMethodName="SaveChartImage" EntryMethodParameters="[{sheetName,&quot;Chart 4&quot;,pathImage9}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_19" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="Sheet VISLON" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_87">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">VISLON</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Sequence DisplayName="Save Image 10" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA7" EntryMethodName="SaveChartImage" EntryMethodParameters="[{sheetName,&quot;Chart 5&quot;,pathImage10}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_20" />
                                    </Sequence>
                                    <Sequence DisplayName="Save Image 11" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_86">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA8" EntryMethodName="SaveChartImage" EntryMethodParameters="[{sheetName,&quot;Chart 6&quot;,pathImage11}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_21" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="Sheet METAL" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">METAL</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Sequence DisplayName="Save Image 12" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA9" EntryMethodName="SaveChartImage" EntryMethodParameters="[{sheetName,&quot;Chart 7&quot;,pathImage12}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_22" />
                                    </Sequence>
                                    <Sequence DisplayName="Save Image 13" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_89">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA10" EntryMethodName="SaveChartImage" EntryMethodParameters="[{sheetName,&quot;Chart 8&quot;,pathImage13}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_23" />
                                    </Sequence>
                                  </Sequence>
                                  <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_3" />
                                </Sequence>
                              </ActivityAction>
                            </ui:WindowScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:WindowScope>
                          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_6" Workbook="[wb]" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                  </ui:ExcelApplicationScope>
                  <Assign sap:VirtualizedContainerService.HintSize="670,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[checkProcess]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="670,2111" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:02">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="628,1873" sap2010:WorkflowViewState.IdRef="Sequence_91">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="586,132" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="POWERPNT" />
                          <ui:PowerPointApplicationScope Password="{x:Null}" CreateIfNotExists="True" DisplayName="Use PowerPoint Presentation" sap:VirtualizedContainerService.HintSize="586,1337" sap2010:WorkflowViewState.IdRef="PowerPointApplicationScope_1" PresentationPath="H:\Robotics\14 Target Buyer Report\KIDO Monthly Report\REPORT KIDO'S_Template.pptm">
                            <ui:PowerPointApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:IPresentationQuickHandle">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:IPresentationQuickHandle" Name="PowerPoint" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="552,1091" sap2010:WorkflowViewState.IdRef="Sequence_92">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:WindowScope SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" ApplicationWindow="[getPP]" DisplayName="Attach Window" sap:VirtualizedContainerService.HintSize="510,999" sap2010:WorkflowViewState.IdRef="WindowScope_3" Selector="&lt;wnd app='powerpnt.exe' cls='PPTFrameClass' title='REPORT KIDO*' /&gt;">
                                    <ui:WindowScope.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,891" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_3" />
                                          <ui:Click SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="100" DelayMS="100" DisplayName="Click Macro" sap:VirtualizedContainerService.HintSize="434,68" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                            <ui:Click.CursorPosition>
                                              <ui:CursorPosition Position="Center">
                                                <ui:CursorPosition.OffsetX>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetX>
                                                <ui:CursorPosition.OffsetY>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetY>
                                              </ui:CursorPosition>
                                            </ui:Click.CursorPosition>
                                            <ui:Click.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="eb40eb6c-ec77-4f83-aead-7d57318b8a3d" Selector="&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIElement' name='Quick Access Toolbar' /&gt;&lt;uia cls='NetUIRibbonButton' name='&amp;apos;REPORT KIDO&amp;apos;&amp;apos;S_Template.pptm&amp;apos;!startInsert' /&gt;" TimeoutMS="5000">
                                                <ui:Target.WaitForReady>
                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                </ui:Target.WaitForReady>
                                              </ui:Target>
                                            </ui:Click.Target>
                                          </ui:Click>
                                          <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SimulateType="{x:Null}" Activate="True" DelayBefore="100" DelayMS="100" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="434,96" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="True" Text="[dateValue.ToString.Trim]">
                                            <ui:TypeInto.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3f22bb25-3671-47d2-95d1-e373a7ab439d" Selector="&lt;wnd app='powerpnt.exe' cls='#32770' title='Notification' /&gt;&lt;wnd ctrlid='4900' /&gt;" TimeoutMS="5000">
                                                <ui:Target.WaitForReady>
                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                </ui:Target.WaitForReady>
                                              </ui:Target>
                                            </ui:TypeInto.Target>
                                          </ui:TypeInto>
                                          <ui:Click SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="100" DelayMS="100" DisplayName="Click OK" sap:VirtualizedContainerService.HintSize="434,68" sap2010:WorkflowViewState.IdRef="Click_10" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                                            <ui:Click.CursorPosition>
                                              <ui:CursorPosition Position="Center">
                                                <ui:CursorPosition.OffsetX>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetX>
                                                <ui:CursorPosition.OffsetY>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetY>
                                              </ui:CursorPosition>
                                            </ui:Click.CursorPosition>
                                            <ui:Click.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0e1a94ce-c79f-4d03-b1b2-6162b2196974" Selector="&lt;wnd app='powerpnt.exe' cls='#32770' title='Notification' /&gt;&lt;wnd ctrlid='1' title='OK' /&gt;" TimeoutMS="5000">
                                                <ui:Target.WaitForReady>
                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                </ui:Target.WaitForReady>
                                              </ui:Target>
                                            </ui:Click.Target>
                                          </ui:Click>
                                          <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="Delay_15" />
                                          <ui:SavePresentationFileAs DisplayName="Save PowerPoint File As" FilePath="[&quot;H:\Robotics\14 Target Buyer Report\KIDO Monthly Report\REPORT KIDO'S &quot; + dateValue.ToString.Trim + &quot;.pptx&quot;]" sap:VirtualizedContainerService.HintSize="434,215" sap2010:WorkflowViewState.IdRef="SavePresentationFileAs_1" Presentation="[PowerPoint]" />
                                          <ui:CloseWindow Selector="{x:Null}" DisplayName="Close Window" sap:VirtualizedContainerService.HintSize="434,68" sap2010:WorkflowViewState.IdRef="CloseWindow_1" TimeoutMS="5000" UseWindow="[getPP]" WaitForReady="INTERACTIVE" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:WindowScope.Body>
                                  </ui:WindowScope>
                                </Sequence>
                              </ActivityAction>
                            </ui:PowerPointApplicationScope.Body>
                          </ui:PowerPointApplicationScope>
                          <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="586,132" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="POWERPNT" />
                          <Assign sap:VirtualizedContainerService.HintSize="586,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[checkProcess]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean">
                        <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[checkProcess]" />
                      </ActivityFunc>
                    </ui:RetryScope.Condition>
                  </ui:RetryScope>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send Mail" sap:VirtualizedContainerService.HintSize="670,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">["[RPA] KIDO MONTHLY REPORT " + dateValue.ToString.Trim]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="mail_Content" xml:space="preserve">["&lt;p&gt;&lt;b&gt;Dear All,&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;" +
"&lt;p&gt;Robot run has been completed, please check report file in folder below:&lt;/p&gt;" +
"&lt;p&gt;H:\Robotics\14 Target Buyer Report\KIDO Monthly Report&lt;/p&gt;" +
"&lt;p&gt;Thanks&lt;/p&gt;"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">trinhntt@ykk.com,loanmh@ykk.com,nuongdtm@ykk.com</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="mail_CC">thamltn@ykk.com,thaidh@ykk.com</InArgument>
                      <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">[{}]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:MoveFile ContinueOnError="{x:Null}" Destination="[&quot;H:\Robotics\14 Target Buyer Report\KIDO Monthly Report\CHECK\DONE\&quot; + Path.GetFileName(pathFileCheck)]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="670,157" sap2010:WorkflowViewState.IdRef="MoveFile_5" Overwrite="True" Path="[pathFileCheck]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_69">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID5" Condition="[DateTime.Now.Day = 1]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">300.641666666667,379.5</av:Point>
                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                  <av:PointCollection x:Key="TrueConnector">300.641666666667,423 210,423 210,546.5 240,546.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">240,513.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,66</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">340,579.5 340,609.5 340.141666666667,609.5 340.141666666667,629.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Get Data Kido" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Refresh data NT" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="653,82" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[Path_template + &quot;KIDO MONTHLY REPORT\NT_ORDER.xls&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="526,923" sap2010:WorkflowViewState.IdRef="Sequence_50">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click Data" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="eadd491e-af04-4751-882f-ee759e20001b" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='NT_ORDER*' /&gt;&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIPanViewer' name='Ribbon Tabs' /&gt;&lt;uia cls='NetUIRibbonTab' name='Data' /&gt;" WaitForReady="INTERACTIVE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click Refresh All" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cd59c3a3-5bba-4316-bc3d-944034f01ac9" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='NT_ORDER*' /&gt;&lt;uia cls='MsoCommandBar' name='Ribbon' /&gt;&lt;uia cls='NetUIChunk' name='Connections' /&gt;&lt;uia cls='NetUIRibbonButton' idx='1' name='Refresh All' /&gt;" WaitForReady="INTERACTIVE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <ui:UiElementExists DisplayName="Element Exists" Exists="[checkwarningButton]" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
                              <ui:UiElementExists.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="45daeb19-ad44-4fc9-99af-651f61c00b68" Selector="&lt;wnd app='excel.exe' cls='#32770' title='*' /&gt;&lt;wnd ctrlid='1' title='OK' /&gt;" TimeoutMS="30000">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:UiElementExists.Target>
                            </ui:UiElementExists>
                            <If Condition="[checkwarningButton]" sap:VirtualizedContainerService.HintSize="484,346" sap2010:WorkflowViewState.IdRef="If_12">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,160" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT">
                                    <ui:Click.CursorPosition>
                                      <ui:CursorPosition Position="Center">
                                        <ui:CursorPosition.OffsetX>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetX>
                                        <ui:CursorPosition.OffsetY>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetY>
                                      </ui:CursorPosition>
                                    </ui:Click.CursorPosition>
                                    <ui:Click.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="315c172e-32f3-431e-a0a8-57d1c2725189" Selector="&lt;wnd app='excel.exe' cls='#32770' title='*' /&gt;&lt;wnd ctrlid='1' title='OK' /&gt;">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:Click.Target>
                                  </ui:Click>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_62">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                            <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_2" />
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_5" Workbook="[wb]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                    <Sequence DisplayName="Transfer NT_ORDER DATA to RPALIB" sap:VirtualizedContainerService.HintSize="653,66" sap2010:WorkflowViewState.IdRef="Sequence_51">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[Path_template + &quot;KIDO MONTHLY REPORT\NT_ORDER.dtt&quot;]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click Transfer data to IBM i" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9961995a-c1ae-4c70-918c-05232854c4ae" Selector="&lt;wnd app='cwbtf.exe' cls='Afx:*' title='Data Transfer to IBM*' /&gt;&lt;wnd ctrlid='1326' title='Transfer data to IBM i' /&gt;" WaitForReady="INTERACTIVE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:UiElementExists DisplayName="Element Exists" Exists="[checkwarningButton]" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                        <ui:UiElementExists.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5da22148-c2c8-4e46-a933-e2ab59ae1e74" Selector="&lt;wnd app='cwbtf.exe' cls='#32770' title='IBM i Access Data Transfer' idx='*' /&gt;&lt;wnd ctrlid='1831' title='OK' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:UiElementExists.Target>
                      </ui:UiElementExists>
                      <If Condition="[checkwarningButton]" sap:VirtualizedContainerService.HintSize="484,347" sap2010:WorkflowViewState.IdRef="If_9">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,160" sap2010:WorkflowViewState.IdRef="Sequence_52">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click OK" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3a3e06a5-8768-4ea1-8d25-488aa99ab06f" Selector="&lt;wnd app='cwbtf.exe' cls='#32770' title='IBM i Access Data Transfer' idx='*' /&gt;&lt;wnd ctrlid='1831' title='OK' /&gt;" WaitForReady="INTERACTIVE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_53">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:UiElementExists DisplayName="Element Exists" Exists="[checkwarningButton]" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                        <ui:UiElementExists.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5da22148-c2c8-4e46-a933-e2ab59ae1e74" Selector="&lt;wnd app='cwbtf.exe' cls='#32770' title='IBM i Access Data Transfer' idx='*' /&gt;&lt;wnd ctrlid='1831' title='OK' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:UiElementExists.Target>
                      </ui:UiElementExists>
                      <If Condition="[checkwarningButton]" sap:VirtualizedContainerService.HintSize="484,347" sap2010:WorkflowViewState.IdRef="If_10">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,160" sap2010:WorkflowViewState.IdRef="Sequence_54">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click OK" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3a3e06a5-8768-4ea1-8d25-488aa99ab06f" Selector="&lt;wnd app='cwbtf.exe' cls='#32770' title='IBM i Access Data Transfer' idx='*' /&gt;&lt;wnd ctrlid='1831' title='OK' /&gt;" WaitForReady="INTERACTIVE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_55">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:UiElementExists DisplayName="Element Exists" Exists="[checkwarningButton]" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                        <ui:UiElementExists.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5da22148-c2c8-4e46-a933-e2ab59ae1e74" Selector="&lt;wnd app='cwbtf.exe' cls='#32770' title='IBM i Access Data Transfer' idx='*' /&gt;&lt;wnd ctrlid='1831' title='OK' /&gt;" TimeoutMS="5000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:UiElementExists.Target>
                      </ui:UiElementExists>
                      <If Condition="[checkwarningButton]" sap:VirtualizedContainerService.HintSize="484,347" sap2010:WorkflowViewState.IdRef="If_11">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,160" sap2010:WorkflowViewState.IdRef="Sequence_56">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click OK" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3a3e06a5-8768-4ea1-8d25-488aa99ab06f" Selector="&lt;wnd app='cwbtf.exe' cls='#32770' title='IBM i Access Data Transfer' idx='*' /&gt;&lt;wnd ctrlid='1831' title='OK' /&gt;" WaitForReady="INTERACTIVE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_57">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click OK" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="55dd31d0-906b-4968-af74-bcea34adb4f0" Selector="&lt;wnd app='cwbtf.exe' cls='#32770' title='Transfer to IBM i Complete' /&gt;&lt;wnd ctrlid='1' title='OK' /&gt;" WaitForReady="INTERACTIVE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill process" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="cwbtf" />
                    </Sequence>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="653,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,180" sap2010:WorkflowViewState.IdRef="Sequence_58">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtDataKido]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" ProviderName="System.Data.OleDb" Sql="SELECT WAVEDLIB_S5C00L01.ORDN5C AS YKKORDER, WAVEDLIB_S5B001.OSBN5B AS ORDERSUB, WAVEDLIB_S5E00.ITMC5E AS ITEMCODE, WAVEDLIB_FA000.IT1IA0 AS ITEMNAME1, WAVEDLIB_FA000.IT2IA0 AS ITEMNAME2, WAVEDLIB_FA000.IT3IA0 AS ITEMNAME3, WAVEDLIB_S5E00.LNGV5E AS LENGTH, WAVEDLIB_S5E00.LUNC5E AS UNIT, WAVEDLIB_S5E00.CLRC5E AS COLOR, WAVEDLIB_S5E00.TCAK5E AS AMOUNT, WAVEDLIB_S5C00L01.OINU5C AS INPUTDATE, WAVEDLIB_S5C00L01.OCNU5C AS CONFIRMDATE, Max(WAVEDLIB_S5B001.OALU5B) AS ARRDATE, WAVEDLIB_S5C00L01.OIDC5C AS DEPOT, WAVEDLIB_S5C00L01.SMPF5C AS SAMPLE, WAVEDLIB_S5C00L01.SPRC5C AS SALEMANCODE, WAVEDLIB_C0500.FEMI05 AS SALENAME, WAVEDLIB_S5C00L01.CSTC5C AS CUSTOMERCODE, WAVEDLIB_S5C00L01.BYRC5C AS BUYER_CODE, WAVEDLIB_S5C00L01.CORN5C AS CUSTMOERORDER, WAVEDLIB_FA000.SLDCA0 AS SLIDER, WAVEDLIB_FA000.SFNCA0 AS SLIDER1, WAVEDLIB_FA000.SL2CA0 AS SLIDER2, WAVEDLIB_FA000.SE2CA0 AS SLIDER21, WAVEDLIB_FA000.SIZCA0 AS [SIZE], WAVEDLIB_FA000.CHNCA0 AS CHAIN, WAVEDLIB_FA000.CLSCA0 AS CLASS, WAVEDLIB_S5B001.ACAQ5B AS QUANTITY, WAVEDLIB_S5C00L01.RDLU5C AS REQDATE, WAVEDLIB_S5F00.NDCU5F AS [EX-FAC], WAVEDLIB_S5F00.AAFU5F AS FINISHED, WAVEDLIB_S5F00.PAKU5F AS PACKING, WAVEDLIB_S5F00.DLVU5F AS DELIVERY, WAVEDLIB_C0900.CN1I09 AS STATUS, WAVEDLIB_S5B001.CANC5B AS ARRTYPE, WAVEDLIB_PEL00L01HN.PODNEL AS PONoHN, WAVEDLIB_PEL00L01HN.RLTNEL AS ORDERHN, WAVEDLIB_S5C00L01HN.CSTC5C AS CUSTCODEHN, WAVEDLIB_S3900HN.FL1I39 AS CUSNAMEHN, First(WAVEDLIB_FZ030.LN1CA1) AS LINE1, First(WAVEDLIB_FZ030.LN2CA1) AS LINE2&#xA;FROM (((((((WAVEDLIB_S5C00L01 INNER JOIN WAVEDLIB_PEL00L01HN ON WAVEDLIB_S5C00L01.CORN5C = WAVEDLIB_PEL00L01HN.PUCNEL) INNER JOIN WAVEDLIB_S5C00L01HN ON WAVEDLIB_PEL00L01HN.RLTNEL = WAVEDLIB_S5C00L01HN.ORDN5C) INNER JOIN WAVEDLIB_S3900HN ON WAVEDLIB_S5C00L01HN.CSTC5C = WAVEDLIB_S3900HN.CLNC39) INNER JOIN WAVEDLIB_C0500 ON WAVEDLIB_S5C00L01.SPRC5C = WAVEDLIB_C0500.EMPC05) INNER JOIN WAVEDLIB_S5E00 ON WAVEDLIB_S5C00L01.ORDN5C = WAVEDLIB_S5E00.ORDN5E) INNER JOIN ((WAVEDLIB_S5F00 INNER JOIN WAVEDLIB_S5B001 ON (WAVEDLIB_S5F00.ORDN5F = WAVEDLIB_S5B001.ORDN5B) AND (WAVEDLIB_S5F00.OSBN5F = WAVEDLIB_S5B001.OSBN5B)) INNER JOIN WAVEDLIB_C0900 ON WAVEDLIB_S5F00.PSTC5F = WAVEDLIB_C0900.DDTC09) ON (WAVEDLIB_S5E00.ORDN5E = WAVEDLIB_S5F00.ORDN5F) AND (WAVEDLIB_S5E00.OSBN5E = WAVEDLIB_S5F00.OSBN5F)) INNER JOIN WAVEDLIB_FA000 ON WAVEDLIB_S5E00.ITMC5E = WAVEDLIB_FA000.ITMCA0) INNER JOIN WAVEDLIB_FZ030 ON WAVEDLIB_S5E00.ITMC5E = WAVEDLIB_FZ030.ITMCA1&#xA;WHERE (((WAVEDLIB_S5F00.NDCU5F) Between ? And ?) AND ((WAVEDLIB_S5E00.LNGV5E)&lt;=([WAVEDLIB_FZ030].[LTLVA1])) AND ((WAVEDLIB_S5C00L01.SMPF5C)&lt;&gt;'1') AND ((WAVEDLIB_S5F00.AAFU5F)&lt;&gt;0) AND ((WAVEDLIB_S5F00.DLVU5F)&lt;&gt;0) AND ((WAVEDLIB_S5B001.CANC5B) Not In ('3','6')) AND ((WAVEDLIB_C0900.DGRC09)='PSTC') AND ((WAVEDLIB_S3900HN.CLNC39)='004823') AND ((WAVEDLIB_FZ030.PDPCA1)='01'))&#xA;GROUP BY WAVEDLIB_S5C00L01.ORDN5C, WAVEDLIB_S5B001.OSBN5B, WAVEDLIB_S5E00.ITMC5E, WAVEDLIB_FA000.IT1IA0, WAVEDLIB_FA000.IT2IA0, WAVEDLIB_FA000.IT3IA0, WAVEDLIB_S5E00.LNGV5E, WAVEDLIB_S5E00.LUNC5E, WAVEDLIB_S5E00.CLRC5E, WAVEDLIB_S5E00.TCAK5E, WAVEDLIB_S5C00L01.OINU5C, WAVEDLIB_S5C00L01.OCNU5C, WAVEDLIB_S5C00L01.OIDC5C, WAVEDLIB_S5C00L01.SMPF5C, WAVEDLIB_S5C00L01.SPRC5C, WAVEDLIB_C0500.FEMI05, WAVEDLIB_S5C00L01.CSTC5C, WAVEDLIB_S5C00L01.BYRC5C, WAVEDLIB_S5C00L01.CORN5C, WAVEDLIB_FA000.SLDCA0, WAVEDLIB_FA000.SFNCA0, WAVEDLIB_FA000.SL2CA0, WAVEDLIB_FA000.SE2CA0, WAVEDLIB_FA000.SIZCA0, WAVEDLIB_FA000.CHNCA0, WAVEDLIB_FA000.CLSCA0, WAVEDLIB_S5B001.ACAQ5B, WAVEDLIB_S5C00L01.RDLU5C, WAVEDLIB_S5F00.AAFU5F, WAVEDLIB_S5F00.PAKU5F, WAVEDLIB_S5F00.DLVU5F, WAVEDLIB_C0900.CN1I09, WAVEDLIB_S5B001.CANC5B, WAVEDLIB_PEL00L01HN.PODNEL, WAVEDLIB_PEL00L01HN.RLTNEL, WAVEDLIB_S5C00L01HN.CSTC5C, WAVEDLIB_S3900HN.FL1I39, WAVEDLIB_S5F00.NDCU5F, WAVEDLIB_C0900.DGRC09, WAVEDLIB_S3900HN.CLNC39, WAVEDLIB_FZ030.PDPCA1" ConnectionString="[&quot;Provider=Microsoft.Jet.OLEDB.4.0;Data Source=&quot; + Path_template + &quot;KIDO MONTHLY REPORT\KIDOmonthlyreport.mdb&quot;]">
                            <ui:ExecuteQuery.Parameters>
                              <InArgument x:TypeArguments="x:String" x:Key="Argument1">[DateTime.Now.AddMonths(-1).ToString("yyyyMM01")]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Argument2">[DateTime.Now.AddMonths(-1).ToString("yyyyMM") + DateTime.DaysInMonth(DateTime.Now.AddMonths(-1).Year, DateTime.Now.AddMonths(-1).Month).ToString]</InArgument>
                            </ui:ExecuteQuery.Parameters>
                          </ui:ExecuteQuery>
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                    <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtDataKido]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="653,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" ProviderName="System.Data.Odbc" Sql="SELECT YKKORDER,ORDERSUB,ITEMCODE,ITEMNAME1,ITEMNAME2,ITEMNAME3,LENGTH,UNIT,COLOR,AMOUNT&#xA;,INPUTDATE,CONFIRMDATE,ARRDATE,DEPOT,SAMPLE,SALEMANCODE,SALENAME,CUSTOMERCODE,BUYER_CODE&#xA;,CUSTMOERORDER,SLIDER,SLIDER1,SLIDER2,SLIDER21,SIZE,CHAIN,CLASS,QUANTITY,REQDATE,EX_FAC,FINISHED,PACKING,DELIVERY,STATUS,ARRTYPE&#xA;,PODNEL PONoHN, RLTNEL ORDERHN,CSTC5C CUSTCODEHN, FL1I39 CUSTNAMEHN&#xA;,LEFT(LINE,3) LINE1, RIGHT(LINE,2) LINE2&#xA;FROM RPALIB.NT_ORDER&#xA;INNER JOIN WAVEDLIB.PEL00 ON CUSTMOERORDER=PUCNEL&#xA;INNER JOIN WAVEDLIB.S5C00 ON RLTNEL=ORDN5C&#xA;INNER JOIN WAVEDLIB.S3900 ON CSTC5C=CLNC39&#xA;WHERE CLNC39='004823'&#xA;AND EX_FAC BETWEEN ? AND ?" ConnectionString="Dsn=WAVEDLIB_HN;uid=robot;pwd=password">
                      <ui:ExecuteQuery.Parameters>
                        <InArgument x:TypeArguments="x:String" x:Key="Argument1">[DateTime.Now.AddMonths(-1).ToString("yyyyMM01")]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Argument2">[DateTime.Now.AddMonths(-1).ToString("yyyyMM") + DateTime.DaysInMonth(DateTime.Now.AddMonths(-1).Year, DateTime.Now.AddMonths(-1).Month).ToString]</InArgument>
                      </ui:ExecuteQuery.Parameters>
                    </ui:ExecuteQuery>
                    <ui:RemoveDuplicateRows DataTable="[dtDataKido]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="653,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_1" OutputDataTable="[dtDataKido]" />
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="653,387" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[&quot;H:\Robotics\14 Target Buyer Report\KIDO Monthly Report\data_&quot; + DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;) + &quot;.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_44">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtDataKido]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_19" SheetName="Sheet1" StartingCell="A1" />
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_4" Workbook="[wb]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                    </ui:ExcelApplicationScope>
                    <ui:FilterDataTable DataTable="[dtDataKido]" DisplayName="Keep AN-AO -&gt; Paste A-B" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dtAN_AO]" SelectColumnsMode="Keep">
                      <ui:FilterDataTable.Filters>
                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                        </scg:List>
                      </ui:FilterDataTable.Filters>
                      <ui:FilterDataTable.SelectColumns>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:Int32">[39]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[40]</InArgument>
                        </scg:List>
                      </ui:FilterDataTable.SelectColumns>
                    </ui:FilterDataTable>
                    <ui:FilterDataTable DataTable="[dtDataKido]" DisplayName="Keep A-G -&gt; Paste C-I" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dtA_G]" SelectColumnsMode="Keep">
                      <ui:FilterDataTable.Filters>
                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                        </scg:List>
                      </ui:FilterDataTable.Filters>
                      <ui:FilterDataTable.SelectColumns>
                        <scg:List x:TypeArguments="InArgument" Capacity="8">
                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[6]</InArgument>
                        </scg:List>
                      </ui:FilterDataTable.SelectColumns>
                    </ui:FilterDataTable>
                    <ui:FilterDataTable DataTable="[dtDataKido]" DisplayName="Keep I-AM -&gt; Paste J-AN" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[dtI_AM]" SelectColumnsMode="Keep">
                      <ui:FilterDataTable.Filters>
                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                        </scg:List>
                      </ui:FilterDataTable.Filters>
                      <ui:FilterDataTable.SelectColumns>
                        <scg:List x:TypeArguments="InArgument" Capacity="32">
                          <InArgument x:TypeArguments="x:Int32">[8]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[9]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[10]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[11]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[12]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[13]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[14]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[15]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[16]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[17]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[18]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[19]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[20]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[21]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[22]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[23]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[24]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[25]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[26]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[27]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[28]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[29]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[30]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[31]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[32]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[33]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[34]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[35]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[36]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[37]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">[38]</InArgument>
                        </scg:List>
                      </ui:FilterDataTable.SelectColumns>
                    </ui:FilterDataTable>
                    <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[pathInputFile]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="653,565" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(&quot;H:\Robotics\14 Target Buyer Report\KIDO Monthly Report\&quot;,&quot;*.xls*&quot;)]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,431" sap2010:WorkflowViewState.IdRef="Sequence_45">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[Path.GetFileName(item.ToString).StartsWith(&quot;REPORT KIDO'S&quot;) And Path.GetFileName(item.ToString).Contains(&quot;.xls&quot;)]" sap:VirtualizedContainerService.HintSize="484,339" sap2010:WorkflowViewState.IdRef="If_7">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[pathInputFile]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["H:\Robotics\14 Target Buyer Report\KIDO Monthly Report\" + Path.GetFileName(item.ToString)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_47">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                    <If Condition="[String.IsNullOrEmpty(pathInputFile)]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_8">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_48">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[checkFileExist]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_49">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[checkFileExist]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowDecision x:Name="__ReferenceID2" Condition="[checkFileExist]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">300.641666666667,629.5</av:Point>
                          <av:Size x:Key="ShapeSize">79,87</av:Size>
                          <av:PointCollection x:Key="TrueConnector">300.641666666667,673 160,673 160,746.04</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">379.641666666667,673 510,673 510,746.04</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">60,746.04</av:Point>
                              <av:Size x:Key="ShapeSize">200,66</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">160,812.04 160,842.04 510,842.04 510,812.04</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Process Write Data" sap:VirtualizedContainerService.HintSize="500,2107" sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="458,1818" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathInputFile]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="424,1709" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window" sap:VirtualizedContainerService.HintSize="382,51" sap2010:WorkflowViewState.IdRef="WindowScope_1" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;">
                                      <ui:WindowScope.Body>
                                        <ActivityAction x:TypeArguments="x:Object">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:WindowScope.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:WindowScope>
                                    <Sequence DisplayName="Sheet Data" sap:VirtualizedContainerService.HintSize="382,66" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Data</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA11" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_13" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity1" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_1" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="340,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_1" Range="[&quot;A2:AN&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="340,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_2" Range="[&quot;AO3:BH&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="340,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_3" Range="[&quot;BL3:BL&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtAN_AO]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[sheetName]" StartingCell="A2" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtA_G]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="[sheetName]" StartingCell="C2" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtI_AM]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="[sheetName]" StartingCell="J2" />
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity2" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_2" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:ExcelAutoFillRange DisplayName="Fill Column AO-BH" FillRange="[&quot;AO2:BH&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_1" SheetName="[sheetName]" SourceRange="AO2:BH2" />
                                      <ui:ExcelAutoFillRange DisplayName="Fill Column BL" FillRange="[&quot;BL2:BL&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_2" SheetName="[sheetName]" SourceRange="BL2" />
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDataKido]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_20" Range="[&quot;A2:BL&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                                      <ui:FilterDataTable DataTable="[dtDataKido]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[dtDataKido]" SelectColumnsMode="Keep">
                                        <ui:FilterDataTable.Filters>
                                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                            <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                              <ui:FilterOperationArgument.Column>
                                                <InArgument x:TypeArguments="x:Int32">[52]</InArgument>
                                              </ui:FilterOperationArgument.Column>
                                              <ui:FilterOperationArgument.Operand>
                                                <InArgument x:TypeArguments="x:String">["4weeks"]</InArgument>
                                              </ui:FilterOperationArgument.Operand>
                                            </ui:FilterOperationArgument>
                                          </scg:List>
                                        </ui:FilterDataTable.Filters>
                                        <ui:FilterDataTable.SelectColumns>
                                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                                            <x:Null />
                                          </scg:List>
                                        </ui:FilterDataTable.SelectColumns>
                                      </ui:FilterDataTable>
                                    </Sequence>
                                    <Sequence DisplayName="Sheet Reason" sap:VirtualizedContainerService.HintSize="382,66" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Reason</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A100000" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_3" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="340,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_4" Range="[&quot;A2:BL&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDataKido]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_20" SheetName="[sheetName]" StartingCell="A2" />
                                    </Sequence>
                                    <Sequence DisplayName="Sheet Input_Ex_Fac " sap:VirtualizedContainerService.HintSize="382,66" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Read Data Sheet Calculate" sap:VirtualizedContainerService.HintSize="340,66" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Calculate</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_2" Range="A1" SheetName="[sheetName]" />
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Input-Ex-Factory (B2-B5)" DataTable="[dtInputExFac]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" Range="B2:B5" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                      </Sequence>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">["Input_Ex_Fac"]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu cuối cùng" BaseCell="XFD2" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity1" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_1" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ee:MoveHorizontalActivity>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadCell Cell="[stLastColumn]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[sheetName]">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <If sap2010:Annotation.AnnotationText="Nếu đã write dữ liệu ở lần chạy trước nhưng gặp lỗi ở bước sau phải chạy lại thì bỏ qua write dữ liệu" Condition="[cellValue.ToString = DateTime.Now.AddMonths(-1).ToString(&quot;yyyy/MM&quot;)]" sap:VirtualizedContainerService.HintSize="527,954" sap2010:WorkflowViewState.IdRef="If_2">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="382,754" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tiếp theo" BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stNextColumn]" DisplayName="Move horizontal activity2" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_2" MoveCount="1" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ee:MoveHorizontalActivity>
                                            <ui:ExcelWriteCell Cell="[stNextColumn]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(-1).ToString(&quot;yy.MM&quot;)]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtInputExFac]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="[sheetName]" StartingCell="[stNextColumn.Replace(&quot;2&quot;,&quot;3&quot;)]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA12" EntryMethodName="AutoFitColumn" EntryMethodParameters="[{stNextColumn.Replace(&quot;2&quot;,&quot;&quot;)}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_24" />
                                            <Sequence DisplayName="Update Chart" sap:VirtualizedContainerService.HintSize="382,1078" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu cuối cùng" BaseCell="XFD2" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity3" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_3" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tháng hiện tại -1, năm hiện tại -1" BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stFirstColumnOfChart]" DisplayName="Move horizontal activity4" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_4" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA13" EntryMethodName="UpdateChartSheetInputExFac" EntryMethodParameters="[{stFirstColumnOfChart.Replace(&quot;2&quot;,&quot;&quot;), stLastColumn.Replace(&quot;2&quot;,&quot;&quot;), 2, 3, sheetName, &quot;Chart 1&quot;}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_1" />
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA14" EntryMethodName="UpdateChartSheetInputExFac" EntryMethodParameters="[{stFirstColumnOfChart.Replace(&quot;2&quot;,&quot;&quot;), stLastColumn.Replace(&quot;2&quot;,&quot;&quot;), 30, 31, sheetName, &quot;Chart 2&quot;}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_12" />
                                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tháng hiện tại -2, năm hiện tại -1 để ẩn đi" BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stHideColumn]" DisplayName="Move horizontal activity5" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_5" MoveCount="13" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA15" EntryMethodName="HideColumn" EntryMethodParameters="[{sheetName,2,stHideColumn}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_2" />
                                            </Sequence>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                    <Sequence DisplayName="Sheet COIL" sap:VirtualizedContainerService.HintSize="382,835" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Read Data Sheet Calculate" sap:VirtualizedContainerService.HintSize="340,66" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Calculate</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_3" Range="A1" SheetName="[sheetName]" />
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Input Request Coil (B9-B13)" DataTable="[dtInputRequest]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" Range="B9:B13" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Input Delivery Coil (B17-B21)" DataTable="[dtInputDelivery]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" Range="B17:B21" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Arr Request Coil (H9:H13)" DataTable="[dtArrRequest]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" Range="H9:H13" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Arr Pack Coil (H17:H21)" DataTable="[dtArrPack]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" Range="H17:H21" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                      </Sequence>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">COIL</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu cuối cùng" BaseCell="XFD4" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity6" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_6" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ee:MoveHorizontalActivity>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadCell Cell="[stLastColumn]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="[sheetName]">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <If sap2010:Annotation.AnnotationText="Nếu đã write dữ liệu ở lần chạy trước nhưng gặp lỗi ở bước sau phải chạy lại thì bỏ qua write dữ liệu" Condition="[cellValue.ToString = DateTime.Now.AddMonths(-1).ToString(&quot;yyyy/MM&quot;)]" sap:VirtualizedContainerService.HintSize="527,1423" sap2010:WorkflowViewState.IdRef="If_3">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="382,1223" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tiếp theo" BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stNextColumn]" DisplayName="Move horizontal activity7" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_7" MoveCount="1" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ee:MoveHorizontalActivity>
                                            <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột để write data" BaseCell="[stNextColumn.Replace(&quot;4&quot;,&quot;6&quot;)]" ClipboardCopyFlg="False" CurrentCell="[stWriteDataColumn]" DisplayName="Move horizontal activity8" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_8" MoveCount="1" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ee:MoveHorizontalActivity>
                                            <ui:ExcelWriteCell Cell="[stNextColumn]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(-1).ToString(&quot;yyyy/MM&quot;)]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtInputRequest]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_6" SheetName="[sheetName]" StartingCell="[stNextColumn.Replace(&quot;4&quot;,&quot;6&quot;)]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtInputDelivery]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_7" SheetName="[sheetName]" StartingCell="[stWriteDataColumn]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtArrRequest]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="[sheetName]" StartingCell="[stNextColumn.Replace(&quot;4&quot;,&quot;47&quot;)]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtArrPack]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_9" SheetName="[sheetName]" StartingCell="[stWriteDataColumn.Replace(&quot;6&quot;,&quot;47&quot;)]" />
                                            <Sequence DisplayName="Update Chart" sap:VirtualizedContainerService.HintSize="382,1089" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD4" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity9" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_9" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có giá trị = tháng hiện tại -1, năm hiện tại -1" BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stFirstColumnOfChart]" DisplayName="Move horizontal activity10" sap:VirtualizedContainerService.HintSize="340,186" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_10" MoveCount="24" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA16" EntryMethodName="UpdateChartCoilVislonMetal" EntryMethodParameters="[{stFirstColumnOfChart.Replace(&quot;4&quot;,&quot;&quot;), stWriteDataColumn.Replace(&quot;6&quot;,&quot;&quot;), 14, 15, 16, sheetName, &quot;Chart 3&quot;}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_3" />
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA17" EntryMethodName="UpdateChartCoilVislonMetal" EntryMethodParameters="[{stFirstColumnOfChart.Replace(&quot;4&quot;,&quot;&quot;), stWriteDataColumn.Replace(&quot;6&quot;,&quot;&quot;), 55, 56, 57, sheetName, &quot;Chart 4&quot;}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_4" />
                                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tháng hiện tại -2, năm hiện tại -1 để ẩn đi" BaseCell="[stLastColumn.Replace(&quot;4&quot;,&quot;6&quot;)]" ClipboardCopyFlg="False" CurrentCell="[stHideColumn]" DisplayName="Move horizontal activity11" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_11" MoveCount="25" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA18" EntryMethodName="HideColumn" EntryMethodParameters="[{sheetName,4,stHideColumn}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_5" />
                                            </Sequence>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                    <Sequence DisplayName="Sheet VISLON" sap:VirtualizedContainerService.HintSize="382,66" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Read Data Sheet Calculate" sap:VirtualizedContainerService.HintSize="340,66" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Calculate</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_4" Range="A1" SheetName="[sheetName]" />
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Input Request Vislon (C9-C13)" DataTable="[dtInputRequest]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_12" Range="C9:C13" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Input Delivery Vislon (C17-C21)" DataTable="[dtInputDelivery]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_13" Range="C17:C21" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Arr Request Vislon (I9:I13)" DataTable="[dtArrRequest]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_14" Range="I9:I13" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Arr Pack Vislon (I17:I21)" DataTable="[dtArrPack]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_15" Range="I17:I21" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                      </Sequence>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">VISLON</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu cuối cùng" BaseCell="XFD4" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity12" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_12" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ee:MoveHorizontalActivity>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadCell Cell="[stLastColumn]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="[sheetName]">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <If sap2010:Annotation.AnnotationText="Nếu đã write dữ liệu ở lần chạy trước nhưng gặp lỗi ở bước sau phải chạy lại thì bỏ qua write dữ liệu" Condition="[cellValue.ToString = DateTime.Now.AddMonths(-1).ToString(&quot;yyyy/MM&quot;)]" sap:VirtualizedContainerService.HintSize="527,1423" sap2010:WorkflowViewState.IdRef="If_4">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="382,1223" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tiếp theo" BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stNextColumn]" DisplayName="Move horizontal activity13" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_13" MoveCount="1" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ee:MoveHorizontalActivity>
                                            <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột để write data" BaseCell="[stNextColumn.Replace(&quot;4&quot;,&quot;6&quot;)]" ClipboardCopyFlg="False" CurrentCell="[stWriteDataColumn]" DisplayName="Move horizontal activity14" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_14" MoveCount="1" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ee:MoveHorizontalActivity>
                                            <ui:ExcelWriteCell Cell="[stNextColumn]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(-1).ToString(&quot;yyyy/MM&quot;)]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtInputRequest]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_10" SheetName="[sheetName]" StartingCell="[stNextColumn.Replace(&quot;4&quot;,&quot;6&quot;)]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtInputDelivery]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_11" SheetName="[sheetName]" StartingCell="[stWriteDataColumn]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtArrRequest]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_12" SheetName="[sheetName]" StartingCell="[stNextColumn.Replace(&quot;4&quot;,&quot;47&quot;)]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtArrPack]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_13" SheetName="[sheetName]" StartingCell="[stWriteDataColumn.Replace(&quot;6&quot;,&quot;47&quot;)]" />
                                            <Sequence DisplayName="Update Chart" sap:VirtualizedContainerService.HintSize="382,1089" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD4" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity15" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_15" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có giá trị = tháng hiện tại -1, năm hiện tại -1" BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stFirstColumnOfChart]" DisplayName="Move horizontal activity16" sap:VirtualizedContainerService.HintSize="340,186" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_16" MoveCount="24" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA19" EntryMethodName="UpdateChartCoilVislonMetal" EntryMethodParameters="[{stFirstColumnOfChart.Replace(&quot;4&quot;,&quot;&quot;), stWriteDataColumn.Replace(&quot;6&quot;,&quot;&quot;), 14, 15, 16, sheetName, &quot;Chart 5&quot;}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_6" />
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA20" EntryMethodName="UpdateChartCoilVislonMetal" EntryMethodParameters="[{stFirstColumnOfChart.Replace(&quot;4&quot;,&quot;&quot;), stWriteDataColumn.Replace(&quot;6&quot;,&quot;&quot;), 55, 56, 57, sheetName, &quot;Chart 6&quot;}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_7" />
                                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tháng hiện tại -2, năm hiện tại -1 để ẩn đi" BaseCell="[stLastColumn.Replace(&quot;4&quot;,&quot;6&quot;)]" ClipboardCopyFlg="False" CurrentCell="[stHideColumn]" DisplayName="Move horizontal activity17" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_17" MoveCount="25" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA21" EntryMethodName="HideColumn" EntryMethodParameters="[{sheetName,4,stHideColumn}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_8" />
                                            </Sequence>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                    <Sequence DisplayName="Sheet METAL" sap:VirtualizedContainerService.HintSize="382,835" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Read Data Sheet Calculate" sap:VirtualizedContainerService.HintSize="340,66" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Calculate</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_5" Range="A1" SheetName="[sheetName]" />
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Input Request Metal (D9-D13)" DataTable="[dtInputRequest]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_16" Range="D9:D13" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Input Delivery Metal (D17-D21)" DataTable="[dtInputDelivery]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_17" Range="D17:D21" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Arr Request Metal (J9:J13)" DataTable="[dtArrRequest]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_18" Range="J9:J13" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                        <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="Read Arr Pack Metal (J17:J21)" DataTable="[dtArrPack]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ExcelReadRange_19" Range="J17:J21" SheetName="[sheetName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelReadRange>
                                      </Sequence>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">METAL</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu cuối cùng" BaseCell="XFD4" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity18" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_18" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ee:MoveHorizontalActivity>
                                      <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadCell Cell="[stLastColumn]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="[sheetName]">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <If sap2010:Annotation.AnnotationText="Nếu đã write dữ liệu ở lần chạy trước nhưng gặp lỗi ở bước sau phải chạy lại thì bỏ qua write dữ liệu" Condition="[cellValue.ToString = DateTime.Now.AddMonths(-1).ToString(&quot;yyyy/MM&quot;)]" sap:VirtualizedContainerService.HintSize="527,1423" sap2010:WorkflowViewState.IdRef="If_5">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="382,1223" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tiếp theo" BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stNextColumn]" DisplayName="Move horizontal activity19" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_19" MoveCount="1" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ee:MoveHorizontalActivity>
                                            <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột để write data" BaseCell="[stNextColumn.Replace(&quot;4&quot;,&quot;6&quot;)]" ClipboardCopyFlg="False" CurrentCell="[stWriteDataColumn]" DisplayName="Move horizontal activity20" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_20" MoveCount="1" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ee:MoveHorizontalActivity>
                                            <ui:ExcelWriteCell Cell="[stNextColumn]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(-1).ToString(&quot;yyyy/MM&quot;)]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtInputRequest]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_14" SheetName="[sheetName]" StartingCell="[stNextColumn.Replace(&quot;4&quot;,&quot;6&quot;)]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtInputDelivery]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_15" SheetName="[sheetName]" StartingCell="[stWriteDataColumn]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtArrRequest]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_16" SheetName="[sheetName]" StartingCell="[stNextColumn.Replace(&quot;4&quot;,&quot;47&quot;)]" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtArrPack]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_17" SheetName="[sheetName]" StartingCell="[stWriteDataColumn.Replace(&quot;6&quot;,&quot;47&quot;)]" />
                                            <Sequence DisplayName="Update Chart" sap:VirtualizedContainerService.HintSize="382,1089" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD4" ClipboardCopyFlg="False" CurrentCell="[stLastColumn]" DisplayName="Move horizontal activity21" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_21" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có giá trị = tháng hiện tại -1, năm hiện tại -1" BaseCell="[stLastColumn]" ClipboardCopyFlg="False" CurrentCell="[stFirstColumnOfChart]" DisplayName="Move horizontal activity22" sap:VirtualizedContainerService.HintSize="340,186" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_22" MoveCount="24" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA22" EntryMethodName="UpdateChartCoilVislonMetal" EntryMethodParameters="[{stFirstColumnOfChart.Replace(&quot;4&quot;,&quot;&quot;), stWriteDataColumn.Replace(&quot;6&quot;,&quot;&quot;), 14, 15, 16, sheetName, &quot;Chart 7&quot;}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_9" />
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA23" EntryMethodName="UpdateChartCoilVislonMetal" EntryMethodParameters="[{stFirstColumnOfChart.Replace(&quot;4&quot;,&quot;&quot;), stWriteDataColumn.Replace(&quot;6&quot;,&quot;&quot;), 55, 56, 57, sheetName, &quot;Chart 8&quot;}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_10" />
                                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tháng hiện tại -2, năm hiện tại -1 để ẩn đi" BaseCell="[stLastColumn.Replace(&quot;4&quot;,&quot;6&quot;)]" ClipboardCopyFlg="False" CurrentCell="[stHideColumn]" DisplayName="Move horizontal activity23" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_23" MoveCount="25" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ee:MoveHorizontalActivity>
                                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\KIDO MONTHLY REPORT.vb" DisplayName="Invoke VBA24" EntryMethodName="HideColumn" EntryMethodParameters="[{sheetName,4,stHideColumn}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_11" />
                                            </Sequence>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                    <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="382,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="382,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[wb]" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                            </ui:ExcelApplicationScope>
                            <ui:MoveFile ContinueOnError="{x:Null}" Destination="[&quot;H:\Robotics\14 Target Buyer Report\KIDO Monthly Report\REPORT KIDO'S &quot; + DateTime.Now.AddMonths(-1).ToString(&quot;MMM-yyyy&quot;) + &quot;.xlsx&quot;]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="458,157" sap2010:WorkflowViewState.IdRef="MoveFile_3" Overwrite="True" Path="[pathInputFile]" />
                          </Sequence>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID0">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">410,746.04</av:Point>
                                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Send Mail" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[checkFileExist]" sap:VirtualizedContainerService.HintSize="797,379" sap2010:WorkflowViewState.IdRef="If_6">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,221" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[stSubject]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">["[RPA] KIDO MONTHLY REPORT " + DateTime.Now.AddMonths(-1).ToString("MMM-yyyy")]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[stContent]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;p&gt;&lt;b&gt;Dear All,&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;" +
"&lt;p&gt;Robot run has been completed, please check report file in folder below:&lt;/p&gt;" +
"&lt;p&gt;H:\Robotics\14 Target Buyer Report\KIDO Monthly Report&lt;/p&gt;" +
"&lt;p&gt;Thanks&lt;/p&gt;"]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                      </ui:MultipleAssign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,221" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[stSubject]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String" xml:space="preserve">[RPA] ERROR: NOT FOUND KIDO REPORT FILE </InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[stContent]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;p&gt;&lt;b&gt;Dear All,&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;" +
"&lt;p&gt;Robot not found REPORT KIDO file&lt;/p&gt;" +
"&lt;p&gt;Please check folder below: &lt;/p&gt;" +
"&lt;p&gt;H:\Robotics\14 Target Buyer Report\KIDO Monthly Report&lt;/p&gt;" +
"&lt;p&gt;Thanks!&lt;/p&gt;"]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                      </ui:MultipleAssign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send Mail" sap:VirtualizedContainerService.HintSize="797,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">[stSubject]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="mail_Content">[stContent]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">trinhntt@ykk.com,loanmh@ykk.com,nuongdtm@ykk.com</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="mail_CC">thamltn@ykk.com,thaidh@ykk.com</InArgument>
                                    <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">[{}]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <x:Reference>__ReferenceID0</x:Reference>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.True>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
  </Flowchart>
</Activity>