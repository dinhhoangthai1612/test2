<Activity mc:Ignorable="sap sap2010" x:Class="DEFECT_RECORD" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:bew="clr-namespace:BalaReva.Excel.WorkBook;assembly=BalaReva.Excel" xmlns:ee="clr-namespace:ExcelCustomActivities.Excel;assembly=ExcelCustomActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="EndStatus" Type="InOutArgument(x:String)" />
    <x:Property Name="EndMessage" Type="InOutArgument(x:String)" />
    <x:Property Name="Order_Number" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>797,864</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DEFECT_RECORD_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="74">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="DEFECT_RECORD" sap:VirtualizedContainerService.HintSize="634,799" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Server" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_library" />
      <Variable x:TypeArguments="x:String" Name="Path_Folder" />
      <Variable x:TypeArguments="x:String" Name="Path_downloads" />
      <Variable x:TypeArguments="x:String" Name="Path_template" />
      <Variable x:TypeArguments="x:String" Name="Mail_Password" />
      <Variable x:TypeArguments="x:String" Name="Mail_PIC" />
      <Variable x:TypeArguments="x:String" Name="Mail_Email" />
      <Variable x:TypeArguments="x:String" Name="Mail_Server" />
      <Variable x:TypeArguments="s:DateTime" Name="dayNow" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtDays" />
      <Variable x:TypeArguments="x:String" Name="pathDefectRecordSource" />
      <Variable x:TypeArguments="x:String" Name="pathDefectRecordTarget" />
      <Variable x:TypeArguments="x:String" Name="pathFolderTarget" />
      <Variable x:TypeArguments="s:DateTime" Name="monthReport" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wb" />
      <Variable x:TypeArguments="x:String" Name="currentCell" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtCopy" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtBase" />
      <Variable x:TypeArguments="x:String" Name="strSheetName" />
      <Variable x:TypeArguments="x:Boolean" Name="checkFlag" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtBaseSF" />
      <Variable x:TypeArguments="x:Int32" Name="rowInt" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="x:Int32" Name="totalRows" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">260,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">290,77.5 290,107.5 286.5,107.5 286.5,121.04</av:PointCollection>
        <x:Double x:Key="Height">763</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">186.5,231.04</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">286.5,299.04 286.5,329.04 286.641666666667,329.04 286.641666666667,337.04</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Initial" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_18">
          <Assign.To>
            <OutArgument x:TypeArguments="s:DateTime">[monthReport]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:DateTime">[DateTime.Now.AddMonths(-1)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_20">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[monthReport.ToString("MMM.yyyy")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_17">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[pathFolderTarget]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\Plating\Báo cáo tháng 2020\"]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_31">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[pathDefectRecordSource]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[pathFolderTarget + "Defect Record-T"+monthReport.Month.ToString+"-"+monthReport.Year.ToString+".xlsb"]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_15">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[pathDefectRecordTarget]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[pathFolderTarget + "ROBOT\Defect Record-T"+monthReport.Month.ToString+"-"+monthReport.Year.ToString+".xlsb"]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="s:DateTime">[dayNow]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:DateTime">[DateTime.Now.AddMonths(1)]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtDays]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="484,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" ProviderName="System.Data.Odbc" Sql="Select YMDU02&#xA;From WAVEDLIB.C0200&#xA;Where YMDU02&gt;=? And YMDU02&lt;=? And DPTC02='01' AND HTYC02=0&#xA;Order By YMDU02 ASC &#xA;LIMIT 2" ConnectionString="Dsn=RPALIB;uid=robotnt;pwd=robotnt123">
          <ui:ExecuteQuery.Parameters>
            <InArgument x:TypeArguments="x:String" x:Key="Argument1">[dayNow.ToString("yyyyMM") + "01"]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Argument2">[dayNow.ToString("yyyyMM") + DateTime.DaysInMonth(dayNow.Year, dayNow.Month).ToString]</InArgument>
          </ui:ExecuteQuery.Parameters>
        </ui:ExecuteQuery>
        <If Condition="[dtDays.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="484,439" sap2010:WorkflowViewState.IdRef="If_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[dayNow]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[Datetime.ParseExact(dtDays.Rows(1)(0).ToString,“yyyyMMdd”,System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[EndMessage]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[(DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month) - DateTime.Now.Day + dayNow.Day).ToString]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
        </If>
        <ui:PathExists DisplayName="Path Exists" Exists="[checkFlag]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[pathDefectRecordSource]" PathType="File" />
      </Sequence>
      <FlowStep.Next>
        <FlowDecision x:Name="__ReferenceID4" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
          <FlowDecision.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="checkFlag" />
          </FlowDecision.Condition>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">247.141666666667,337.04</av:Point>
              <av:Size x:Key="ShapeSize">79,87</av:Size>
              <av:PointCollection x:Key="TrueConnector">247.141666666667,380.54 50,380.54 50,499.04 80,499.04</av:PointCollection>
              <av:PointCollection x:Key="FalseConnector">326.141666666667,380.54 460,380.54 460,467</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">80,466.04</av:Point>
                  <av:Size x:Key="ShapeSize">200,68</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">180,534.04 180,577</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Read Data Source" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:CopyFile ContinueOnError="{x:Null}" Destination="[pathDefectRecordTarget]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="529,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[Path_template + &quot;DEFECT RECORD\Defect Record-Template.xlsb&quot;]" />
                <Assign sap:VirtualizedContainerService.HintSize="529,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[checkFlag]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="529,399" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="3" RetryInterval="00:00:03">
                  <ui:RetryScope.ActivityBody>
                    <ActivityAction>
                      <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="487,161" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <bew:RenameSheet FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="1" DisplayName="Rename Work Sheet" ExecutionResult="[checkFlag]" FilePath="[pathDefectRecordTarget]" sap:VirtualizedContainerService.HintSize="445,69" sap2010:WorkflowViewState.IdRef="RenameSheet_3" NewSheetName="[strSheetName]" SheetName="MMM.yyyy" />
                      </Sequence>
                    </ActivityAction>
                  </ui:RetryScope.ActivityBody>
                  <ui:RetryScope.Condition>
                    <ActivityFunc x:TypeArguments="x:Boolean">
                      <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="IsTrue_2" Input="[checkFlag]" />
                    </ActivityFunc>
                  </ui:RetryScope.Condition>
                </ui:RetryScope>
                <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="529,1043" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" ReadOnly="True" Workbook="[wb]" WorkbookPath="[pathDefectRecordSource]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,934" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="RemoveFilterOnSheet" EntryMethodParameters="[{&quot;copy&quot;}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_1" />
                        <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A100000" ClipboardCopyFlg="False" CurrentCell="[currentCell]" DisplayName="Move vertical activity" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_1" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="copy" WorkBook="[wb]" />
                        <ui:ExcelReadRange AddHeaders="False" DataTable="[dtCopy]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="[&quot;A3:T&quot; + currentCell.Substring(1)]" SheetName="copy" />
                        <ui:RemoveDuplicateRows DataTable="[dtCopy]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_9" OutputDataTable="[dtCopy]" />
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="RemoveFilterOnSheet" EntryMethodParameters="[{strSheetName}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_2" />
                        <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="B100000" ClipboardCopyFlg="False" CurrentCell="[currentCell]" DisplayName="Move vertical activity" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_2" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[strSheetName]" WorkBook="[wb]" />
                        <ui:ExcelReadRange AddHeaders="False" DataTable="[dtBase]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" Range="[&quot;B7:BQ&quot; + currentCell.Substring(1)]" SheetName="[strSheetName]" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
                <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="529,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[wb]" />
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">80,577</av:Point>
                      <av:Size x:Key="ShapeSize">200,68</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">180,645 180,687</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Process Data" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="680,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[totalRows]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[dtCopy.Rows.Count]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="680,6328" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathDefectRecordTarget]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="646,6219" sap2010:WorkflowViewState.IdRef="Sequence_13">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="dt_Summary" />
                              <Variable x:TypeArguments="sd:DataTable" Name="dt_Replating" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtCopy]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="604,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="copy" StartingCell="A2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelWriteRange>
                            <If Condition="[totalRows &gt; 1]" sap:VirtualizedContainerService.HintSize="604,263" sap2010:WorkflowViewState.IdRef="If_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;U2:X&quot; + (totalRows + 1).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_1" SheetName="copy" SourceRange="U2:X2" />
                              </If.Then>
                            </If>
                            <ui:FilterDataTable DataTable="[dtCopy]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="604,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dtCopy]" SelectColumnsMode="Keep">
                              <ui:FilterDataTable.Filters>
                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                </scg:List>
                              </ui:FilterDataTable.Filters>
                              <ui:FilterDataTable.SelectColumns>
                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                </scg:List>
                              </ui:FilterDataTable.SelectColumns>
                            </ui:FilterDataTable>
                            <ui:JoinDataTables DataTable1="[dtCopy]" DataTable2="[dtBase]" DisplayName="Join Data Tables" sap:VirtualizedContainerService.HintSize="604,59" sap2010:WorkflowViewState.IdRef="JoinDataTables_1" JoinType="Inner" OutputDataTable="[dt_Summary]">
                              <ui:JoinDataTables.Arguments>
                                <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
                                  <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                    <ui:JoinOperationArgument.Column1>
                                      <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                    </ui:JoinOperationArgument.Column1>
                                    <ui:JoinOperationArgument.Column2>
                                      <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                    </ui:JoinOperationArgument.Column2>
                                  </ui:JoinOperationArgument>
                                </scg:List>
                              </ui:JoinDataTables.Arguments>
                            </ui:JoinDataTables>
                            <ui:FilterDataTable DataTable="[dt_Summary]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="604,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_12" OutputDataTable="[dt_Summary]" SelectColumnsMode="Remove">
                              <ui:FilterDataTable.Filters>
                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                </scg:List>
                              </ui:FilterDataTable.Filters>
                              <ui:FilterDataTable.SelectColumns>
                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                </scg:List>
                              </ui:FilterDataTable.SelectColumns>
                            </ui:FilterDataTable>
                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_Summary]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="604,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="[strSheetName]" StartingCell="B6" />
                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;A7:A&quot; + (dt_Summary.Rows.Count + 5).ToString]" sap:VirtualizedContainerService.HintSize="604,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_9" SheetName="[strSheetName]" SourceRange="A7:A7" />
                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="drawBorderDefectRecord" EntryMethodParameters="[{strSheetName, &quot;A6:BQ&quot; + (dt_Summary.Rows.Count + 5).ToString}]" sap:VirtualizedContainerService.HintSize="604,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_18">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeVBA>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtBase]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="604,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" Range="[&quot;A6:BQ&quot; + (dt_Summary.Rows.Count + 5).ToString]" SheetName="[strSheetName]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <Assign sap:VirtualizedContainerService.HintSize="604,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:DataTable">[dt_Replating]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:DataTable">[dtBase.copy]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Sequence DisplayName="Sheet Defect PR" sap:VirtualizedContainerService.HintSize="604,895" sap2010:WorkflowViewState.IdRef="Sequence_51">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:FilterDataTable DataTable="[dtBase]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_23" OutputDataTable="[dtBaseSF]" SelectColumnsMode="Remove">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="LT">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[6]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                              </ui:FilterDataTable>
                              <If Condition="[dtBaseSF.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="484,612" sap2010:WorkflowViewState.IdRef="If_30">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_34" SheetName="Defect PR" StartingCell="B4" />
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;A5:A&quot; + (dtBaseSF.Rows.Count + 3).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_12" SheetName="Defect PR" SourceRange="A5:A5" />
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="drawBorderDefectRecord" EntryMethodParameters="[{&quot;Defect PR&quot;, &quot;A4:BQ&quot; + (dtBaseSF.Rows.Count + 3).ToString}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_26" />
                                  </Sequence>
                                </If.Then>
                              </If>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="484,52" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="546,1086" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[dtBaseSF.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="504,994" sap2010:WorkflowViewState.IdRef="If_24">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="468,815" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="426,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtBaseSF]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="426,369" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
                                            <ui:ForEachRow.Body>
                                              <ActivityAction x:TypeArguments="sd:DataRow">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,221" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                                                    <ui:MultipleAssign.AssignOperations>
                                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Object">[row(0)]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Object">[index]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                      </scg:List>
                                                    </ui:MultipleAssign.AssignOperations>
                                                  </ui:MultipleAssign>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ForEachRow.Body>
                                          </ui:ForEachRow>
                                          <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="426,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_25" SheetName="Defect PR" StartingCell="A4" />
                                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="drawBorderDefectRecord" EntryMethodParameters="[{&quot;Defect PR&quot;, &quot;A4:AY&quot; + (dtBaseSF.Rows.Count + 3).ToString}]" sap:VirtualizedContainerService.HintSize="426,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_19" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                            </Sequence>
                            <Sequence DisplayName="Sheet Chart Defect (Kg)" sap:VirtualizedContainerService.HintSize="604,2127" sap2010:WorkflowViewState.IdRef="Sequence_54">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:FilterDataTable DataTable="[dtBase]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_24" OutputDataTable="[dtBaseSF]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[9]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                              </ui:FilterDataTable>
                              <ui:RemoveDuplicateRows DataTable="[dtBaseSF]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_5" OutputDataTable="[dtBaseSF]" />
                              <If Condition="[dtBaseSF.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="562,1874" sap2010:WorkflowViewState.IdRef="If_26">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="526,1695" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[0]" DataTable="[dtBaseSF]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="SortDataTable_13" Order="Ascending" OutputDataTable="[dtBaseSF]" SortOrder="Ascending" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_26" SheetName="Chart Defect (Kg)" StartingCell="A2" />
                                    <If Condition="[dtBaseSF.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="484,485" sap2010:WorkflowViewState.IdRef="If_25">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;B2:G&quot; + (dtBaseSF.Rows.Count + 1).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_10" SheetName="Chart Defect (Kg)" SourceRange="B2:G2" />
                                          <ui:ExcelWriteCell Cell="[&quot;H2:H&quot; + (dtBaseSF.Rows.Count + 1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Chart Defect (Kg)" Text="0.54%" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="drawBorderDefectRecord" EntryMethodParameters="[{&quot;Chart Defect (Kg)&quot;, &quot;A2:H&quot; + (dtBaseSF.Rows.Count + 1).ToString}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_20" />
                                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" Range="[&quot;A2:H&quot; + (dtBaseSF.Rows.Count + 1).ToString]" SheetName="Chart Defect (Kg)" />
                                    <ui:FilterDataTable DataTable="[dtBaseSF]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_25" OutputDataTable="[dtCopy]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="8">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[7]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                    </ui:FilterDataTable>
                                    <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[3]" DataTable="[dtCopy]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="SortDataTable_14" Order="Decending" OutputDataTable="[dtCopy]" SortOrder="Descending" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtCopy]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_27" SheetName="Chart Defect (Kg)" StartingCell="U2" />
                                    <ui:FilterDataTable DataTable="[dtBaseSF]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_26" OutputDataTable="[dtCopy]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="8">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[6]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[7]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                    </ui:FilterDataTable>
                                    <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[3]" DataTable="[dtCopy]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="SortDataTable_15" Order="Decending" OutputDataTable="[dtCopy]" SortOrder="Descending" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtCopy]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_28" SheetName="Chart Defect (Kg)" StartingCell="AA2" />
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="SetChartDataDefectRecord" EntryMethodParameters="[{&quot;Chart Defect (Kg)&quot;, (dtBaseSF.Rows.Count + 1).ToString}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_21" />
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                            <Sequence DisplayName="Sheet Re-Plating" sap:VirtualizedContainerService.HintSize="604,1521" sap2010:WorkflowViewState.IdRef="Sequence_57">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="sd:DataTable" Name="dt_Replating_W" />
                                <Variable x:TypeArguments="sd:DataTable" Name="dt_Replating_AA" />
                                <Variable x:TypeArguments="sd:DataTable" Name="dt_FilteredCode" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lấy dữ liệu cột W, bỏ các dòng trống, #NA, 0 đi." DataTable="[dt_Replating]" DisplayName="Filter: Column W" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="521,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_27" OutputDataTable="[dt_Replating_W]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[22]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["0"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[22]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["#N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[22]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Filter code: AA" DataTable="[dt_Replating_W]" DisplayName="Filter column: AA" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="521,83" sap2010:WorkflowViewState.IdRef="FilterDataTable_43" OutputDataTable="[dt_FilteredCode]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[26]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[26]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <ui:RemoveDuplicateRows DataTable="[dt_FilteredCode]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_8" OutputDataTable="[dt_FilteredCode]" />
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lấy dữ liệu cột W, bỏ các dòng trống, #NA, 0 đi." DataTable="[dt_Replating]" DisplayName="Filter: Column AA" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="521,96" sap2010:WorkflowViewState.IdRef="FilterDataTable_41" OutputDataTable="[dt_Replating_AA]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[26]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["0"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[26]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["#N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[26]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt_FilteredCode]" DisplayName="Delete row by AA Code" sap:VirtualizedContainerService.HintSize="521,52" sap2010:WorkflowViewState.IdRef="ForEachRow_12">
                                <ui:ForEachRow.Body>
                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,182" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:FilterDataTable sap2010:Annotation.AnnotationText="" DataTable="[dt_Replating_AA]" DisplayName="Filter: Column AA" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_42" OutputDataTable="[dt_Replating_AA]" SelectColumnsMode="Keep">
                                        <ui:FilterDataTable.Filters>
                                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                              <ui:FilterOperationArgument.Column>
                                                <InArgument x:TypeArguments="x:Int32">[26]</InArgument>
                                              </ui:FilterOperationArgument.Column>
                                              <ui:FilterOperationArgument.Operand>
                                                <InArgument x:TypeArguments="x:Object">[row(0)]</InArgument>
                                              </ui:FilterOperationArgument.Operand>
                                            </ui:FilterOperationArgument>
                                          </scg:List>
                                        </ui:FilterDataTable.Filters>
                                        <ui:FilterDataTable.SelectColumns>
                                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                                            <x:Null />
                                          </scg:List>
                                        </ui:FilterDataTable.SelectColumns>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:FilterDataTable>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEachRow.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEachRow>
                              <ui:ClearDataTable DataTable="[dt_Replating]" DisplayName="Clear -&gt; dt_Plating" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="ClearDataTable_1" />
                              <ui:MergeDataTable Destination="[dt_Replating]" DisplayName="W -&gt; dt_Plating" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add" Source="[dt_Replating_W]" />
                              <ui:MergeDataTable Destination="[dt_Replating]" DisplayName="AA -&gt; dt_Plating" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="MergeDataTable_2" MissingSchemaAction="Add" Source="[dt_Replating_AA]" />
                              <ui:FilterDataTable DataTable="[dt_Replating]" DisplayName="Remove column: 0" sap:VirtualizedContainerService.HintSize="521,51" sap2010:WorkflowViewState.IdRef="FilterDataTable_36" OutputDataTable="[dt_Replating]" SelectColumnsMode="Remove">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <If Condition="[dt_Replating.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="521,609" sap2010:WorkflowViewState.IdRef="If_27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_Replating]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_35" SheetName="Re-Plating" StartingCell="B4" />
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;A5:A&quot; + (dt_Replating.Rows.Count + 3).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_13" SheetName="Re-Plating" SourceRange="A5:A5" />
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="drawBorderDefectRecord" EntryMethodParameters="[{&quot;Re-Plating&quot;, &quot;A4:BQ&quot; + (dt_Replating.Rows.Count + 3).ToString}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_22" />
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                            <Sequence DisplayName="Sheet Chart Re-Plating (Kg)" sap:VirtualizedContainerService.HintSize="604,2123" sap2010:WorkflowViewState.IdRef="Sequence_60">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="sd:DataTable" Name="dt_J" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:FilterDataTable DataTable="[dt_Replating]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_28" OutputDataTable="[dt_J]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[8]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                              </ui:FilterDataTable>
                              <ui:RemoveDuplicateRows DataTable="[dt_J]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_6" OutputDataTable="[dt_J]" />
                              <If Condition="[dt_J.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="562,1870" sap2010:WorkflowViewState.IdRef="If_29">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="526,1693" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[0]" DataTable="[dt_J]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="SortDataTable_16" Order="Ascending" OutputDataTable="[dt_J]" SortOrder="Ascending" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_J]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_30" SheetName="Chart Re-Plating (Kg)" StartingCell="A2" />
                                    <If Condition="[dt_J.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="484,483" sap2010:WorkflowViewState.IdRef="If_28">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;B2:G&quot; + (dt_J.Rows.Count + 1).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_11" SheetName="Chart Re-Plating (Kg)" SourceRange="B2:G2" />
                                          <ui:ExcelWriteCell Cell="[&quot;H2:H&quot; + (dt_J.Rows.Count + 1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Chart Re-Plating (Kg)" Text="0.54%" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="drawBorderDefectRecord" EntryMethodParameters="[{&quot;Chart Re-Plating (Kg)&quot;, &quot;A2:H&quot; + (dt_J.Rows.Count + 1).ToString}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_23" />
                                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" Range="[&quot;A2:H&quot; + (dt_J.Rows.Count + 1).ToString]" SheetName="Chart Re-Plating (Kg)" />
                                    <ui:FilterDataTable DataTable="[dtBaseSF]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_32" OutputDataTable="[dtCopy]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="8">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[7]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                    </ui:FilterDataTable>
                                    <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[3]" DataTable="[dtCopy]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="SortDataTable_19" Order="Decending" OutputDataTable="[dtCopy]" SortOrder="Descending" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtCopy]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_36" SheetName="Chart Re-Plating (Kg)" StartingCell="U2" />
                                    <ui:FilterDataTable DataTable="[dtBaseSF]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_33" OutputDataTable="[dtCopy]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="8">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[6]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[7]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                    </ui:FilterDataTable>
                                    <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[3]" DataTable="[dtCopy]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="SortDataTable_20" Order="Decending" OutputDataTable="[dtCopy]" SortOrder="Descending" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtCopy]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_37" SheetName="Chart Re-Plating (Kg)" StartingCell="AA2" />
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="SetChartDataDefectRecord" EntryMethodParameters="[{&quot;Chart Re-Plating (Kg)&quot;, (dtBaseSF.Rows.Count + 1).ToString}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_27" />
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="604,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="688,4770" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="OLD" sap:VirtualizedContainerService.HintSize="646,4679" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="STT" DataTable="[dtCopy]" DefaultValue="[0]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="604,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" />
                                    <Assign sap:VirtualizedContainerService.HintSize="604,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="604,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="sd:DataTable">[dtBaseSF]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="sd:DataTable">[dtBase.Clone]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtCopy]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="604,765" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,617" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LookupDataTable CellValue="{x:Null}" LookupColumnName="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[dtBase]" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="LookupDataTable_2" LookupColumnIndex="[0]" LookupValue="[row(0).ToString]" RowIndex="[rowInt]" />
                                            <If Condition="[rowInt &gt; -1]" sap:VirtualizedContainerService.HintSize="484,294" sap2010:WorkflowViewState.IdRef="If_16">
                                              <If.Then>
                                                <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="238,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="ImportRow">
                                                  <InvokeMethod.TargetObject>
                                                    <InArgument x:TypeArguments="sd:DataTable">[dtBaseSF]</InArgument>
                                                  </InvokeMethod.TargetObject>
                                                  <InArgument x:TypeArguments="sd:DataRow">[dtBase.Rows.Item(rowInt)]</InArgument>
                                                </InvokeMethod>
                                              </If.Then>
                                              <If.Else>
                                                <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[dtBaseSF.NewRow]" DataTable="[dtBaseSF]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                                              </If.Else>
                                            </If>
                                            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                              <ui:MultipleAssign.AssignOperations>
                                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:Object">[row("STT")]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:Object">[index]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                </scg:List>
                                              </ui:MultipleAssign.AssignOperations>
                                            </ui:MultipleAssign>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEachRow>
                                    <If Condition="[totalRows &gt; 1]" sap:VirtualizedContainerService.HintSize="604,584" sap2010:WorkflowViewState.IdRef="If_17">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,405" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;C6:L&quot; + (totalRows + 5).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_6" SheetName="[strSheetName]" SourceRange="C6:L6" />
                                          <ui:FilterDataTable DataTable="[dtCopy]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_13" OutputDataTable="[dtCopy]" SelectColumnsMode="Keep">
                                            <ui:FilterDataTable.Filters>
                                              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                              </scg:List>
                                            </ui:FilterDataTable.Filters>
                                            <ui:FilterDataTable.SelectColumns>
                                              <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                <InArgument x:TypeArguments="x:String">["STT"]</InArgument>
                                              </scg:List>
                                            </ui:FilterDataTable.SelectColumns>
                                          </ui:FilterDataTable>
                                          <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtCopy]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_15" SheetName="[strSheetName]" StartingCell="A6" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                    <ui:FilterDataTable DataTable="[dtBaseSF]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="604,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_14" OutputDataTable="[dtBaseSF]" SelectColumnsMode="Remove">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="16">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[6]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[7]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[8]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[9]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[10]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="604,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_16" SheetName="[strSheetName]" StartingCell="M6">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="drawBorderDefectRecord" EntryMethodParameters="[{strSheetName, &quot;A6:AY&quot; + (totalRows + 5).ToString}]" sap:VirtualizedContainerService.HintSize="604,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_11">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeVBA>
                                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dtBase]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="604,52" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" Range="[&quot;A6:AY&quot; + (totalRows + 5).ToString]" SheetName="[strSheetName]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelReadRange>
                                    <Sequence DisplayName="Sheet Defect PR" sap:VirtualizedContainerService.HintSize="604,68" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:FilterDataTable DataTable="[dtBase]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="617,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_15" OutputDataTable="[dtBaseSF]" SelectColumnsMode="Keep">
                                        <ui:FilterDataTable.Filters>
                                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                            <ui:FilterOperationArgument BooleanOperator="And" Operator="LT">
                                              <ui:FilterOperationArgument.Column>
                                                <InArgument x:TypeArguments="x:Int32">[6]</InArgument>
                                              </ui:FilterOperationArgument.Column>
                                              <ui:FilterOperationArgument.Operand>
                                                <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                              </ui:FilterOperationArgument.Operand>
                                            </ui:FilterOperationArgument>
                                          </scg:List>
                                        </ui:FilterDataTable.Filters>
                                        <ui:FilterDataTable.SelectColumns>
                                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                                            <x:Null />
                                          </scg:List>
                                        </ui:FilterDataTable.SelectColumns>
                                      </ui:FilterDataTable>
                                      <If Condition="[dtBaseSF.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="617,961" sap2010:WorkflowViewState.IdRef="If_18">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="472,814" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="430,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtBaseSF]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="430,368" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                                              <ui:ForEachRow.Body>
                                                <ActivityAction x:TypeArguments="sd:DataRow">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="380,221" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="338,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                                                      <ui:MultipleAssign.AssignOperations>
                                                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                                                            <ui:AssignOperation.To>
                                                              <OutArgument x:TypeArguments="x:Object">[row(0)]</OutArgument>
                                                            </ui:AssignOperation.To>
                                                            <ui:AssignOperation.Value>
                                                              <InArgument x:TypeArguments="x:Object">[index]</InArgument>
                                                            </ui:AssignOperation.Value>
                                                          </ui:AssignOperation>
                                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                                                            <ui:AssignOperation.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                                            </ui:AssignOperation.To>
                                                            <ui:AssignOperation.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                                            </ui:AssignOperation.Value>
                                                          </ui:AssignOperation>
                                                        </scg:List>
                                                      </ui:MultipleAssign.AssignOperations>
                                                    </ui:MultipleAssign>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEachRow.Body>
                                            </ui:ForEachRow>
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="430,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_17" SheetName="Defect PR" StartingCell="A4" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="drawBorderDefectRecord" EntryMethodParameters="[{&quot;Defect PR&quot;, &quot;A4:AY&quot; + (dtBaseSF.Rows.Count + 3).ToString}]" sap:VirtualizedContainerService.HintSize="430,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_12" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                    <Sequence DisplayName="Sheet Chart Defect (Kg)" sap:VirtualizedContainerService.HintSize="604,68" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:FilterDataTable DataTable="[dtBase]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="599,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_16" OutputDataTable="[dtBaseSF]" SelectColumnsMode="Keep">
                                        <ui:FilterDataTable.Filters>
                                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                            <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                          </scg:List>
                                        </ui:FilterDataTable.Filters>
                                        <ui:FilterDataTable.SelectColumns>
                                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                                            <InArgument x:TypeArguments="x:Int32">[9]</InArgument>
                                          </scg:List>
                                        </ui:FilterDataTable.SelectColumns>
                                      </ui:FilterDataTable>
                                      <ui:RemoveDuplicateRows DataTable="[dtBaseSF]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="599,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_3" OutputDataTable="[dtBaseSF]" />
                                      <If Condition="[dtBaseSF.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="599,1839" sap2010:WorkflowViewState.IdRef="If_20">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="563,1663" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[0]" DataTable="[dtBaseSF]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="SortDataTable_7" Order="Ascending" OutputDataTable="[dtBaseSF]" SortOrder="Ascending" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="521,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_18" SheetName="Chart Defect (Kg)" StartingCell="A2" />
                                            <If Condition="[dtBaseSF.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="521,453" sap2010:WorkflowViewState.IdRef="If_19">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;B2:G&quot; + (dtBaseSF.Rows.Count + 1).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_7" SheetName="Chart Defect (Kg)" SourceRange="B2:G2" />
                                                  <ui:ExcelWriteCell Cell="[&quot;H2:H&quot; + (dtBaseSF.Rows.Count + 1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Chart Defect (Kg)" Text="0.54%" />
                                                </Sequence>
                                              </If.Then>
                                            </If>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="drawBorderDefectRecord" EntryMethodParameters="[{&quot;Chart Defect (Kg)&quot;, &quot;A2:H&quot; + (dtBaseSF.Rows.Count + 1).ToString}]" sap:VirtualizedContainerService.HintSize="521,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_13" />
                                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="521,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" Range="[&quot;A2:H&quot; + (dtBaseSF.Rows.Count + 1).ToString]" SheetName="Chart Defect (Kg)" />
                                            <ui:FilterDataTable DataTable="[dtBaseSF]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="521,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_17" OutputDataTable="[dtCopy]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="8">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[7]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                            </ui:FilterDataTable>
                                            <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[3]" DataTable="[dtCopy]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="SortDataTable_8" Order="Decending" OutputDataTable="[dtCopy]" SortOrder="Descending" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtCopy]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="521,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_19" SheetName="Chart Defect (Kg)" StartingCell="U2" />
                                            <ui:FilterDataTable DataTable="[dtBaseSF]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="521,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_18" OutputDataTable="[dtCopy]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="8">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[6]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[7]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                            </ui:FilterDataTable>
                                            <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[3]" DataTable="[dtCopy]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="SortDataTable_9" Order="Decending" OutputDataTable="[dtCopy]" SortOrder="Descending" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtCopy]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="521,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_20" SheetName="Chart Defect (Kg)" StartingCell="AA2" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="SetChartDataDefectRecord" EntryMethodParameters="[{&quot;Chart Defect (Kg)&quot;, (dtBaseSF.Rows.Count + 1).ToString}]" sap:VirtualizedContainerService.HintSize="521,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_14" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                    <Sequence DisplayName="Sheet Re-Plating" sap:VirtualizedContainerService.HintSize="604,68" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:FilterDataTable DataTable="[dtBase]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="617,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_19" OutputDataTable="[dtBaseSF]" SelectColumnsMode="Keep">
                                        <ui:FilterDataTable.Filters>
                                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                              <ui:FilterOperationArgument.Column>
                                                <InArgument x:TypeArguments="x:Int32">[17]</InArgument>
                                              </ui:FilterOperationArgument.Column>
                                              <ui:FilterOperationArgument.Operand>
                                                <InArgument x:TypeArguments="x:String">["0"]</InArgument>
                                              </ui:FilterOperationArgument.Operand>
                                            </ui:FilterOperationArgument>
                                            <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
                                              <ui:FilterOperationArgument.Column>
                                                <InArgument x:TypeArguments="x:Int32">[17]</InArgument>
                                              </ui:FilterOperationArgument.Column>
                                              <ui:FilterOperationArgument.Operand>
                                                <InArgument x:TypeArguments="x:String">["#N/A"]</InArgument>
                                              </ui:FilterOperationArgument.Operand>
                                            </ui:FilterOperationArgument>
                                            <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
                                              <ui:FilterOperationArgument.Column>
                                                <InArgument x:TypeArguments="x:Int32">[17]</InArgument>
                                              </ui:FilterOperationArgument.Column>
                                            </ui:FilterOperationArgument>
                                          </scg:List>
                                        </ui:FilterDataTable.Filters>
                                        <ui:FilterDataTable.SelectColumns>
                                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                                            <x:Null />
                                          </scg:List>
                                        </ui:FilterDataTable.SelectColumns>
                                      </ui:FilterDataTable>
                                      <If Condition="[dtBaseSF.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="617,961" sap2010:WorkflowViewState.IdRef="If_21">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="472,814" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="430,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtBaseSF]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="430,368" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                                              <ui:ForEachRow.Body>
                                                <ActivityAction x:TypeArguments="sd:DataRow">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="380,221" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="338,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                                                      <ui:MultipleAssign.AssignOperations>
                                                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                                                            <ui:AssignOperation.To>
                                                              <OutArgument x:TypeArguments="x:Object">[row(0)]</OutArgument>
                                                            </ui:AssignOperation.To>
                                                            <ui:AssignOperation.Value>
                                                              <InArgument x:TypeArguments="x:Object">[index]</InArgument>
                                                            </ui:AssignOperation.Value>
                                                          </ui:AssignOperation>
                                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                                                            <ui:AssignOperation.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                                            </ui:AssignOperation.To>
                                                            <ui:AssignOperation.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                                            </ui:AssignOperation.Value>
                                                          </ui:AssignOperation>
                                                        </scg:List>
                                                      </ui:MultipleAssign.AssignOperations>
                                                    </ui:MultipleAssign>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEachRow.Body>
                                            </ui:ForEachRow>
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="430,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_21" SheetName="Re-Plating" StartingCell="A4" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="drawBorderDefectRecord" EntryMethodParameters="[{&quot;Re-Plating&quot;, &quot;A4:AY&quot; + (dtBaseSF.Rows.Count + 3).ToString}]" sap:VirtualizedContainerService.HintSize="430,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_15" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                    <Sequence DisplayName="Sheet Chart Re-Plating (Kg)" sap:VirtualizedContainerService.HintSize="604,2127" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:FilterDataTable DataTable="[dtBaseSF]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_20" OutputDataTable="[dtBaseSF]" SelectColumnsMode="Keep">
                                        <ui:FilterDataTable.Filters>
                                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                            <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                          </scg:List>
                                        </ui:FilterDataTable.Filters>
                                        <ui:FilterDataTable.SelectColumns>
                                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                                            <InArgument x:TypeArguments="x:Int32">[9]</InArgument>
                                          </scg:List>
                                        </ui:FilterDataTable.SelectColumns>
                                      </ui:FilterDataTable>
                                      <ui:RemoveDuplicateRows DataTable="[dtBaseSF]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_4" OutputDataTable="[dtBaseSF]" />
                                      <If Condition="[dtBaseSF.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="562,1874" sap2010:WorkflowViewState.IdRef="If_23">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="526,1695" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[0]" DataTable="[dtBaseSF]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="SortDataTable_10" Order="Ascending" OutputDataTable="[dtBaseSF]" SortOrder="Ascending" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_22" SheetName="Chart Re-Plating (Kg)" StartingCell="A2" />
                                            <If Condition="[dtBaseSF.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="484,485" sap2010:WorkflowViewState.IdRef="If_22">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[&quot;B2:G&quot; + (dtBaseSF.Rows.Count + 1).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_8" SheetName="Chart Re-Plating (Kg)" SourceRange="B2:G2" />
                                                  <ui:ExcelWriteCell Cell="[&quot;H2:H&quot; + (dtBaseSF.Rows.Count + 1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Chart Re-Plating (Kg)" Text="0.54%" />
                                                </Sequence>
                                              </If.Then>
                                            </If>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="drawBorderDefectRecord" EntryMethodParameters="[{&quot;Chart Re-Plating (Kg)&quot;, &quot;A2:H&quot; + (dtBaseSF.Rows.Count + 1).ToString}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_16" />
                                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtBaseSF]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" Range="[&quot;A2:H&quot; + (dtBaseSF.Rows.Count + 1).ToString]" SheetName="Chart Re-Plating (Kg)" />
                                            <ui:FilterDataTable DataTable="[dtBaseSF]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_21" OutputDataTable="[dtCopy]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="8">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[7]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                            </ui:FilterDataTable>
                                            <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[3]" DataTable="[dtCopy]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="SortDataTable_11" Order="Decending" OutputDataTable="[dtCopy]" SortOrder="Descending" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtCopy]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_23" SheetName="Chart Re-Plating (Kg)" StartingCell="U2" />
                                            <ui:FilterDataTable DataTable="[dtBaseSF]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_22" OutputDataTable="[dtCopy]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="8">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[6]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[7]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                            </ui:FilterDataTable>
                                            <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" ColumnIndex="[3]" DataTable="[dtCopy]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="SortDataTable_12" Order="Decending" OutputDataTable="[dtCopy]" SortOrder="Descending" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtCopy]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_24" SheetName="Chart Re-Plating (Kg)" StartingCell="AA2" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA.txt" DisplayName="Invoke VBA" EntryMethodName="SetChartDataDefectRecord" EntryMethodParameters="[{&quot;Chart Re-Plating (Kg)&quot;, (dtBaseSF.Rows.Count + 1).ToString}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_17" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </Sequence>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="680,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[wb]" />
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">80,687</av:Point>
                          <av:Size x:Key="ShapeSize">200,68</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Send Mail" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_32">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">["[RPA] SUCCESSFUL: " + "DEFECT RECORD " + monthReport.ToString("MM/yyyy")]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="mail_Content" xml:space="preserve">["&lt;p&gt;Dear Tuyen&lt;/p&gt;" +
"&lt;p&gt;Robot has ended successfully&lt;/p&gt;" +
"&lt;p&gt;Please refer attach file Or path: "+pathDefectRecordTarget+"&lt;/p&gt;"]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">DEFECT RECORD</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="mail_CC" />
                            <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">[{pathDefectRecordTarget}]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowStep x:Name="__ReferenceID5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">360,467</av:Point>
                  <av:Size x:Key="ShapeSize">200,68</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Send mail not found file" sap:VirtualizedContainerService.HintSize="421,205" sap2010:WorkflowViewState.IdRef="Sequence_72">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;[RPA] ERROR: &quot; + &quot;DEFECT RECORD &quot; + monthReport.ToString(&quot;MM/yyyy&quot;)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="mail_Content">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;&lt;p&gt;Dear Tuyen&lt;/p&gt;&quot; +&#xD;&#xA;&quot;&lt;p&gt;Robot not found this file: &quot;+ pathDefectRecordSource +&quot;&lt;/p&gt;&quot; +&#xD;&#xA;&quot;&lt;p&gt;Please check &amp; announce for RPA Team to enable Robot.&lt;/p&gt;&quot;+&#xD;&#xA;&quot;&lt;p&gt;Thanks !&lt;/p&gt;&quot;" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">
                      <Literal x:TypeArguments="x:String">nampt@ykk.com</Literal>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                    <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">
                      <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{}" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </FlowStep>
          </FlowDecision.False>
        </FlowDecision>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">186.5,121.04</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">286.5,189.04 286.5,231.04</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Setting SQL" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT * FROM RPALIB.LIBRARY_NT WHERE Name IN ('dirDownFile','PIC','ServerTemp','ServerSavedFile') ORDER BY UPPER(NAME) ASC</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_library]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Lấy tài khoản Mail" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT * FROM RPALIB.LIBRARY_NT WHERE Name IN ('MailAddress_Outlook','MailPassword_Outlook','MailServer') ORDER BY UPPER(NAME) ASC</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_Server]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,284" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Server]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(2)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Email]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(0)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Password]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(1)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_downloads]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(0)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_PIC]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(1)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_template]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(3)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_Folder]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(2)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID0</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
  </Flowchart>
</Activity>