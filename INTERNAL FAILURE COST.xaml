<Activity mc:Ignorable="sap sap2010" x:Class="INTERNAL_FAILURE_COST" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:bew="clr-namespace:BalaReva.Excel.WorkBook;assembly=BalaReva.Excel" xmlns:ee="clr-namespace:ExcelCustomActivities.Excel;assembly=ExcelCustomActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Order_Number" Type="InOutArgument(x:String)" />
    <x:Property Name="EndMessage" Type="InOutArgument(x:String)" />
    <x:Property Name="EndStatus" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1141,1137</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>INTERNAL_FAILURE_COST_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="41">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>BalaReva.Excel.WorkBook</x:String>
      <x:String>BalaReva.Excel.Base</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>ExcelCustomActivities.Excel</x:String>
      <x:String>BalaReva.EasyExcel.Sheets</x:String>
      <x:String>BalaReva.EasyExcel.Base</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Base</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>ExcelCustomActivities</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart DisplayName="INTERNAL_FAILURE_COST" sap:VirtualizedContainerService.HintSize="784,1072" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wb" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Gán lấy năm hiện tại &quot;yyyy&quot;" Name="currentYear" />
      <Variable x:TypeArguments="x:String" Name="Path_downloads" />
      <Variable x:TypeArguments="x:String" Name="Path_template" />
      <Variable x:TypeArguments="x:String" Name="Mail_Password" />
      <Variable x:TypeArguments="x:String" Name="Mail_PIC" />
      <Variable x:TypeArguments="x:String" Name="Mail_Email" />
      <Variable x:TypeArguments="x:String" Name="Mail_Server" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_library" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Server" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu dữ liệu get từ SQL vào datatable" Name="dt_SQL" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Vị trí ô hiện tại 1" Name="stLastCell" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Vị trí ô hiện tại 2" Name="stLastCell2" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet Total file Dyed vào bảng 1" Name="dtDyedTotal1" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Đếm vị trí hàng hiện tại và xuống dòng sau khi đã ghi dữ liệu" Name="countColumn" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu dữ liệu từ cột A-AC từ file excel SQL vào datatable" Name="dt_AC_Column" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu dữ liệu từ cột AH-AI từ file excel SQL vào datatable" Name="dt_AI_Column" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu dữ liệu cột AK từ file excel SQL vào datatable" Name="dt_AK_Column" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet Total file MPV vào bảng 1" Name="dtMPVTotal1" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet Total file Slider vào bảng 1" Name="dtSliderTotal1" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet Total file Dyed vào bảng 2" Name="dtDyedTotal2" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet Total file MPV vào bảng 2" Name="dtMPVTotal2" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet Total file Slider vào bảng 2" Name="dtSliderTotal2" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet yyP Target file Dyed vào bảng" Name="dtDyedTarget" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet yyP Target file MPV vào bảng" Name="dtMPVTarget" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet yyP Target file Slider vào bảng 1" Name="dtSliderTarget1" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet yyP Target file Slider vào bảng 2" Name="dtSliderTarget2" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet yyP Target file Slider vào bảng 3" Name="dtSliderTarget3" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Lưu data cần lưu ở Sheet yyP Target file Slider vào bảng 4" Name="dtSliderTarget4" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Kiểm tra dữ liệu rút về đã có hay trống" Name="checkDataExist" />
      <Variable x:TypeArguments="ui:GenericValue" Name="valueDate" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtDatatable" />
      <Variable x:TypeArguments="x:String" Name="pathFolder" />
      <Variable x:TypeArguments="x:String" Name="stLastCol" />
      <Variable x:TypeArguments="x:String" Name="stNextCol" />
      <Variable x:TypeArguments="x:String" Name="stFirstCol" />
      <Variable x:TypeArguments="x:Int32" Name="countMonth" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtDays" />
      <Variable x:TypeArguments="x:String" Name="sheetName" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtNewLine" />
      <Variable x:TypeArguments="s:String[]" Default="[{&quot;H&quot;,&quot;I&quot;,&quot;J&quot;,&quot;K&quot;,&quot;L&quot;,&quot;M&quot;,&quot;N&quot;,&quot;O&quot;,&quot;P&quot;,&quot;Q&quot;,&quot;R&quot;,&quot;S&quot;}]" Name="arrColumn" />
      <Variable x:TypeArguments="s:String[]" Default="[{&quot;APR&quot;,&quot;MAY&quot;,&quot;JUN&quot;,&quot;JUL&quot;,&quot;AUG&quot;,&quot;SEP&quot;,&quot;OCT&quot;,&quot;NOV&quot;,&quot;DEC&quot;,&quot;JAN&quot;,&quot;FEB&quot;,&quot;MAR&quot;}]" Name="arrMonth" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtCheckLine1" />
      <Variable x:TypeArguments="x:Int32" Name="indexProCost" />
      <Variable x:TypeArguments="x:Int32" Name="indexLineLossCost" />
      <Variable x:TypeArguments="x:Int32" Name="indexProLostCost" />
      <Variable x:TypeArguments="x:Int32" Name="indexStructureLossCost" />
      <Variable x:TypeArguments="x:Int32" Name="indexSheetLine" />
      <Variable x:TypeArguments="x:Int32" Name="indexSheet1" />
      <Variable x:TypeArguments="x:Boolean" Name="checkLine1" />
      <Variable x:TypeArguments="x:String" Name="stLine1" />
      <Variable x:TypeArguments="x:Int32" Name="countRow" />
      <Variable x:TypeArguments="ui:GenericValue" Name="indexValue" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtFilter" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">330,12.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">360,87.5 360,127.5</av:PointCollection>
        <x:Double x:Key="Width">750.37025996239515</x:Double>
        <x:Double x:Key="Height">1036.058108934312</x:Double>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID7</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">80,506</av:Point>
          <av:Size x:Key="ShapeSize">200,97</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">180,603 180,644</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Lưu dữ liệu đã rút vào Excel" DisplayName="Save Data Into Excel" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,1142" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;data_&quot;  + DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;) + &quot;.xlsx&quot;]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="382,1033" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA1" EntryMethodName="Convert_Column" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_SQL]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[wb.GetSheets(0)]" StartingCell="A1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelWriteRange>
                <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity1" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_4" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wb.GetSheets(0)]" WorkBook="[wb]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ee:MoveVerticalActivity>
                <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="AK1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity2" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_5" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[wb.GetSheets(0)]" WorkBook="[wb]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ee:MoveVerticalActivity>
                <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_AC_Column]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" Range="[&quot;A1:AC&quot; + stLastCell2.Substring(2)]" SheetName="[wb.GetSheets(0)]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadRange>
                <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_AI_Column]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" Range="[&quot;AH1:AI&quot; + stLastCell2.Substring(2)]" SheetName="[wb.GetSheets(0)]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadRange>
                <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_AK_Column]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" Range="[&quot;AK1:AK&quot; + stLastCell2.Substring(2)]" SheetName="[wb.GetSheets(0)]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadRange>
                <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_9" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
        <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[wb]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelCloseWorkbook>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">80,644</av:Point>
              <av:Size x:Key="ShapeSize">200,108</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">180,752 180,802</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Xử lí các file Dyed Material, MPV, SLIDER, TOTAL" DisplayName="Process" sap:VirtualizedContainerService.HintSize="242,653" sap2010:WorkflowViewState.IdRef="Sequence_21">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="Xử lí dữ liệu file DYED MATERIAL" DisplayName="File DYED MATERIAL" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap2010:Annotation.AnnotationText="Nếu tháng hiện tại = 5 thì copy file hiện có thành file mới và xử lí dữ liệu." Condition="[DateTime.Now.Month = 5]" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="If_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Dyed Material" sap:VirtualizedContainerService.HintSize="554,2052" sap2010:WorkflowViewState.IdRef="Sequence_253">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_DYED MATERIAL.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="512,157" sap2010:WorkflowViewState.IdRef="CopyFile_16" Overwrite="True" Path="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.AddYears(-1).ToString(&quot;yyyy&quot;) + &quot;_DYED MATERIAL.xlsx&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CopyFile>
                    <bew:RenameSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Rename Work Sheet" FilePath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_DYED MATERIAL.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="512,70" sap2010:WorkflowViewState.IdRef="RenameSheet_17" NewSheetName="[DateTime.Now.ToString(&quot;yy&quot;) + &quot;P Target&quot;]" SheetName="[DateTime.Now.AddYears(-1).ToString(&quot;yy&quot;) + &quot;P Target&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </bew:RenameSheet>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="512,1653" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_25" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_DYED MATERIAL.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="478,1544" sap2010:WorkflowViewState.IdRef="Sequence_252">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:CommentOut sap2010:Annotation.AnnotationText="CHẠY VÀO THÁNG 5/2023 THÌ UNCOMMENT CÁI NÀY" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,288" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_336">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA2" EntryMethodName="DeleteData" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_11">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeVBA>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <Sequence sap2010:Annotation.AnnotationText="Ghi dữ liệu đã rút vào sheet PASTE" DisplayName="Sheet PASTE" sap:VirtualizedContainerService.HintSize="436,108" sap2010:WorkflowViewState.IdRef="Sequence_333">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">PASTE</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA3" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity3" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_64" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(stLastCell.Substring(1)) + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AC_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_129" SheetName="[sheetName]" StartingCell="[&quot;A&quot; + countColumn.ToString +&quot;:AC&quot; + countColumn.ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AI_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_130" SheetName="[sheetName]" StartingCell="[&quot;AH&quot; + countColumn.ToString + &quot;:AI&quot; + countColumn.ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AK_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_131" SheetName="[sheetName]" StartingCell="[&quot;AK&quot; + countColumn.ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity4" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_70" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range1" FillRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_1" SheetName="[sheetName]" SourceRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell.Substring(1)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelAutoFillRange>
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range2" FillRange="[&quot;AJ&quot; + stLastCell.Substring(1) + &quot;:AJ&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_2" SheetName="[sheetName]" SourceRange="[&quot;AJ&quot; + stLastCell.Substring(1)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelAutoFillRange>
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range3" FillRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_3" SheetName="[sheetName]" SourceRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell.Substring(1)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelAutoFillRange>
                              <Sequence sap2010:Annotation.AnnotationText="Paste dữ liệu overwrite xóa công thức" DisplayName="Paste Overwrite Data" sap:VirtualizedContainerService.HintSize="340,112" sap2010:WorkflowViewState.IdRef="Sequence_353">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_95" Range="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]" SheetName="[sheetName]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelReadRange>
                                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_149" SheetName="[sheetName]" StartingCell="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelWriteRange>
                              </Sequence>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_162" Range="[&quot;AN5:AN&quot; + stLastCell2.Substring(1)]" SheetName="[sheetName]" />
                              <ui:RemoveDuplicateRows DataTable="[dtNewLine]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_1" OutputDataTable="[dtNewLine]" />
                            </Sequence>
                            <Sequence DisplayName="Add New Line No (If have)" sap:VirtualizedContainerService.HintSize="773,2356" sap2010:WorkflowViewState.IdRef="Sequence_641">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_185">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">new line</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA4" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_50">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="731,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_11" Range="A4:M1048576" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_261" SheetName="[sheetName]" StartingCell="C3" />
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity5" sap:VirtualizedContainerService.HintSize="731,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_115" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range4" FillRange="[&quot;A3:B&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_221" SheetName="[sheetName]" SourceRange="A3:B3" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range5" FillRange="[&quot;D3:M&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_222" SheetName="[sheetName]" SourceRange="D3:M3" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="731,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_185" Range="[&quot;A3:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep các giá trị = N/A tại cột M (Check line1)" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_29" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[12]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="731,719" sap2010:WorkflowViewState.IdRef="If_109">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="695,532" sap2010:WorkflowViewState.IdRef="Sequence_627">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột A (Line 1) keep các giá trị &lt;&gt; 181,311,542" DataTable="[dtCheckLine1]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="653,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_30" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["181"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["311"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["542"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_108">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_625">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_186">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_626">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_187">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_628">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột F &lt;&gt; N/A và cột E = N/A" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_31" OutputDataTable="[dtNewLine]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_188">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countRow]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[dtNewLine.Rows.Count]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="Add new line no (If have)" Condition="[countRow &gt; 0]" sap:VirtualizedContainerService.HintSize="640,2977" sap2010:WorkflowViewState.IdRef="If_111">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="604,2759" sap2010:WorkflowViewState.IdRef="Sequence_639">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="562,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_12" Range="[&quot;A4:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_262" SheetName="[sheetName]" StartingCell="C3" />
                                    <If Condition="[dtNewLine.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="562,493" sap2010:WorkflowViewState.IdRef="If_150">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_782">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range6" FillRange="[&quot;A3:B&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_223" SheetName="[sheetName]" SourceRange="A3:B3" />
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range7" FillRange="[&quot;D3:M&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_224" SheetName="[sheetName]" SourceRange="D3:M3" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_783">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity1" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_37" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity2" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_38" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_189">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile Condition="[countRow &gt; 0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,1305" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_5">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1140" sap2010:WorkflowViewState.IdRef="Sequence_638">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_186" Range="[&quot;A&quot; + index.ToString + &quot;:H&quot; + index.ToString]" SheetName="new line" />
                                          <If Condition="[String.IsNullOrEmpty(dtNewLine.Rows(0)(6).ToString.Trim) Or String.IsNullOrEmpty(dtNewLine.Rows(0)(7).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="484,300" sap2010:WorkflowViewState.IdRef="If_141">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_763">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_14" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_764">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_14">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_72">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheetLine]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(6).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_73">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheet1]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(7).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                          <Sequence DisplayName="Dyed Line" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_629">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_190">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Dyed line</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows1" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_65" Mode="Add" NoRows="1" Position="[(indexSheetLine + 1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA5" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheetLine +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_51" />
                                            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep value at column Line1, Line2, Line no, Line name" DataTable="[dtNewLine]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_32" OutputDataTable="[dtFilter]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:FilterDataTable>
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_263" SheetName="[sheetName]" StartingCell="[&quot;B&quot; + (indexSheetLine +1).ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="Sheet1" sap:VirtualizedContainerService.HintSize="376,1012" sap2010:WorkflowViewState.IdRef="Sequence_630">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_191">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows2" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_66" Mode="Add" NoRows="1" Position="[(indexSheet1 +1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA6" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheet1 +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_52" />
                                            <ui:ExcelWriteCell Cell="[&quot;C&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2139" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(2).ToString.Trim]" />
                                            <ui:ExcelWriteCell Cell="[&quot;D&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2140" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(3).ToString.Trim]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range8" FillRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_225" SheetName="[sheetName]" SourceRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + indexSheet1.ToString]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range9" FillRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_226" SheetName="[sheetName]" SourceRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + indexSheet1.ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="DB" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_635">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_192">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">DB</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Sequence DisplayName="Pro Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_631">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_193">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;I&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_21" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_194">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows3" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_67" Mode="Add" NoRows="1" Position="[(indexProCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range10" FillRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_227" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range11" FillRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_228" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range12" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_229" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Line Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_632">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_195">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;J&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_22" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_196">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexLineLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows4" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_68" Mode="Add" NoRows="1" Position="[(indexLineLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range13" FillRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_230" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range14" FillRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_231" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range15" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_232" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Pro Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_633">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_197">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;K&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_23" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_198">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProLostCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows5" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_69" Mode="Add" NoRows="1" Position="[(indexProLostCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range16" FillRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_233" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range17" FillRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_234" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range18" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_235" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Structure Loss Cost" sap:VirtualizedContainerService.HintSize="376,957" sap2010:WorkflowViewState.IdRef="Sequence_634">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_199">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;L&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_24" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_200">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexStructureLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows6" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_70" Mode="Add" NoRows="1" Position="[(indexStructureLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range19" FillRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_236" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range20" FillRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_237" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range21" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_238" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString]" />
                                            </Sequence>
                                          </Sequence>
                                          <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_40" />
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_201">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                    </ui:InterruptibleWhile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_640">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                            <Sequence DisplayName="Sheet DB" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_240">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">DB</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity3" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_1" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveHorizontalActivity>
                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tiếp theo bên phải để paste dữ liệu" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stNextCol]" DisplayName="Move horizontal activity4" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_2" MoveCount="1" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveHorizontalActivity>
                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity5" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_3" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveHorizontalActivity>
                              <ui:ExcelCopyPasteRange DestinationCell="[stNextCol.Substring(0, stNextCol.Length - 1) + &quot;1&quot;]" DestinationSheet="[sheetName]" DisplayName="Copy Range" sap:VirtualizedContainerService.HintSize="340,238" sap2010:WorkflowViewState.IdRef="ExcelCopyPasteRange_1" SheetName="[sheetName]" SourceRange="[stFirstCol.Substring(0, stFirstCol.Length - 1) + &quot;1:&quot; + stLastCol.Substring(0, stLastCol.Length - 1) + &quot;704&quot;]" />
                              <Delay Duration="[TimeSpan.FromMilliseconds(200)]" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Delay_25" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_106" Range="[&quot;F6:&quot; + stLastCol.Substring(0, stLastCol.Length - 1) + &quot;704&quot;]" SheetName="[sheetName]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_160" SheetName="[sheetName]" StartingCell="[&quot;F6:&quot; + stLastCol.Substring(0, stLastCol.Length - 1) + &quot;704&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteCell Cell="[stNextCol]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1512" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countMonth]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Sửa lại năm các cột dữ liệu mới paste" Condition="[countColumn &lt; 12]" DisplayName="While" sap:VirtualizedContainerService.HintSize="340,93" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                                <ui:InterruptibleWhile.Body>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1308" sap2010:WorkflowViewState.IdRef="Sequence_361">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tiếp theo" BaseCell="[stNextCol]" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move horizontal activity6" sap:VirtualizedContainerService.HintSize="484,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_4" MoveCount="[countColumn]" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ui:ExcelWriteCell Cell="[stLastCell]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1997" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(countMonth).ToString(&quot;yyyyMM&quot;)]" />
                                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[countMonth]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[countMonth + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[countColumn + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[countColumn = 12]" sap:VirtualizedContainerService.HintSize="484,642" sap2010:WorkflowViewState.IdRef="If_36">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="382,456" sap2010:WorkflowViewState.IdRef="Sequence_362">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity7" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_6" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ee:MoveHorizontalActivity>
                                          <ui:ExcelWriteCell Cell="[stLastCol]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1998" SheetName="[sheetName]" Text="[DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;total&quot;]" />
                                          <ui:Break sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ui:InterruptibleWhile.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InterruptibleWhile>
                            </Sequence>
                            <ui:ExcelWriteCell Cell="C2" DisplayName="Sheet Year" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1525" SheetName="YEAR" Text="[currentYear.ToString]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelWriteCell>
                            <Sequence DisplayName="Sheet Graph" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_245">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Graph</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="875,1042" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[arrColumn]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="839,909" sap2010:WorkflowViewState.IdRef="Sequence_424">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[column.ToString = &quot;Q&quot; Or column.ToString = &quot;R&quot; Or column.ToString = &quot;S&quot;]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_67">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_425">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2008" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2009" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2010" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2011" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_426">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1526" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2012" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2013" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2014" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                            <Sequence DisplayName="Sheet TOTAL" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_250">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">TOTAL</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="875,1042" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[arrColumn]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="839,909" sap2010:WorkflowViewState.IdRef="Sequence_429">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[column.ToString = &quot;Q&quot; Or column.ToString = &quot;R&quot; Or column.ToString = &quot;S&quot;]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_68">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_427">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2015" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2016" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2017" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2018" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_428">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2019" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2020" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2021" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2022" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                            <Sequence DisplayName="Sheet yyP Target" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_251">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("yy") + "P Target"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelWriteCell Cell="E3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1622" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(-1).ToString(&quot;yyyy&quot;)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteCell Cell="H3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1623" SheetName="[sheetName]" Text="[currentYear + &quot;P&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteCell Cell="K3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1624" SheetName="[sheetName]" Text="[currentYear + &quot;A&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDyedTarget]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_74" Range="E5:M15" SheetName="[sheetName]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadRange>
                            </Sequence>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDyedTotal1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_72" Range="C40:E45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDyedTotal2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_73" Range="H40:S45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="436,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_18" />
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_20" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
              </If>
              <If sap2010:Annotation.AnnotationText="Tháng hiện tại &gt; 5 thì xử lí file có năm bằng năm hiện tại" Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="If_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="831,1019" sap2010:WorkflowViewState.IdRef="Sequence_298">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="789,927" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_28" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_DYED MATERIAL.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="755,818" sap2010:WorkflowViewState.IdRef="Sequence_297">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Sheet PASTE" sap:VirtualizedContainerService.HintSize="713,66" sap2010:WorkflowViewState.IdRef="Sequence_430">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">PASTE</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA7" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="527,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_15">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity6" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_46" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(stLastCell.Substring(1)) + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelReadCell Cell="[&quot;B&quot; + stLastCell.Substring(1)]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="[sheetName]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </ui:ExcelReadCell.Result>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadCell>
                              <If sap2010:Annotation.AnnotationText="Kiểm tra nếu đã paste dữ liệu ở lần chạy trước nhưng lỗi ở bước sau thì không paste lại" Condition="[valueDate.ToString.Trim.Equals(DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="527,1335" sap2010:WorkflowViewState.IdRef="If_28">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="382,1146" sap2010:WorkflowViewState.IdRef="Sequence_324">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AC_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_90" SheetName="[sheetName]" StartingCell="[&quot;A&quot; + countColumn.ToString +&quot;:AC&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AI_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_91" SheetName="[sheetName]" StartingCell="[&quot;AH&quot; + countColumn.ToString + &quot;:AI&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AK_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_92" SheetName="[sheetName]" StartingCell="[&quot;AK&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity7" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_71" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveVerticalActivity>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range22" FillRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_4" SheetName="[sheetName]" SourceRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range23" FillRange="[&quot;AJ&quot; + stLastCell.Substring(1) + &quot;:AJ&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_5" SheetName="[sheetName]" SourceRange="[&quot;AJ&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range24" FillRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_6" SheetName="[sheetName]" SourceRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <Sequence sap2010:Annotation.AnnotationText="Paste dữ liệu overwrite xóa công thức" DisplayName="Paste Overwrite Data" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="Sequence_342">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_84" Range="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]" SheetName="[sheetName]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadRange>
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_138" SheetName="[sheetName]" StartingCell="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelWriteRange>
                                    </Sequence>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity8" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_101" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_168" Range="[&quot;AN5:AN&quot; + stLastCell2.Substring(1)]" SheetName="[sheetName]" />
                              <ui:RemoveDuplicateRows DataTable="[dtNewLine]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="527,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_2" OutputDataTable="[dtNewLine]" />
                            </Sequence>
                            <Sequence DisplayName="Add New Line No (If have)" sap:VirtualizedContainerService.HintSize="773,2356" sap2010:WorkflowViewState.IdRef="Sequence_658">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_202">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">new line</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA8" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_53">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="731,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_13" Range="A4:M1048576" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_264" SheetName="[sheetName]" StartingCell="C3" />
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity9" sap:VirtualizedContainerService.HintSize="731,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_116" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range25" FillRange="[&quot;A3:B&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_239" SheetName="[sheetName]" SourceRange="A3:B3" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range26" FillRange="[&quot;D3:M&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_240" SheetName="[sheetName]" SourceRange="D3:M3" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="731,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_187" Range="[&quot;A3:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep các giá trị = N/A tại cột M (Check line1)" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_33" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[12]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="731,719" sap2010:WorkflowViewState.IdRef="If_113">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="695,532" sap2010:WorkflowViewState.IdRef="Sequence_644">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột A (Line 1) keep các giá trị &lt;&gt; 181,311,542" DataTable="[dtCheckLine1]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="653,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_34" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["181"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["311"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["542"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_112">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_642">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_203">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_643">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_204">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_645">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột F &lt;&gt; N/A và cột E = N/A" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_35" OutputDataTable="[dtNewLine]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_205">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countRow]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[dtNewLine.Rows.Count]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="Add new line no (If have)" Condition="[countRow &gt; 0]" sap:VirtualizedContainerService.HintSize="640,3017" sap2010:WorkflowViewState.IdRef="If_115">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="604,2799" sap2010:WorkflowViewState.IdRef="Sequence_656">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="562,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_14" Range="[&quot;A4:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_265" SheetName="[sheetName]" StartingCell="C3" />
                                    <If Condition="[dtNewLine.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="562,493" sap2010:WorkflowViewState.IdRef="If_151">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_784">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range27" FillRange="[&quot;A3:B&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_241" SheetName="[sheetName]" SourceRange="A3:B3" />
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range28" FillRange="[&quot;D3:M&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_242" SheetName="[sheetName]" SourceRange="D3:M3" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_785">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity8" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_39" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity9" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_40" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_206">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile Condition="[countRow &gt; 0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,1345" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_6">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1140" sap2010:WorkflowViewState.IdRef="Sequence_655">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_188" Range="[&quot;A&quot; + index.ToString + &quot;:H&quot; + index.ToString]" SheetName="new line" />
                                          <If Condition="[String.IsNullOrEmpty(dtNewLine.Rows(0)(6).ToString.Trim) Or String.IsNullOrEmpty(dtNewLine.Rows(0)(7).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="484,300" sap2010:WorkflowViewState.IdRef="If_142">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_765">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_15" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_766">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_15">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_74">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheetLine]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(6).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_75">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheet1]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(7).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                          <Sequence DisplayName="Dyed Line" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_646">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_207">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Dyed line</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows7" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_71" Mode="Add" NoRows="1" Position="[(indexSheetLine + 1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA9" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheetLine +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_54" />
                                            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep value at column Line1, Line2, Line no, Line name" DataTable="[dtNewLine]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_36" OutputDataTable="[dtFilter]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:FilterDataTable>
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_266" SheetName="[sheetName]" StartingCell="[&quot;B&quot; + (indexSheetLine +1).ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="Sheet1" sap:VirtualizedContainerService.HintSize="376,1012" sap2010:WorkflowViewState.IdRef="Sequence_647">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_208">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows8" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_72" Mode="Add" NoRows="1" Position="[(indexSheet1 +1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA10" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheet1 +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_55" />
                                            <ui:ExcelWriteCell Cell="[&quot;C&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2141" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(2).ToString.Trim]" />
                                            <ui:ExcelWriteCell Cell="[&quot;D&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2142" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(3).ToString.Trim]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range29" FillRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_243" SheetName="[sheetName]" SourceRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + indexSheet1.ToString]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range30" FillRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_244" SheetName="[sheetName]" SourceRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + indexSheet1.ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="DB" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_652">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_209">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">DB</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Sequence DisplayName="Pro Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_648">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_210">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;I&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_25" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_211">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows9" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_73" Mode="Add" NoRows="1" Position="[(indexProCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range31" FillRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_245" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range32" FillRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_246" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range33" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_247" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Line Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_649">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_212">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;J&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_26" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_213">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexLineLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows10" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_74" Mode="Add" NoRows="1" Position="[(indexLineLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range34" FillRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_248" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range35" FillRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_249" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range36" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_250" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Pro Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_650">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_214">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;K&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_27" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_215">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProLostCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows11" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_75" Mode="Add" NoRows="1" Position="[(indexProLostCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range37" FillRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_251" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range38" FillRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_252" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range39" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_253" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Structure Loss Cost" sap:VirtualizedContainerService.HintSize="376,957" sap2010:WorkflowViewState.IdRef="Sequence_651">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_216">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;L&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_28" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_217">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexStructureLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows12" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_76" Mode="Add" NoRows="1" Position="[(indexStructureLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range40" FillRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_254" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range41" FillRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_255" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range42" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_256" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString]" />
                                            </Sequence>
                                          </Sequence>
                                          <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_41" />
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_218">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                    </ui:InterruptibleWhile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_657">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDyedTotal1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_36" Range="C40:E45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDyedTotal2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_37" Range="H40:S45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <If Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="713,217" sap2010:WorkflowViewState.IdRef="If_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDyedTarget]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_38" Range="E5:M15" SheetName="[DateTime.Now.ToString(&quot;yy&quot;) + &quot;P Target&quot;]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelReadRange>
                              </If.Then>
                              <If.Else>
                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDyedTarget]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_39" Range="E5:M15" SheetName="[DateTime.Now.AddYears(-1).ToString(&quot;yy&quot;) + &quot;P Target&quot;]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelReadRange>
                              </If.Else>
                            </If>
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_23" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_300">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <If sap2010:Annotation.AnnotationText="Tháng hiện tại &lt; 5 thì xử lí file với năm hiện tại -1" Condition="[DateTime.Now.Month &lt; 5]" sap:VirtualizedContainerService.HintSize="867,1237" sap2010:WorkflowViewState.IdRef="If_43">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="831,1019" sap2010:WorkflowViewState.IdRef="Sequence_374">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="789,927" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_36" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.AddYears(-1).ToString(&quot;yyyy&quot;) + &quot;_DYED MATERIAL.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="755,818" sap2010:WorkflowViewState.IdRef="Sequence_378">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Sheet PASTE" sap:VirtualizedContainerService.HintSize="713,66" sap2010:WorkflowViewState.IdRef="Sequence_431">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">PASTE</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA11" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="527,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_23">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity10" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_79" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(stLastCell.Substring(1)) + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelReadCell Cell="[&quot;B&quot; + stLastCell.Substring(1)]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_10" SheetName="[sheetName]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </ui:ExcelReadCell.Result>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadCell>
                              <If sap2010:Annotation.AnnotationText="Kiểm tra nếu đã paste dữ liệu ở lần chạy trước nhưng lỗi ở bước sau thì không paste lại" Condition="[valueDate.ToString.Trim.Equals(DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="527,1335" sap2010:WorkflowViewState.IdRef="If_44">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="382,1146" sap2010:WorkflowViewState.IdRef="Sequence_377">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AC_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_163" SheetName="[sheetName]" StartingCell="[&quot;A&quot; + countColumn.ToString +&quot;:AC&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AI_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_164" SheetName="[sheetName]" StartingCell="[&quot;AH&quot; + countColumn.ToString + &quot;:AI&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AK_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_165" SheetName="[sheetName]" StartingCell="[&quot;AK&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity11" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_81" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveVerticalActivity>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range43" FillRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_28" SheetName="[sheetName]" SourceRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range44" FillRange="[&quot;AJ&quot; + stLastCell.Substring(1) + &quot;:AJ&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_29" SheetName="[sheetName]" SourceRange="[&quot;AJ&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range45" FillRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_30" SheetName="[sheetName]" SourceRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <Sequence sap2010:Annotation.AnnotationText="Paste dữ liệu overwrite xóa công thức" DisplayName="Paste Overwrite Data" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="Sequence_376">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_109" Range="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]" SheetName="[sheetName]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadRange>
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_166" SheetName="[sheetName]" StartingCell="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelWriteRange>
                                    </Sequence>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity12" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_103" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_170" Range="[&quot;AN5:AN&quot; + stLastCell2.Substring(1)]" SheetName="[sheetName]" />
                              <ui:RemoveDuplicateRows DataTable="[dtNewLine]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="527,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_3" OutputDataTable="[dtNewLine]" />
                            </Sequence>
                            <Sequence DisplayName="Add New Line No (If have)" sap:VirtualizedContainerService.HintSize="773,2356" sap2010:WorkflowViewState.IdRef="Sequence_520">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_126">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">new line</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA12" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_34">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="731,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_3" Range="A4:M1048576" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_253" SheetName="[sheetName]" StartingCell="C3" />
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity13" sap:VirtualizedContainerService.HintSize="731,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_104" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range46" FillRange="[&quot;A3:B&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_93" SheetName="[sheetName]" SourceRange="A3:B3" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range47" FillRange="[&quot;D3:M&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_94" SheetName="[sheetName]" SourceRange="D3:M3" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="731,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_171" Range="[&quot;A3:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep các giá trị = N/A tại cột M (Check line1)" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_7" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[12]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="731,719" sap2010:WorkflowViewState.IdRef="If_86">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="695,532" sap2010:WorkflowViewState.IdRef="Sequence_508">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột A (Line 1) keep các giá trị &lt;&gt; 181,311,542" DataTable="[dtCheckLine1]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="653,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_8" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["181"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["311"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["542"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_85">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_506">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_127">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_507">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_128">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_509">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột F &lt;&gt; N/A và cột E = N/A" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_9" OutputDataTable="[dtNewLine]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_168">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countRow]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[dtNewLine.Rows.Count]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="Add new line no (If have)" Condition="[countRow &gt; 0]" sap:VirtualizedContainerService.HintSize="640,2977" sap2010:WorkflowViewState.IdRef="If_87">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="604,2759" sap2010:WorkflowViewState.IdRef="Sequence_518">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="562,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_10" Range="[&quot;A4:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_260" SheetName="[sheetName]" StartingCell="C3" />
                                    <If Condition="[dtNewLine.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="562,493" sap2010:WorkflowViewState.IdRef="If_152">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_786">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range48" FillRange="[&quot;A3:B&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_205" SheetName="[sheetName]" SourceRange="A3:B3" />
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range49" FillRange="[&quot;D3:M&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_206" SheetName="[sheetName]" SourceRange="D3:M3" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_787">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity10" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_23" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity11" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_24" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_171">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile Condition="[countRow &gt; 0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,1305" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_4">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1140" sap2010:WorkflowViewState.IdRef="Sequence_615">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_184" Range="[&quot;A&quot; + index.ToString + &quot;:H&quot; + index.ToString]" SheetName="new line" />
                                          <If Condition="[String.IsNullOrEmpty(dtNewLine.Rows(0)(6).ToString.Trim) Or String.IsNullOrEmpty(dtNewLine.Rows(0)(7).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="484,300" sap2010:WorkflowViewState.IdRef="If_140">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_761">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_16" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_762">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_70">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheetLine]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(6).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_71">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheet1]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(7).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                          <Sequence DisplayName="Dyed Line" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_616">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_174">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Dyed line</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows13" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_59" Mode="Add" NoRows="1" Position="[(indexSheetLine + 1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA13" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheetLine +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_48" />
                                            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep value at column Line1, Line2, Line no, Line name" DataTable="[dtNewLine]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_28" OutputDataTable="[dtFilter]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:FilterDataTable>
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_267" SheetName="[sheetName]" StartingCell="[&quot;B&quot; + (indexSheetLine +1).ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="Sheet1" sap:VirtualizedContainerService.HintSize="376,1012" sap2010:WorkflowViewState.IdRef="Sequence_617">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_175">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows14" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_60" Mode="Add" NoRows="1" Position="[(indexSheet1 +1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA14" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheet1 +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_49" />
                                            <ui:ExcelWriteCell Cell="[&quot;C&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2137" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(2).ToString.Trim]" />
                                            <ui:ExcelWriteCell Cell="[&quot;D&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2138" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(3).ToString.Trim]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range50" FillRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_207" SheetName="[sheetName]" SourceRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + indexSheet1.ToString]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range51" FillRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_208" SheetName="[sheetName]" SourceRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + indexSheet1.ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="DB" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_622">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_176">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">DB</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Sequence DisplayName="Pro Cost" sap:VirtualizedContainerService.HintSize="376,957" sap2010:WorkflowViewState.IdRef="Sequence_618">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_177">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;I&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_17" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_178">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows15" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_61" Mode="Add" NoRows="1" Position="[(indexProCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range52" FillRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_209" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range53" FillRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_210" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range54" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_211" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Line Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_619">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_179">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;J&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_18" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_180">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexLineLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows16" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_62" Mode="Add" NoRows="1" Position="[(indexLineLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range55" FillRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_212" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range56" FillRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_213" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range57" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_214" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Pro Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_620">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_181">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;K&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_19" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_182">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProLostCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows17" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_63" Mode="Add" NoRows="1" Position="[(indexProLostCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range58" FillRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_215" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range59" FillRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_216" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range60" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_217" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Structure Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_621">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_183">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;L&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_20" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_184">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexStructureLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows18" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_64" Mode="Add" NoRows="1" Position="[(indexStructureLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range61" FillRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_218" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range62" FillRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_219" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range63" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_220" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString]" />
                                            </Sequence>
                                          </Sequence>
                                          <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_39" />
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_172">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                    </ui:InterruptibleWhile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_519">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDyedTotal1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_110" Range="C40:E45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDyedTotal2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_111" Range="H40:S45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <If Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="713,217" sap2010:WorkflowViewState.IdRef="If_45">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDyedTarget]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_112" Range="E5:M15" SheetName="[DateTime.Now.ToString(&quot;yy&quot;) + &quot;P Target&quot;]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelReadRange>
                              </If.Then>
                              <If.Else>
                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDyedTarget]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_113" Range="E5:M15" SheetName="[DateTime.Now.AddYears(-1).ToString(&quot;yy&quot;) + &quot;P Target&quot;]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelReadRange>
                              </If.Else>
                            </If>
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_31" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_375">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Xử lí dữ liệu FILE MPV" DisplayName="File MPV" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap2010:Annotation.AnnotationText="Nếu tháng hiện tại = 5 thì copy file hiện có thành file mới và xử lí dữ liệu" Condition="[DateTime.Now.Month = 5]" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="If_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="MPV" sap:VirtualizedContainerService.HintSize="554,2370" sap2010:WorkflowViewState.IdRef="Sequence_282">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_MPV.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="512,157" sap2010:WorkflowViewState.IdRef="CopyFile_17" Overwrite="True" Path="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.AddYears(-1).ToString(&quot;yyyy&quot;) + &quot;_MPV.xlsx&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CopyFile>
                    <bew:RenameSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Rename Work Sheet" FilePath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_MPV.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="512,70" sap2010:WorkflowViewState.IdRef="RenameSheet_18" NewSheetName="[DateTime.Now.ToString(&quot;yy&quot;) + &quot;P Target&quot;]" SheetName="[DateTime.Now.AddYears(-1).ToString(&quot;yy&quot;) + &quot;P Target&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </bew:RenameSheet>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="512,1971" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_26" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_MPV.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="478,1862" sap2010:WorkflowViewState.IdRef="Sequence_281">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:CommentOut sap2010:Annotation.AnnotationText="CHẠY VÀO THÁNG 5/2023 THÌ UNCOMMENT CÁI NÀY" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,288" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_337">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA15" EntryMethodName="DeleteData" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_12">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeVBA>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <Sequence sap2010:Annotation.AnnotationText="Ghi dữ liệu đã rút vào sheet PASTE" DisplayName="Sheet PASTE" sap:VirtualizedContainerService.HintSize="436,108" sap2010:WorkflowViewState.IdRef="Sequence_334">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">PASTE</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA16" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity14" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_66" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(stLastCell.Substring(1)) + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AC_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_132" SheetName="[sheetName]" StartingCell="[&quot;A&quot; + countColumn.ToString +&quot;:AC&quot; + countColumn.ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AI_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_133" SheetName="[sheetName]" StartingCell="[&quot;AH&quot; + countColumn.ToString + &quot;:AI&quot; + countColumn.ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AK_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_134" SheetName="[sheetName]" StartingCell="[&quot;AK&quot; + countColumn.ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity15" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_73" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range64" FillRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_10" SheetName="[sheetName]" SourceRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell.Substring(1)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelAutoFillRange>
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range65" FillRange="[&quot;AJ&quot; + stLastCell.Substring(1) + &quot;:AJ&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_11" SheetName="[sheetName]" SourceRange="[&quot;AJ&quot; + stLastCell.Substring(1)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelAutoFillRange>
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range66" FillRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_12" SheetName="[sheetName]" SourceRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell.Substring(1)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelAutoFillRange>
                              <Sequence sap2010:Annotation.AnnotationText="Paste dữ liệu overwrite xóa công thức" DisplayName="Paste Overwrite Data" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="Sequence_355">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_97" Range="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]" SheetName="[sheetName]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelReadRange>
                                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_151" SheetName="[sheetName]" StartingCell="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelWriteRange>
                              </Sequence>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_172" Range="[&quot;AN5:AN&quot; + stLastCell2.Substring(1)]" SheetName="[sheetName]" />
                              <ui:RemoveDuplicateRows DataTable="[dtNewLine]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_4" OutputDataTable="[dtNewLine]" />
                            </Sequence>
                            <Sequence DisplayName="Add New Line No (If have)" sap:VirtualizedContainerService.HintSize="773,2356" sap2010:WorkflowViewState.IdRef="Sequence_675">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_219">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">new line</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA17" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_56">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="731,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_15" Range="A4:M1048576" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_268" SheetName="[sheetName]" StartingCell="C3" />
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity16" sap:VirtualizedContainerService.HintSize="731,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_117" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range67" FillRange="[&quot;A3:B&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_257" SheetName="[sheetName]" SourceRange="A3:B3" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range68" FillRange="[&quot;D3:M&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_258" SheetName="[sheetName]" SourceRange="D3:M3" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="731,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_189" Range="[&quot;A3:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep các giá trị = N/A tại cột M (Check line1)" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_37" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[12]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="731,719" sap2010:WorkflowViewState.IdRef="If_117">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="695,532" sap2010:WorkflowViewState.IdRef="Sequence_661">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột A (Line 1) keep các giá trị &lt;&gt; 181,311,542" DataTable="[dtCheckLine1]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="653,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_38" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["181"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["311"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["542"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_116">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_659">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_220">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_660">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_221">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_662">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột F &lt;&gt; N/A và cột E = N/A" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_39" OutputDataTable="[dtNewLine]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_222">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countRow]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[dtNewLine.Rows.Count]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="Add new line no (If have)" Condition="[countRow &gt; 0]" sap:VirtualizedContainerService.HintSize="640,2977" sap2010:WorkflowViewState.IdRef="If_119">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="604,2759" sap2010:WorkflowViewState.IdRef="Sequence_673">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="562,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_16" Range="[&quot;A4:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_269" SheetName="[sheetName]" StartingCell="C3" />
                                    <If Condition="[dtNewLine.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="562,493" sap2010:WorkflowViewState.IdRef="If_153">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_788">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range69" FillRange="[&quot;A3:B&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_259" SheetName="[sheetName]" SourceRange="A3:B3" />
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range70" FillRange="[&quot;D3:M&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_260" SheetName="[sheetName]" SourceRange="D3:M3" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_789">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity12" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_41" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity13" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_42" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_223">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile Condition="[countRow &gt; 0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,1305" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_7">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1140" sap2010:WorkflowViewState.IdRef="Sequence_672">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_190" Range="[&quot;A&quot; + index.ToString + &quot;:H&quot; + index.ToString]" SheetName="new line" />
                                          <If Condition="[String.IsNullOrEmpty(dtNewLine.Rows(0)(6).ToString.Trim) Or String.IsNullOrEmpty(dtNewLine.Rows(0)(7).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="484,300" sap2010:WorkflowViewState.IdRef="If_143">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_767">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_17" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_768">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_16">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_76">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheetLine]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(6).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_77">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheet1]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(7).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                          <Sequence DisplayName="MPV Line" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_663">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_224">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">MPV line</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows19" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_77" Mode="Add" NoRows="1" Position="[(indexSheetLine + 1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA18" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheetLine +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_57" />
                                            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep value at column Line1, Line2, Line no, Line name" DataTable="[dtNewLine]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_40" OutputDataTable="[dtFilter]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:FilterDataTable>
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_270" SheetName="[sheetName]" StartingCell="[&quot;B&quot; + (indexSheetLine +1).ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="Sheet1" sap:VirtualizedContainerService.HintSize="376,1012" sap2010:WorkflowViewState.IdRef="Sequence_664">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_225">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows20" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_78" Mode="Add" NoRows="1" Position="[(indexSheet1 +1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA19" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheet1 +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_58" />
                                            <ui:ExcelWriteCell Cell="[&quot;C&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2143" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(2).ToString.Trim]" />
                                            <ui:ExcelWriteCell Cell="[&quot;D&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2144" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(3).ToString.Trim]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range71" FillRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_261" SheetName="[sheetName]" SourceRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + indexSheet1.ToString]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range72" FillRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_262" SheetName="[sheetName]" SourceRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + indexSheet1.ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="DB" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_669">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_226">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">DB</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Sequence DisplayName="Pro Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_665">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_227">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;I&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_29" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_228">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows21" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_79" Mode="Add" NoRows="1" Position="[(indexProCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range73" FillRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_263" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range74" FillRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_264" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range75" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_265" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Line Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_666">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_229">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;J&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_30" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_230">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexLineLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows22" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_80" Mode="Add" NoRows="1" Position="[(indexLineLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range76" FillRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_266" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range77" FillRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_267" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range78" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_268" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Pro Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_667">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_231">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;K&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_31" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_232">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProLostCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows23" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_81" Mode="Add" NoRows="1" Position="[(indexProLostCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range79" FillRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_269" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range80" FillRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_270" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range81" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_271" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Structure Loss Cost" sap:VirtualizedContainerService.HintSize="376,957" sap2010:WorkflowViewState.IdRef="Sequence_668">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_233">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;L&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_32" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_234">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexStructureLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows24" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_82" Mode="Add" NoRows="1" Position="[(indexStructureLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range82" FillRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_272" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range83" FillRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_273" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range84" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_274" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString]" />
                                            </Sequence>
                                          </Sequence>
                                          <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_42" />
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_235">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                    </ui:InterruptibleWhile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_674">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                            <Sequence DisplayName="Sheet DB" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_365">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">DB</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity14" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_7" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveHorizontalActivity>
                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tiếp theo để xíu paste dữ liệu" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stNextCol]" DisplayName="Move horizontal activity15" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_8" MoveCount="1" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveHorizontalActivity>
                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity16" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_9" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveHorizontalActivity>
                              <ui:ExcelCopyPasteRange DestinationCell="[stNextCol.Substring(0, stNextCol.Length - 1) + &quot;1&quot;]" DestinationSheet="[sheetName]" DisplayName="Copy Range" sap:VirtualizedContainerService.HintSize="340,238" sap2010:WorkflowViewState.IdRef="ExcelCopyPasteRange_2" SheetName="[sheetName]" SourceRange="[stFirstCol.Substring(0, stFirstCol.Length - 1) + &quot;1:&quot; + stLastCol.Substring(0, stLastCol.Length - 1) + &quot;704&quot;]" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_107" Range="[&quot;F6:&quot; + stLastCol.Substring(0, stLastCol.Length - 1) + &quot;704&quot;]" SheetName="[sheetName]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_161" SheetName="[sheetName]" StartingCell="[&quot;F6:&quot; + stLastCol.Substring(0, stLastCol.Length - 1) + &quot;704&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteCell Cell="[stNextCol]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1999" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countMonth]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Sửa lại năm các cột dữ liệu mới paste" Condition="[countColumn &lt; 12]" DisplayName="While" sap:VirtualizedContainerService.HintSize="340,93" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                                <ui:InterruptibleWhile.Body>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1308" sap2010:WorkflowViewState.IdRef="Sequence_364">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tiếp theo" BaseCell="[stNextCol]" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move horizontal activity17" sap:VirtualizedContainerService.HintSize="484,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_10" MoveCount="[countColumn]" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ui:ExcelWriteCell Cell="[stLastCell]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2000" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(countMonth).ToString(&quot;yyyyMM&quot;)]" />
                                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[countMonth]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[countMonth + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[countColumn + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[countColumn = 12]" sap:VirtualizedContainerService.HintSize="484,642" sap2010:WorkflowViewState.IdRef="If_37">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="382,456" sap2010:WorkflowViewState.IdRef="Sequence_363">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity18" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_11" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ee:MoveHorizontalActivity>
                                          <ui:ExcelWriteCell Cell="[stLastCol]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2001" SheetName="[sheetName]" Text="[DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;total&quot;]" />
                                          <ui:Break sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Break_2" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ui:InterruptibleWhile.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InterruptibleWhile>
                            </Sequence>
                            <ui:ExcelWriteCell Cell="C2" DisplayName="Sheet Year" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1638" SheetName="YEAR" Text="[currentYear.ToString]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelWriteCell>
                            <Sequence DisplayName="Sheet Graph" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_259">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Graph</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="875,1044" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[arrColumn]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="839,910" sap2010:WorkflowViewState.IdRef="Sequence_434">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[column.ToString = &quot;Q&quot; Or column.ToString = &quot;R&quot; Or column.ToString = &quot;S&quot;]" sap:VirtualizedContainerService.HintSize="797,718" sap2010:WorkflowViewState.IdRef="If_69">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_432">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2023" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2024" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2025" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2026" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_433">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2027" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2028" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2029" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2030" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                            <Sequence DisplayName="Sheet MF TTL" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_264">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">MF TTL</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="875,1042" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[arrColumn]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="839,909" sap2010:WorkflowViewState.IdRef="Sequence_437">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[column.ToString = &quot;Q&quot; Or column.ToString = &quot;R&quot; Or column.ToString = &quot;S&quot;]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_70">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_435">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2031" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2032" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2033" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2034" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_436">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2035" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2036" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2037" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2038" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                            <Sequence DisplayName="Sheet PF TTL" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_269">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">PF TTL</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_79">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="875,1042" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[arrColumn]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="839,909" sap2010:WorkflowViewState.IdRef="Sequence_440">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[column.ToString = &quot;Q&quot; Or column.ToString = &quot;R&quot; Or column.ToString = &quot;S&quot;]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_71">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_438">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2039" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2040" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2041" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2042" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_439">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2043" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2044" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2045" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2046" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                            <Sequence DisplayName="Sheet VF TTL" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_274">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">VF TTL</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_80">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="875,1042" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[arrColumn]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="839,909" sap2010:WorkflowViewState.IdRef="Sequence_443">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[column.ToString = &quot;Q&quot; Or column.ToString = &quot;R&quot; Or column.ToString = &quot;S&quot;]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_72">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_441">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2047" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2048" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2049" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2050" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_442">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2051" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2052" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2053" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2054" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                            <Sequence DisplayName="Sheet MPV TOTAL" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_279">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">MPV TOTAL</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_81">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="875,1042" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[arrColumn]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="839,909" sap2010:WorkflowViewState.IdRef="Sequence_446">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[column.ToString = &quot;Q&quot; Or column.ToString = &quot;R&quot; Or column.ToString = &quot;S&quot;]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_73">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_444">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2055" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2056" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2057" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2058" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_445">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2059" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2060" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2061" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2062" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_73">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                            <Sequence DisplayName="Sheet yyP Target" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_280">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("yy") + "P Target"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelWriteCell Cell="E3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1879" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(-1).ToString(&quot;yyyy&quot;)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteCell Cell="H3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1880" SheetName="[sheetName]" Text="[currentYear + &quot;P&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteCell Cell="K3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1881" SheetName="[sheetName]" Text="[currentYear + &quot;A&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtMPVTarget]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_77" Range="E28:M35" SheetName="[sheetName]" />
                            </Sequence>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtMPVTotal1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_75" Range="C40:E45" SheetName="MPV TOTAL" />
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtMPVTotal2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_76" Range="H40:S45" SheetName="MPV TOTAL" />
                            <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="436,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_19" />
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_21" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
              </If>
              <If sap2010:Annotation.AnnotationText="Tháng hiện tại &gt; 5 thì xử lí file có năm bằng năm hiện tại" Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="If_50">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="831,1019" sap2010:WorkflowViewState.IdRef="Sequence_382">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="789,927" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_37" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_MPV.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="755,818" sap2010:WorkflowViewState.IdRef="Sequence_381">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Sheet PASTE" sap:VirtualizedContainerService.HintSize="713,66" sap2010:WorkflowViewState.IdRef="Sequence_447">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_82">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">PASTE</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA20" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="527,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_24">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity17" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_82" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(stLastCell.Substring(1)) + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_83">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelReadCell Cell="[&quot;B&quot; + stLastCell.Substring(1)]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_11" SheetName="[sheetName]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </ui:ExcelReadCell.Result>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadCell>
                              <If sap2010:Annotation.AnnotationText="Kiểm tra nếu đã paste dữ liệu ở lần chạy trước nhưng lỗi ở bước sau thì không paste lại" Condition="[valueDate.ToString.Trim.Equals(DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="527,1335" sap2010:WorkflowViewState.IdRef="If_46">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="382,1146" sap2010:WorkflowViewState.IdRef="Sequence_380">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AC_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_167" SheetName="[sheetName]" StartingCell="[&quot;A&quot; + countColumn.ToString +&quot;:AC&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AI_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_168" SheetName="[sheetName]" StartingCell="[&quot;AH&quot; + countColumn.ToString + &quot;:AI&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AK_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_169" SheetName="[sheetName]" StartingCell="[&quot;AK&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity18" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_84" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveVerticalActivity>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range85" FillRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_31" SheetName="[sheetName]" SourceRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range86" FillRange="[&quot;AJ&quot; + stLastCell.Substring(1) + &quot;:AJ&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_32" SheetName="[sheetName]" SourceRange="[&quot;AJ&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range87" FillRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_33" SheetName="[sheetName]" SourceRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <Sequence sap2010:Annotation.AnnotationText="Paste dữ liệu overwrite xóa công thức" DisplayName="Paste Overwrite Data" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="Sequence_379">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_114" Range="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]" SheetName="[sheetName]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadRange>
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_170" SheetName="[sheetName]" StartingCell="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelWriteRange>
                                    </Sequence>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity19" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_106" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_174" Range="[&quot;AN5:AN&quot; + stLastCell2.Substring(1)]" SheetName="[sheetName]" />
                              <ui:RemoveDuplicateRows DataTable="[dtNewLine]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="527,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_5" OutputDataTable="[dtNewLine]" />
                            </Sequence>
                            <Sequence DisplayName="Add New Line No (If have)" sap:VirtualizedContainerService.HintSize="773,2356" sap2010:WorkflowViewState.IdRef="Sequence_692">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_236">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">new line</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA21" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_59">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="731,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_17" Range="A4:M1048576" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_271" SheetName="[sheetName]" StartingCell="C3" />
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity20" sap:VirtualizedContainerService.HintSize="731,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_118" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range88" FillRange="[&quot;A3:B&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_275" SheetName="[sheetName]" SourceRange="A3:B3" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range89" FillRange="[&quot;D3:M&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_276" SheetName="[sheetName]" SourceRange="D3:M3" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="731,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_191" Range="[&quot;A3:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep các giá trị = N/A tại cột M (Check line1)" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_41" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[12]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="731,719" sap2010:WorkflowViewState.IdRef="If_121">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="695,532" sap2010:WorkflowViewState.IdRef="Sequence_678">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột A (Line 1) keep các giá trị &lt;&gt; 181,311,542" DataTable="[dtCheckLine1]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="653,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_42" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["181"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["311"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["542"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_120">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_676">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_237">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_677">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_238">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_679">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột F &lt;&gt; N/A và cột E = N/A" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_43" OutputDataTable="[dtNewLine]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_239">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countRow]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[dtNewLine.Rows.Count]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="Add new line no (If have)" Condition="[countRow &gt; 0]" sap:VirtualizedContainerService.HintSize="640,2977" sap2010:WorkflowViewState.IdRef="If_123">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="604,2759" sap2010:WorkflowViewState.IdRef="Sequence_690">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="562,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_18" Range="[&quot;A4:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_272" SheetName="[sheetName]" StartingCell="C3" />
                                    <If Condition="[dtNewLine.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="562,493" sap2010:WorkflowViewState.IdRef="If_154">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_790">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range90" FillRange="[&quot;A3:B&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_277" SheetName="[sheetName]" SourceRange="A3:B3" />
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range91" FillRange="[&quot;D3:M&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_278" SheetName="[sheetName]" SourceRange="D3:M3" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_791">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity19" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_43" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity20" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_44" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_240">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile Condition="[countRow &gt; 0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,1305" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_8">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1140" sap2010:WorkflowViewState.IdRef="Sequence_689">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_192" Range="[&quot;A&quot; + index.ToString + &quot;:H&quot; + index.ToString]" SheetName="new line" />
                                          <If Condition="[String.IsNullOrEmpty(dtNewLine.Rows(0)(6).ToString.Trim) Or String.IsNullOrEmpty(dtNewLine.Rows(0)(7).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="484,300" sap2010:WorkflowViewState.IdRef="If_144">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_769">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_18" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_770">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_17">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_78">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheetLine]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(6).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_79">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheet1]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(7).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                          <Sequence DisplayName="MPV Line" sap:VirtualizedContainerService.HintSize="376,761" sap2010:WorkflowViewState.IdRef="Sequence_680">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_241">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">MPV line</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows25" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_83" Mode="Add" NoRows="1" Position="[(indexSheetLine + 1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA22" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheetLine +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_60" />
                                            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep value at column Line1, Line2, Line no, Line name" DataTable="[dtNewLine]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_44" OutputDataTable="[dtFilter]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:FilterDataTable>
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_273" SheetName="[sheetName]" StartingCell="[&quot;B&quot; + (indexSheetLine +1).ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="Sheet1" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_681">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_242">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows26" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_84" Mode="Add" NoRows="1" Position="[(indexSheet1 +1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA23" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheet1 +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_61" />
                                            <ui:ExcelWriteCell Cell="[&quot;C&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2145" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(2).ToString.Trim]" />
                                            <ui:ExcelWriteCell Cell="[&quot;D&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2146" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(3).ToString.Trim]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range92" FillRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_279" SheetName="[sheetName]" SourceRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + indexSheet1.ToString]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range93" FillRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_280" SheetName="[sheetName]" SourceRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + indexSheet1.ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="DB" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_686">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_243">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">DB</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Sequence DisplayName="Pro Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_682">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_244">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;I&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_33" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_245">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows27" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_85" Mode="Add" NoRows="1" Position="[(indexProCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range94" FillRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_281" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range95" FillRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_282" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range96" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_283" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Line Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_683">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_246">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;J&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_34" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_247">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexLineLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows28" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_86" Mode="Add" NoRows="1" Position="[(indexLineLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range97" FillRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_284" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range98" FillRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_285" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range99" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_286" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Pro Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_684">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_248">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;K&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_35" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_249">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProLostCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows29" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_87" Mode="Add" NoRows="1" Position="[(indexProLostCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range100" FillRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_287" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range101" FillRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_288" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range102" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_289" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Structure Loss Cost" sap:VirtualizedContainerService.HintSize="376,957" sap2010:WorkflowViewState.IdRef="Sequence_685">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_250">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;L&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_36" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_251">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexStructureLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows30" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_88" Mode="Add" NoRows="1" Position="[(indexStructureLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range103" FillRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_290" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range104" FillRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_291" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range105" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_292" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString]" />
                                            </Sequence>
                                          </Sequence>
                                          <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_43" />
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_252">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                    </ui:InterruptibleWhile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_691">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtMPVTotal1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_115" Range="C40:E45" SheetName="MPV TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtMPVTotal2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_116" Range="H40:S45" SheetName="MPV TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <If Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="713,217" sap2010:WorkflowViewState.IdRef="If_47">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtMPVTarget]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_117" Range="E28:M35" SheetName="[DateTime.Now.ToString(&quot;yy&quot;) + &quot;P Target&quot;]" />
                              </If.Then>
                              <If.Else>
                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtMPVTarget]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_118" Range="E28:M35" SheetName="[DateTime.Now.AddYears(-1).ToString(&quot;yy&quot;) + &quot;P Target&quot;]" />
                              </If.Else>
                            </If>
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_32" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_386">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <If sap2010:Annotation.AnnotationText="Tháng hiện tại &lt; 5 thì xử lí file với năm hiện tại -1" Condition="[DateTime.Now.Month &lt; 5]" sap:VirtualizedContainerService.HintSize="867,1237" sap2010:WorkflowViewState.IdRef="If_51">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="831,1019" sap2010:WorkflowViewState.IdRef="Sequence_387">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="789,927" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_39" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.AddYears(-1).ToString(&quot;yyyy&quot;) + &quot;_MPV.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="755,818" sap2010:WorkflowViewState.IdRef="Sequence_391">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Sheet PASTE" sap:VirtualizedContainerService.HintSize="713,66" sap2010:WorkflowViewState.IdRef="Sequence_448">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_84">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">PASTE</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA24" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="527,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_26">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity21" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_88" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(stLastCell.Substring(1)) + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_85">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelReadCell Cell="[&quot;B&quot; + stLastCell.Substring(1)]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_13" SheetName="[sheetName]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </ui:ExcelReadCell.Result>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadCell>
                              <If sap2010:Annotation.AnnotationText="Kiểm tra nếu đã paste dữ liệu ở lần chạy trước nhưng lỗi ở bước sau thì không paste lại" Condition="[valueDate.ToString.Trim.Equals(DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="527,1335" sap2010:WorkflowViewState.IdRef="If_52">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="382,1146" sap2010:WorkflowViewState.IdRef="Sequence_390">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AC_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_175" SheetName="[sheetName]" StartingCell="[&quot;A&quot; + countColumn.ToString +&quot;:AC&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AI_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_176" SheetName="[sheetName]" StartingCell="[&quot;AH&quot; + countColumn.ToString + &quot;:AI&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AK_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_177" SheetName="[sheetName]" StartingCell="[&quot;AK&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity22" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_90" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveVerticalActivity>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range106" FillRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_37" SheetName="[sheetName]" SourceRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range107" FillRange="[&quot;AJ&quot; + stLastCell.Substring(1) + &quot;:AJ&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_38" SheetName="[sheetName]" SourceRange="[&quot;AJ&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range108" FillRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_39" SheetName="[sheetName]" SourceRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <Sequence sap2010:Annotation.AnnotationText="Paste dữ liệu overwrite xóa công thức" DisplayName="Paste Overwrite Data" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="Sequence_389">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_124" Range="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]" SheetName="[sheetName]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadRange>
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_178" SheetName="[sheetName]" StartingCell="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelWriteRange>
                                    </Sequence>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity23" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_108" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_176" Range="[&quot;AN5:AN&quot; + stLastCell2.Substring(1)]" SheetName="[sheetName]" />
                              <ui:RemoveDuplicateRows DataTable="[dtNewLine]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="527,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_6" OutputDataTable="[dtNewLine]" />
                            </Sequence>
                            <Sequence DisplayName="Add New Line No (If have)" sap:VirtualizedContainerService.HintSize="773,2356" sap2010:WorkflowViewState.IdRef="Sequence_709">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_253">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">new line</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA25" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_62">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="731,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_19" Range="A4:M1048576" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_274" SheetName="[sheetName]" StartingCell="C3" />
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity24" sap:VirtualizedContainerService.HintSize="731,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_119" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range109" FillRange="[&quot;A3:B&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_293" SheetName="[sheetName]" SourceRange="A3:B3" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range110" FillRange="[&quot;D3:M&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_294" SheetName="[sheetName]" SourceRange="D3:M3" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="731,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_193" Range="[&quot;A3:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep các giá trị = N/A tại cột M (Check line1)" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_45" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[12]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="731,719" sap2010:WorkflowViewState.IdRef="If_125">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="695,532" sap2010:WorkflowViewState.IdRef="Sequence_695">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột A (Line 1) keep các giá trị &lt;&gt; 181,311,542" DataTable="[dtCheckLine1]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="653,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_46" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["181"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["311"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["542"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_124">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_693">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_254">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_694">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_255">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_696">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột F &lt;&gt; N/A và cột E = N/A" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_47" OutputDataTable="[dtNewLine]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_256">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countRow]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[dtNewLine.Rows.Count]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="Add new line no (If have)" Condition="[countRow &gt; 0]" sap:VirtualizedContainerService.HintSize="640,2977" sap2010:WorkflowViewState.IdRef="If_127">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="604,2759" sap2010:WorkflowViewState.IdRef="Sequence_707">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="562,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_20" Range="[&quot;A4:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_275" SheetName="[sheetName]" StartingCell="C3" />
                                    <If Condition="[dtNewLine.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="562,493" sap2010:WorkflowViewState.IdRef="If_149">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_780">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range111" FillRange="[&quot;A3:B&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_295" SheetName="[sheetName]" SourceRange="A3:B3" />
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range112" FillRange="[&quot;D3:M&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_296" SheetName="[sheetName]" SourceRange="D3:M3" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_781">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity21" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_45" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity22" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_46" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_257">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile Condition="[countRow &gt; 0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,1305" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_9">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1141" sap2010:WorkflowViewState.IdRef="Sequence_706">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_194" Range="[&quot;A&quot; + index.ToString + &quot;:H&quot; + index.ToString]" SheetName="new line" />
                                          <If Condition="[String.IsNullOrEmpty(dtNewLine.Rows(0)(6).ToString.Trim) Or String.IsNullOrEmpty(dtNewLine.Rows(0)(7).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="484,301" sap2010:WorkflowViewState.IdRef="If_145">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_771">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_13" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_772">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_18">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_80">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheetLine]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(6).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_81">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheet1]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(7).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                          <Sequence DisplayName="MPV Line" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_697">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_258">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">MPV line</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows31" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_89" Mode="Add" NoRows="1" Position="[(indexSheetLine + 1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA26" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheetLine +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_63" />
                                            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep value at column Line1, Line2, Line no, Line name" DataTable="[dtNewLine]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_48" OutputDataTable="[dtFilter]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:FilterDataTable>
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_276" SheetName="[sheetName]" StartingCell="[&quot;B&quot; + (indexSheetLine +1).ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="Sheet1" sap:VirtualizedContainerService.HintSize="376,1012" sap2010:WorkflowViewState.IdRef="Sequence_698">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_259">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows32" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_90" Mode="Add" NoRows="1" Position="[(indexSheet1 +1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA27" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheet1 +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_64" />
                                            <ui:ExcelWriteCell Cell="[&quot;C&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2147" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(2).ToString.Trim]" />
                                            <ui:ExcelWriteCell Cell="[&quot;D&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2148" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(3).ToString.Trim]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range113" FillRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_297" SheetName="[sheetName]" SourceRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + indexSheet1.ToString]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range114" FillRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_298" SheetName="[sheetName]" SourceRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + indexSheet1.ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="DB" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_703">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_260">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">DB</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Sequence DisplayName="Pro Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_699">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_261">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;I&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_37" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_262">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows33" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_91" Mode="Add" NoRows="1" Position="[(indexProCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range115" FillRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_299" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range116" FillRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_300" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range117" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_301" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Line Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_700">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_263">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;J&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_38" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_264">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexLineLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows34" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_92" Mode="Add" NoRows="1" Position="[(indexLineLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range118" FillRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_302" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range119" FillRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_303" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range120" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_304" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Pro Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_701">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_265">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;K&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_39" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_266">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProLostCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows35" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_93" Mode="Add" NoRows="1" Position="[(indexProLostCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range121" FillRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_305" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range122" FillRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_306" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range123" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_307" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Structure Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_702">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_267">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;L&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_40" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_268">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexStructureLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows36" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_94" Mode="Add" NoRows="1" Position="[(indexStructureLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range124" FillRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_308" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range125" FillRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_309" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range126" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_310" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString]" />
                                            </Sequence>
                                          </Sequence>
                                          <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_44" />
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_269">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                    </ui:InterruptibleWhile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_708">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtMPVTotal1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_125" Range="C40:E45" SheetName="MPV TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtMPVTotal2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_126" Range="H40:S45" SheetName="MPV TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <If Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="713,217" sap2010:WorkflowViewState.IdRef="If_53">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtMPVTarget]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_127" Range="E28:M35" SheetName="[DateTime.Now.ToString(&quot;yy&quot;) + &quot;P Target&quot;]" />
                              </If.Then>
                              <If.Else>
                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtMPVTarget]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_128" Range="E28:M35" SheetName="[DateTime.Now.AddYears(-1).ToString(&quot;yy&quot;) + &quot;P Target&quot;]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelReadRange>
                              </If.Else>
                            </If>
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_34" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_388">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Xử lí dữ liệu file SLIDER" DisplayName="File SLIDER" sap:VirtualizedContainerService.HintSize="242,497" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap2010:Annotation.AnnotationText="Nếu tháng hiện tại = 5 thì copy file hiện có thành file mới và xử lí dữ liệu" Condition="[DateTime.Now.Month = 5]" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="If_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Slider" sap:VirtualizedContainerService.HintSize="554,2052" sap2010:WorkflowViewState.IdRef="Sequence_296">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_SLIDER.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="512,157" sap2010:WorkflowViewState.IdRef="CopyFile_18" Overwrite="True" Path="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.AddYears(-1).ToString(&quot;yyyy&quot;) + &quot;_SLIDER.xlsx&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CopyFile>
                    <bew:RenameSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Rename Work Sheet" FilePath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_SLIDER.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="512,70" sap2010:WorkflowViewState.IdRef="RenameSheet_19" NewSheetName="[DateTime.Now.ToString(&quot;yy&quot;) + &quot;P Target&quot;]" SheetName="[DateTime.Now.AddYears(-1).ToString(&quot;yy&quot;) + &quot;P Target&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </bew:RenameSheet>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="512,1653" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_27" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_SLIDER.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="478,1544" sap2010:WorkflowViewState.IdRef="Sequence_295">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:CommentOut sap2010:Annotation.AnnotationText="CHẠY VÀO THÁNG 5/2023 THÌ UNCOMMENT CÁI NÀY" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,288" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_338">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA28" EntryMethodName="DeleteData" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_13">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeVBA>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <Sequence sap2010:Annotation.AnnotationText="Ghi dữ liệu đã rút vào sheet PASTE" DisplayName="Sheet PASTE" sap:VirtualizedContainerService.HintSize="436,108" sap2010:WorkflowViewState.IdRef="Sequence_335">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">PASTE</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA29" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_20">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity25" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_68" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(stLastCell.Substring(1)) + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AC_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_135" SheetName="[sheetName]" StartingCell="[&quot;A&quot; + countColumn.ToString +&quot;:AC&quot; + countColumn.ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AI_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_136" SheetName="[sheetName]" StartingCell="[&quot;AH&quot; + countColumn.ToString + &quot;:AI&quot; + countColumn.ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AK_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_137" SheetName="[sheetName]" StartingCell="[&quot;AK&quot; + countColumn.ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity26" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_76" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range127" FillRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_19" SheetName="[sheetName]" SourceRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell.Substring(1)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelAutoFillRange>
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range128" FillRange="[&quot;AJ&quot; + stLastCell.Substring(1) + &quot;:AJ&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_20" SheetName="[sheetName]" SourceRange="[&quot;AJ&quot; + stLastCell.Substring(1)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelAutoFillRange>
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range129" FillRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_21" SheetName="[sheetName]" SourceRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell.Substring(1)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelAutoFillRange>
                              <Sequence sap2010:Annotation.AnnotationText="Paste dữ liệu overwrite xóa công thức" DisplayName="Paste Overwrite Data" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="Sequence_358">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_100" Range="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]" SheetName="[sheetName]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelReadRange>
                                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_154" SheetName="[sheetName]" StartingCell="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelWriteRange>
                              </Sequence>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_178" Range="[&quot;AN5:AN&quot; + stLastCell2.Substring(1)]" SheetName="[sheetName]" />
                              <ui:RemoveDuplicateRows DataTable="[dtNewLine]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_7" OutputDataTable="[dtNewLine]" />
                            </Sequence>
                            <Sequence DisplayName="Add New Line No (If have)" sap:VirtualizedContainerService.HintSize="773,2356" sap2010:WorkflowViewState.IdRef="Sequence_726">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_270">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">new line</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA30" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_65">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="731,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_21" Range="A4:M1048576" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_277" SheetName="[sheetName]" StartingCell="C3" />
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity27" sap:VirtualizedContainerService.HintSize="731,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_120" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range130" FillRange="[&quot;A3:B&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_311" SheetName="[sheetName]" SourceRange="A3:B3" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range131" FillRange="[&quot;D3:M&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_312" SheetName="[sheetName]" SourceRange="D3:M3" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="731,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_195" Range="[&quot;A3:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep các giá trị = N/A tại cột M (Check line1)" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_49" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[12]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="731,719" sap2010:WorkflowViewState.IdRef="If_129">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="695,532" sap2010:WorkflowViewState.IdRef="Sequence_712">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột A (Line 1) keep các giá trị &lt;&gt; 181,311,542" DataTable="[dtCheckLine1]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="653,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_50" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["181"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["311"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["542"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_128">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_710">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_271">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_711">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_272">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_713">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột F &lt;&gt; N/A và cột E = N/A" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_51" OutputDataTable="[dtNewLine]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_273">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countRow]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[dtNewLine.Rows.Count]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="Add new line no (If have)" Condition="[countRow &gt; 0]" sap:VirtualizedContainerService.HintSize="640,3672" sap2010:WorkflowViewState.IdRef="If_131">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="604,3454" sap2010:WorkflowViewState.IdRef="Sequence_724">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="562,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_22" Range="[&quot;A4:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_278" SheetName="[sheetName]" StartingCell="C3" />
                                    <If Condition="[dtNewLine.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="562,493" sap2010:WorkflowViewState.IdRef="If_155">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_792">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range132" FillRange="[&quot;A3:B&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_313" SheetName="[sheetName]" SourceRange="A3:B3" />
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range133" FillRange="[&quot;D3:M&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_314" SheetName="[sheetName]" SourceRange="D3:M3" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_793">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity23" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_47" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity24" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_48" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_274">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile Condition="[countRow &gt; 0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,2000" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_10">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1835" sap2010:WorkflowViewState.IdRef="Sequence_723">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_196" Range="[&quot;A&quot; + index.ToString + &quot;:H&quot; + index.ToString]" SheetName="new line" />
                                          <If Condition="[String.IsNullOrEmpty(dtNewLine.Rows(0)(6).ToString.Trim) Or String.IsNullOrEmpty(dtNewLine.Rows(0)(7).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="484,300" sap2010:WorkflowViewState.IdRef="If_146">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_773">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_19" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_774">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_19">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_82">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheetLine]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(6).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_83">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheet1]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(7).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                          <Sequence DisplayName="Slider line" sap:VirtualizedContainerService.HintSize="376,761" sap2010:WorkflowViewState.IdRef="Sequence_714">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_275">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Slider line</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows37" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_95" Mode="Add" NoRows="1" Position="[(indexSheetLine + 1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA31" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheetLine +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_66" />
                                            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep value at column Line1, Line2, Line no, Line name" DataTable="[dtNewLine]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_52" OutputDataTable="[dtFilter]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:FilterDataTable>
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_279" SheetName="[sheetName]" StartingCell="[&quot;B&quot; + (indexSheetLine +1).ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="Sheet1" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_715">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_276">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows38" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_96" Mode="Add" NoRows="1" Position="[(indexSheet1 +1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA32" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheet1 +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_67" />
                                            <ui:ExcelWriteCell Cell="[&quot;C&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2149" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(2).ToString.Trim]" />
                                            <ui:ExcelWriteCell Cell="[&quot;D&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2150" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(3).ToString.Trim]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range134" FillRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_315" SheetName="[sheetName]" SourceRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + indexSheet1.ToString]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range135" FillRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_316" SheetName="[sheetName]" SourceRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + indexSheet1.ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="DB" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_720">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_277">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">DB</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Sequence DisplayName="Pro Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_716">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_278">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;I&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_41" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_279">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows39" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_97" Mode="Add" NoRows="1" Position="[(indexProCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range136" FillRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_317" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range137" FillRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_318" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range138" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_319" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Line Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_717">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_280">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;J&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_42" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_281">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexLineLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows40" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_98" Mode="Add" NoRows="1" Position="[(indexLineLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range139" FillRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_320" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range140" FillRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_321" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range141" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_322" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Pro Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_718">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_282">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;K&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_43" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_283">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProLostCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows41" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_99" Mode="Add" NoRows="1" Position="[(indexProLostCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range142" FillRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_323" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range143" FillRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_324" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range144" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_325" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Structure Loss Cost" sap:VirtualizedContainerService.HintSize="376,957" sap2010:WorkflowViewState.IdRef="Sequence_719">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_284">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;L&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_44" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_285">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexStructureLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows42" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_100" Mode="Add" NoRows="1" Position="[(indexStructureLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range145" FillRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_326" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range146" FillRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_327" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range147" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_328" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString]" />
                                            </Sequence>
                                          </Sequence>
                                          <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_45" />
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_286">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                    </ui:InterruptibleWhile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_725">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                            <Sequence DisplayName="Sheet DB" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_368">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">DB</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity25" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_12" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveHorizontalActivity>
                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tiếp theo để xíu paste dữ liệu" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stNextCol]" DisplayName="Move horizontal activity26" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_13" MoveCount="1" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveHorizontalActivity>
                              <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity27" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_14" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveHorizontalActivity>
                              <ui:ExcelCopyPasteRange DestinationCell="[stNextCol.Substring(0, stNextCol.Length - 1) + &quot;1&quot;]" DestinationSheet="[sheetName]" DisplayName="Copy Range" sap:VirtualizedContainerService.HintSize="340,238" sap2010:WorkflowViewState.IdRef="ExcelCopyPasteRange_3" SheetName="[sheetName]" SourceRange="[stFirstCol.Substring(0, stFirstCol.Length - 1) + &quot;1:&quot; + stLastCol.Substring(0, stLastCol.Length - 1) + &quot;704&quot;]" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_108" Range="[&quot;F6:&quot; + stLastCol.Substring(0, stLastCol.Length - 1) + &quot;704&quot;]" SheetName="[sheetName]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_162" SheetName="[sheetName]" StartingCell="[&quot;F6:&quot; + stLastCol.Substring(0, stLastCol.Length - 1) + &quot;704&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteCell Cell="[stNextCol]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2002" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countMonth]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Sửa lại năm các cột dữ liệu mới paste" Condition="[countColumn &lt; 12]" DisplayName="While" sap:VirtualizedContainerService.HintSize="340,93" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
                                <ui:InterruptibleWhile.Body>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1308" sap2010:WorkflowViewState.IdRef="Sequence_367">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột tiếp theo" BaseCell="[stNextCol]" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move horizontal activity28" sap:VirtualizedContainerService.HintSize="484,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_15" MoveCount="[countColumn]" MoveDirection="Right" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ui:ExcelWriteCell Cell="[stLastCell]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2003" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(countMonth).ToString(&quot;yyyyMM&quot;)]" />
                                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[countMonth]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[countMonth + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[countColumn + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[countColumn = 12]" sap:VirtualizedContainerService.HintSize="484,642" sap2010:WorkflowViewState.IdRef="If_38">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="382,456" sap2010:WorkflowViewState.IdRef="Sequence_366">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity29" sap:VirtualizedContainerService.HintSize="340,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_16" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ee:MoveHorizontalActivity>
                                          <ui:ExcelWriteCell Cell="[stLastCol]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2004" SheetName="[sheetName]" Text="[DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;total&quot;]" />
                                          <ui:Break sap:VirtualizedContainerService.HintSize="340,22" sap2010:WorkflowViewState.IdRef="Break_3" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ui:InterruptibleWhile.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InterruptibleWhile>
                            </Sequence>
                            <ui:ExcelWriteCell Cell="C2" DisplayName="Sheet Year" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1895" SheetName="YEAR" Text="[currentYear.ToString]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelWriteCell>
                            <Sequence DisplayName="Sheet Graph" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_288">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Graph</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="875,1044" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[arrColumn]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="839,910" sap2010:WorkflowViewState.IdRef="Sequence_451">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[column.ToString = &quot;Q&quot; Or column.ToString = &quot;R&quot; Or column.ToString = &quot;S&quot;]" sap:VirtualizedContainerService.HintSize="797,718" sap2010:WorkflowViewState.IdRef="If_74">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_449">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2063" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2064" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2065" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2066" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_450">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2067" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2068" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2069" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2070" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_90">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                            <Sequence DisplayName="Sheet TOTAL" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_293">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_91">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">TOTAL</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="875,1042" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[arrColumn]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="839,909" sap2010:WorkflowViewState.IdRef="Sequence_454">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[column.ToString = &quot;Q&quot; Or column.ToString = &quot;R&quot; Or column.ToString = &quot;S&quot;]" sap:VirtualizedContainerService.HintSize="797,717" sap2010:WorkflowViewState.IdRef="If_75">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_452">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2071" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2072" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2073" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2074" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(1).Year.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,560" sap2010:WorkflowViewState.IdRef="Sequence_453">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[column + &quot;39&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2075" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;79&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2076" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;119&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2077" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[column + &quot;159&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2078" SheetName="[sheetName]" Text="[currentYear.ToString + arrMonth(index)]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_93">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                            <Sequence DisplayName="Sheet yyP Target" sap:VirtualizedContainerService.HintSize="436,66" sap2010:WorkflowViewState.IdRef="Sequence_294">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("yy") + "P Target"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelWriteCell Cell="E3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1992" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(-1).ToString(&quot;yyyy&quot;)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteCell Cell="H3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1993" SheetName="[sheetName]" Text="[currentYear + &quot;P&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteCell Cell="K3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1994" SheetName="[sheetName]" Text="[currentYear + &quot;A&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget1]" DisplayName="Read yyP Target Line 16" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_163" Range="E16:M16" SheetName="[sheetName]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadRange>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget2]" DisplayName="Read yyP Target Line 18" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_164" Range="E18:M18" SheetName="[sheetName]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadRange>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget3]" DisplayName="Read yyP Target Line 20,21" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_165" Range="E20:M21" SheetName="[sheetName]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadRange>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget4]" DisplayName="Read yyP Target Line 23" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_166" Range="E23:M23" SheetName="[sheetName]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadRange>
                            </Sequence>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTotal1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_78" Range="C40:E45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTotal2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_79" Range="H40:S45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="436,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_20" />
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_22" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
              </If>
              <If sap2010:Annotation.AnnotationText="Tháng hiện tại &gt; 5 thì xử lí file có năm bằng năm hiện tại" Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="If_58">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,868" sap2010:WorkflowViewState.IdRef="Sequence_397">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,776" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_40" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_SLIDER.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,667" sap2010:WorkflowViewState.IdRef="Sequence_396">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Sheet PASTE" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_455">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">PASTE</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA33" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="527,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity28" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_91" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(stLastCell.Substring(1)) + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_96">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelReadCell Cell="[&quot;B&quot; + stLastCell.Substring(1)]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_14" SheetName="[sheetName]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </ui:ExcelReadCell.Result>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadCell>
                              <If sap2010:Annotation.AnnotationText="Kiểm tra nếu đã paste dữ liệu ở lần chạy trước nhưng lỗi ở bước sau thì không paste lại" Condition="[valueDate.ToString.Trim.Equals(DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="527,1335" sap2010:WorkflowViewState.IdRef="If_54">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="382,1146" sap2010:WorkflowViewState.IdRef="Sequence_393">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AC_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_179" SheetName="[sheetName]" StartingCell="[&quot;A&quot; + countColumn.ToString +&quot;:AC&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AI_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_180" SheetName="[sheetName]" StartingCell="[&quot;AH&quot; + countColumn.ToString + &quot;:AI&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AK_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_181" SheetName="[sheetName]" StartingCell="[&quot;AK&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity29" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_93" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveVerticalActivity>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range148" FillRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_40" SheetName="[sheetName]" SourceRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range149" FillRange="[&quot;AJ&quot; + stLastCell.Substring(1) + &quot;:AJ&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_41" SheetName="[sheetName]" SourceRange="[&quot;AJ&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range150" FillRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_42" SheetName="[sheetName]" SourceRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <Sequence sap2010:Annotation.AnnotationText="Paste dữ liệu overwrite xóa công thức" DisplayName="Paste Overwrite Data" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="Sequence_392">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_129" Range="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]" SheetName="[sheetName]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadRange>
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_182" SheetName="[sheetName]" StartingCell="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelWriteRange>
                                    </Sequence>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity30" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_111" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_180" Range="[&quot;AN5:AN&quot; + stLastCell2.Substring(1)]" SheetName="[sheetName]" />
                              <ui:RemoveDuplicateRows DataTable="[dtNewLine]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="527,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_8" OutputDataTable="[dtNewLine]" />
                            </Sequence>
                            <Sequence DisplayName="Add New Line No (If have)" sap:VirtualizedContainerService.HintSize="773,2356" sap2010:WorkflowViewState.IdRef="Sequence_743">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_287">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">new line</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA34" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_68">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="731,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_23" Range="A4:M1048576" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_280" SheetName="[sheetName]" StartingCell="C3" />
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity31" sap:VirtualizedContainerService.HintSize="731,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_121" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range151" FillRange="[&quot;A3:B&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_329" SheetName="[sheetName]" SourceRange="A3:B3" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range152" FillRange="[&quot;D3:M&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_330" SheetName="[sheetName]" SourceRange="D3:M3" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="731,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_197" Range="[&quot;A3:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep các giá trị = N/A tại cột M (Check line1)" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_53" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[12]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="731,719" sap2010:WorkflowViewState.IdRef="If_133">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="695,532" sap2010:WorkflowViewState.IdRef="Sequence_729">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột A (Line 1) keep các giá trị &lt;&gt; 181,311,542" DataTable="[dtCheckLine1]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="653,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_54" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["181"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["311"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["542"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_132">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_727">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_288">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_728">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_289">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_730">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột F &lt;&gt; N/A và cột E = N/A" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_55" OutputDataTable="[dtNewLine]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_290">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countRow]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[dtNewLine.Rows.Count]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="Add new line no (If have)" Condition="[countRow &gt; 0]" sap:VirtualizedContainerService.HintSize="640,2977" sap2010:WorkflowViewState.IdRef="If_135">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="604,2759" sap2010:WorkflowViewState.IdRef="Sequence_741">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="562,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_24" Range="[&quot;A4:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_281" SheetName="[sheetName]" StartingCell="C3" />
                                    <If Condition="[dtNewLine.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="562,493" sap2010:WorkflowViewState.IdRef="If_156">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_794">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range153" FillRange="[&quot;A3:B&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_331" SheetName="[sheetName]" SourceRange="A3:B3" />
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range154" FillRange="[&quot;D3:M&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_332" SheetName="[sheetName]" SourceRange="D3:M3" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_795">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity30" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_49" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity31" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_50" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_291">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile Condition="[countRow &gt; 0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,1305" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_11">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1140" sap2010:WorkflowViewState.IdRef="Sequence_740">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_198" Range="[&quot;A&quot; + index.ToString + &quot;:H&quot; + index.ToString]" SheetName="new line" />
                                          <If Condition="[String.IsNullOrEmpty(dtNewLine.Rows(0)(6).ToString.Trim) Or String.IsNullOrEmpty(dtNewLine.Rows(0)(7).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="484,300" sap2010:WorkflowViewState.IdRef="If_147">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_775">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_20" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_776">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_20">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_84">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheetLine]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(6).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_85">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheet1]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(7).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                          <Sequence DisplayName="Slider line" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_731">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_292">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Slider line</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows43" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_101" Mode="Add" NoRows="1" Position="[(indexSheetLine + 1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA35" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheetLine +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_69" />
                                            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep value at column Line1, Line2, Line no, Line name" DataTable="[dtNewLine]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_56" OutputDataTable="[dtFilter]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:FilterDataTable>
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_282" SheetName="[sheetName]" StartingCell="[&quot;B&quot; + (indexSheetLine +1).ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="Sheet1" sap:VirtualizedContainerService.HintSize="376,1012" sap2010:WorkflowViewState.IdRef="Sequence_732">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_293">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows44" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_102" Mode="Add" NoRows="1" Position="[(indexSheet1 +1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA36" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheet1 +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_70" />
                                            <ui:ExcelWriteCell Cell="[&quot;C&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2151" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(2).ToString.Trim]" />
                                            <ui:ExcelWriteCell Cell="[&quot;D&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2152" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(3).ToString.Trim]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range155" FillRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_333" SheetName="[sheetName]" SourceRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + indexSheet1.ToString]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range156" FillRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_334" SheetName="[sheetName]" SourceRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + indexSheet1.ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="DB" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_737">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_294">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">DB</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Sequence DisplayName="Pro Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_733">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_295">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;I&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_45" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_296">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows45" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_103" Mode="Add" NoRows="1" Position="[(indexProCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range157" FillRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_335" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range158" FillRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_336" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range159" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_337" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Line Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_734">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_297">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;J&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_46" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_298">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexLineLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows46" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_104" Mode="Add" NoRows="1" Position="[(indexLineLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range160" FillRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_338" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range161" FillRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_339" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range162" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_340" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Pro Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_735">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_299">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;K&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_47" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_300">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProLostCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows47" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_105" Mode="Add" NoRows="1" Position="[(indexProLostCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range163" FillRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_341" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range164" FillRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_342" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range165" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_343" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Structure Loss Cost" sap:VirtualizedContainerService.HintSize="376,957" sap2010:WorkflowViewState.IdRef="Sequence_736">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_301">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;L&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_48" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_302">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexStructureLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows48" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_106" Mode="Add" NoRows="1" Position="[(indexStructureLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range166" FillRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_344" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range167" FillRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_345" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range168" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_346" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString]" />
                                            </Sequence>
                                          </Sequence>
                                          <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_46" />
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_303">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                    </ui:InterruptibleWhile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_742">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTotal1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_130" Range="C40:E45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTotal2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_131" Range="H40:S45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <Sequence DisplayName="Sheeet yyP Target" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_464">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="653,309" sap2010:WorkflowViewState.IdRef="If_55">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_394">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_97">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("yy") + "P Target"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_395">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_98">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.AddYears(-1).ToString("yy") + "P Target"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget1]" DisplayName="Read yyP Target Line 16" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_132" Range="E16:M16" SheetName="[sheetName]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadRange>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget2]" DisplayName="Read yyP Target Line 18" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_133" Range="E18:M18" SheetName="[sheetName]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadRange>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget3]" DisplayName="Read yyP Target Line 20,21" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_134" Range="E20:M21" SheetName="[sheetName]" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget4]" DisplayName="Read yyP Target Line 23" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_135" Range="E23:M23" SheetName="[sheetName]" />
                            </Sequence>
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_35" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_403">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <If sap2010:Annotation.AnnotationText="Tháng hiện tại &lt; 5 thì xử lí file với năm hiện tại -1" Condition="[DateTime.Now.Month &lt; 5]" sap:VirtualizedContainerService.HintSize="512,1086" sap2010:WorkflowViewState.IdRef="If_59">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,868" sap2010:WorkflowViewState.IdRef="Sequence_404">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,776" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_42" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.AddYears(-1).ToString(&quot;yyyy&quot;) + &quot;_SLIDER.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,667" sap2010:WorkflowViewState.IdRef="Sequence_410">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Sheet PASTE" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_456">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_99">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">PASTE</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA37" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="527,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_29">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity32" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_97" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(stLastCell.Substring(1)) + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="527,60" sap2010:WorkflowViewState.IdRef="Assign_100">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelReadCell Cell="[&quot;B&quot; + stLastCell.Substring(1)]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_16" SheetName="[sheetName]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[valueDate]</OutArgument>
                                </ui:ExcelReadCell.Result>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelReadCell>
                              <If sap2010:Annotation.AnnotationText="Kiểm tra nếu đã paste dữ liệu ở lần chạy trước nhưng lỗi ở bước sau thì không paste lại" Condition="[valueDate.ToString.Trim.Equals(DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;))]" sap:VirtualizedContainerService.HintSize="527,1335" sap2010:WorkflowViewState.IdRef="If_60">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="382,1146" sap2010:WorkflowViewState.IdRef="Sequence_407">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AC_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_187" SheetName="[sheetName]" StartingCell="[&quot;A&quot; + countColumn.ToString +&quot;:AC&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AI_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_188" SheetName="[sheetName]" StartingCell="[&quot;AH&quot; + countColumn.ToString + &quot;:AI&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_AK_Column]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_189" SheetName="[sheetName]" StartingCell="[&quot;AK&quot; + countColumn.ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelWriteRange>
                                    <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity33" sap:VirtualizedContainerService.HintSize="340,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_99" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveVerticalActivity>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range169" FillRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_46" SheetName="[sheetName]" SourceRange="[&quot;AD&quot; + stLastCell.Substring(1) + &quot;:AG&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range170" FillRange="[&quot;AJ&quot; + stLastCell.Substring(1) + &quot;:AJ&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_47" SheetName="[sheetName]" SourceRange="[&quot;AJ&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <ui:ExcelAutoFillRange DisplayName="Auto Fill Range171" FillRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell2.Substring(1)]" sap:VirtualizedContainerService.HintSize="340,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_48" SheetName="[sheetName]" SourceRange="[&quot;AL&quot; + stLastCell.Substring(1) + &quot;:AN&quot; + stLastCell.Substring(1)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelAutoFillRange>
                                    <Sequence sap2010:Annotation.AnnotationText="Paste dữ liệu overwrite xóa công thức" DisplayName="Paste Overwrite Data" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="Sequence_406">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_151" Range="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]" SheetName="[sheetName]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadRange>
                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDatatable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_190" SheetName="[sheetName]" StartingCell="[&quot;A5:AN&quot; + (Convert.ToInt32(stLastCell2.Substring(1)) - 1).ToString]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelWriteRange>
                                    </Sequence>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="A1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell2]" DisplayName="Move vertical activity34" sap:VirtualizedContainerService.HintSize="527,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_113" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ee:MoveVerticalActivity>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="527,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_182" Range="[&quot;AN5:AN&quot; + stLastCell2.Substring(1)]" SheetName="[sheetName]" />
                              <ui:RemoveDuplicateRows DataTable="[dtNewLine]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="527,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_9" OutputDataTable="[dtNewLine]" />
                            </Sequence>
                            <Sequence DisplayName="Add New Line No (If have)" sap:VirtualizedContainerService.HintSize="773,2356" sap2010:WorkflowViewState.IdRef="Sequence_760">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_304">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">new line</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA38" EntryMethodName="CheckFilter" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_71">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeVBA>
                              <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="731,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_25" Range="A4:M1048576" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_283" SheetName="[sheetName]" StartingCell="C3" />
                              <ee:MoveVerticalActivity MoveColumn="{x:Null}" MoveCount="{x:Null}" BaseCell="C1048576" ClipboardCopyFlg="False" CurrentCell="[stLastCell]" DisplayName="Move vertical activity35" sap:VirtualizedContainerService.HintSize="731,144" sap2010:WorkflowViewState.IdRef="MoveVerticalActivity_122" MoveDirection="Up" MoveLastDataRowFlg="True" MoveNextFlg="False" SheetName="[sheetName]" WorkBook="[wb]" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range172" FillRange="[&quot;A3:B&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_347" SheetName="[sheetName]" SourceRange="A3:B3" />
                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range173" FillRange="[&quot;D3:M&quot; + stLastCell.Substring(1)]" sap:VirtualizedContainerService.HintSize="731,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_348" SheetName="[sheetName]" SourceRange="D3:M3" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="731,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_199" Range="[&quot;A3:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" />
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep các giá trị = N/A tại cột M (Check line1)" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_57" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[12]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="731,719" sap2010:WorkflowViewState.IdRef="If_137">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="695,532" sap2010:WorkflowViewState.IdRef="Sequence_746">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột A (Line 1) keep các giá trị &lt;&gt; 181,311,542" DataTable="[dtCheckLine1]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="653,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_58" OutputDataTable="[dtCheckLine1]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["181"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["311"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["542"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                    <If Condition="[dtCheckLine1.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_136">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_744">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_305">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_745">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_306">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[checkLine1]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_747">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="Lọc cột F &lt;&gt; N/A và cột E = N/A" DataTable="[dtNewLine]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="731,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_59" OutputDataTable="[dtNewLine]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">["N/A"]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                              <Assign sap:VirtualizedContainerService.HintSize="731,60" sap2010:WorkflowViewState.IdRef="Assign_307">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[countRow]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[dtNewLine.Rows.Count]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="Add new line no (If have)" Condition="[countRow &gt; 0]" sap:VirtualizedContainerService.HintSize="640,2977" sap2010:WorkflowViewState.IdRef="If_139">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="604,2759" sap2010:WorkflowViewState.IdRef="Sequence_758">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="562,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_26" Range="[&quot;A4:M&quot; + stLastCell.Substring(1)]" SheetName="[sheetName]" ShiftCells="False" ShiftOption="ShiftUp" />
                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_284" SheetName="[sheetName]" StartingCell="C3" />
                                    <If Condition="[dtNewLine.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="562,493" sap2010:WorkflowViewState.IdRef="If_157">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_796">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range174" FillRange="[&quot;A3:B&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_349" SheetName="[sheetName]" SourceRange="A3:B3" />
                                          <ui:ExcelAutoFillRange DisplayName="Auto Fill Range175" FillRange="[&quot;D3:M&quot; + (countRow + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_350" SheetName="[sheetName]" SourceRange="D3:M3" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_797">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ee:MoveHorizontalActivity MoveCount="{x:Null}" sap2010:Annotation.AnnotationText="Lấy vị trí cột cuối cùng" BaseCell="XFD6" ClipboardCopyFlg="False" CurrentCell="[stLastCol]" DisplayName="Move horizontal activity32" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_51" MoveDirection="Left" MoveLastDataColumnFlg="True" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <ee:MoveHorizontalActivity sap2010:Annotation.AnnotationText="Lấy vị trí cột có dữ liệu là tháng 4 và năm hiện tại - 1" BaseCell="[stLastCol]" ClipboardCopyFlg="False" CurrentCell="[stFirstCol]" DisplayName="Move horizontal activity33" sap:VirtualizedContainerService.HintSize="562,175" sap2010:WorkflowViewState.IdRef="MoveHorizontalActivity_52" MoveCount="12" MoveDirection="Left" MoveLastDataColumnFlg="False" MoveNextFlg="False" SheetName="DB" WorkBook="[wb]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ee:MoveHorizontalActivity>
                                    <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_308">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile Condition="[countRow &gt; 0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="562,1305" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_12">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1140" sap2010:WorkflowViewState.IdRef="Sequence_757">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dtNewLine]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_200" Range="[&quot;A&quot; + index.ToString + &quot;:H&quot; + index.ToString]" SheetName="new line" />
                                          <If Condition="[String.IsNullOrEmpty(dtNewLine.Rows(0)(6).ToString.Trim) Or String.IsNullOrEmpty(dtNewLine.Rows(0)(7).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="484,300" sap2010:WorkflowViewState.IdRef="If_148">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_777">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_21" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_778">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_21">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_86">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheetLine]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(6).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_87">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[indexSheet1]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(dtNewLine.Rows(0)(7).ToString.Trim)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                          <Sequence DisplayName="Slider line" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_748">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_309">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Slider line</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows49" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_107" Mode="Add" NoRows="1" Position="[(indexSheetLine + 1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA39" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheetLine +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_72" />
                                            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep value at column Line1, Line2, Line no, Line name" DataTable="[dtNewLine]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="FilterDataTable_60" OutputDataTable="[dtFilter]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:FilterDataTable>
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtFilter]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_285" SheetName="[sheetName]" StartingCell="[&quot;B&quot; + (indexSheetLine +1).ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="Sheet1" sap:VirtualizedContainerService.HintSize="376,1012" sap2010:WorkflowViewState.IdRef="Sequence_749">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_310">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows50" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_108" Mode="Add" NoRows="1" Position="[(indexSheet1 +1)]" SheetName="[sheetName]" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA40" EntryMethodName="Convert_Range" EntryMethodParameters="[{(indexSheet1 +1),sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_73" />
                                            <ui:ExcelWriteCell Cell="[&quot;C&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2153" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(2).ToString.Trim]" />
                                            <ui:ExcelWriteCell Cell="[&quot;D&quot; + (indexSheet1 +1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2154" SheetName="[sheetName]" Text="[dtNewLine.Rows(0)(3).ToString.Trim]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range176" FillRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_351" SheetName="[sheetName]" SourceRange="[&quot;A&quot; + indexSheet1.ToString + &quot;:B&quot; + indexSheet1.ToString]" />
                                            <ui:ExcelAutoFillRange DisplayName="Auto Fill Range177" FillRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + (indexSheet1 + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_352" SheetName="[sheetName]" SourceRange="[&quot;E&quot; + indexSheet1.ToString + &quot;:H&quot; + indexSheet1.ToString]" />
                                          </Sequence>
                                          <Sequence DisplayName="DB" sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_754">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_311">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">DB</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Sequence DisplayName="Pro Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_750">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_312">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;I&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_49" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_313">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows51" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_109" Mode="Add" NoRows="1" Position="[(indexProCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range178" FillRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_353" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProCost.ToString + &quot;:E&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range179" FillRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_354" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProCost.ToString + &quot;:G&quot; + indexProCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range180" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_355" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Line Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_751">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_314">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;J&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_50" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_315">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexLineLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows52" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_110" Mode="Add" NoRows="1" Position="[(indexLineLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range181" FillRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_356" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexLineLossCost.ToString + &quot;:E&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range182" FillRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_357" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexLineLossCost.ToString + &quot;:G&quot; + indexLineLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range183" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexLineLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_358" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexLineLossCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Pro Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_752">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_316">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;K&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_51" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_317">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexProLostCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows53" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_111" Mode="Add" NoRows="1" Position="[(indexProLostCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range184" FillRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_359" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexProLostCost.ToString + &quot;:E&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range185" FillRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_360" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexProLostCost.ToString + &quot;:G&quot; + indexProLostCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range186" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexProLostCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_361" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexProLostCost.ToString]" />
                                            </Sequence>
                                            <Sequence DisplayName="Structure Loss Cost" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_753">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_318">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadCell Cell="[&quot;L&quot; + index.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_52" SheetName="new line">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[indexValue]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_319">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[indexStructureLossCost]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(indexValue.ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows54" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_112" Mode="Add" NoRows="1" Position="[(indexStructureLossCost +1)]" SheetName="[sheetName]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range187" FillRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_362" SheetName="[sheetName]" SourceRange="[&quot;B&quot; + indexStructureLossCost.ToString + &quot;:E&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range188" FillRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_363" SheetName="[sheetName]" SourceRange="[&quot;G&quot; + indexStructureLossCost.ToString + &quot;:G&quot; + indexStructureLossCost.ToString]" />
                                              <ui:ExcelAutoFillRange DisplayName="Auto Fill Range189" FillRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; + stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + (indexStructureLossCost + 2).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_364" SheetName="[sheetName]" SourceRange="[stFirstCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString + &quot;:&quot; +  stLastCol.Replace(&quot;6&quot;,&quot;&quot;) + indexStructureLossCost.ToString]" />
                                            </Sequence>
                                          </Sequence>
                                          <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_47" />
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_320">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                    </ui:InterruptibleWhile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_759">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTotal1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_152" Range="C40:E45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTotal2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_153" Range="H40:S45" SheetName="TOTAL">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <Sequence DisplayName="Sheet yyP Target" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_465">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="653,309" sap2010:WorkflowViewState.IdRef="If_61">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_408">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_101">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("yy") + "P Target"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_409">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_102">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.AddYears(-1).ToString("yy") + "P Target"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget1]" DisplayName="Read yyP Target Line 16" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_154" Range="E16:M16" SheetName="[sheetName]" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget2]" DisplayName="Read yyP Target Line 18" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_155" Range="E18:M18" SheetName="[sheetName]" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget3]" DisplayName="Read yyP Target Line 20,21" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_156" Range="E20:M21" SheetName="[sheetName]" />
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtSliderTarget4]" DisplayName="Read yyP Target Line 23" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_157" Range="E23:M23" SheetName="[sheetName]" />
                            </Sequence>
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_37" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_405">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Xử lí dữ liệu file TOTAL" DisplayName="File TOTAL" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="Sequence_101">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap2010:Annotation.AnnotationText="Nếu tháng hiện tại = 5 thì copy file hiện có thành file mới và xử lí dữ liệu" Condition="[DateTime.Now.Month = 5]" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="If_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="TOTAL" sap:VirtualizedContainerService.HintSize="487,933" sap2010:WorkflowViewState.IdRef="Sequence_178">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_Total.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="445,157" sap2010:WorkflowViewState.IdRef="CopyFile_11" Overwrite="True" Path="[pathFolder + &quot;Internal Failure Cost (Line wise)_Total_Template.xlsx&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CopyFile>
                    <bew:RenameSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Rename Work Sheet" FilePath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_Total.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="445,70" sap2010:WorkflowViewState.IdRef="RenameSheet_12" NewSheetName="[DateTime.Now.ToString(&quot;yy&quot;) + &quot;P Target&quot;]" SheetName="[DateTime.Now.AddYears(-1).ToString(&quot;yy&quot;) + &quot;P Target&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </bew:RenameSheet>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="445,534" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_20" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_Total.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,425" sap2010:WorkflowViewState.IdRef="Sequence_177">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Sheet TOTAL" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_457">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_103">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">TOTAL</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelWriteCell Cell="W18" DisplayName="Write Year Sheet TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1019" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDyedTotal1]" DisplayName="Write C40:E45 From Dyed to W22:Y27 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_245" SheetName="[sheetName]" StartingCell="W22:Y27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDyedTotal2]" DisplayName="Write H40:S45 From Dyed to AB22:AM27 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_246" SheetName="[sheetName]" StartingCell="AB22:AM27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTotal1]" DisplayName="Write C40:E45 From SLIDER to W31:Y36 TOTAL " sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_247" SheetName="[sheetName]" StartingCell="W31:Y36">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTotal2]" DisplayName="Write H40:S45 From SLIDER to AB31:AM36 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_248" SheetName="[sheetName]" StartingCell="AB31:AM36">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtMPVTotal1]" DisplayName="Write C40:E45 From SLIDER to W40:Y45 TOTAL " sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_249" SheetName="[sheetName]" StartingCell="W40:Y45">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtMPVTotal2]" DisplayName="Write H40:S45 From SLIDER to AB40:AM45 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_250" SheetName="[sheetName]" StartingCell="AB40:AM45">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                            </Sequence>
                            <Sequence DisplayName="Sheet yyP Target" sap:VirtualizedContainerService.HintSize="376,1422" sap2010:WorkflowViewState.IdRef="Sequence_176">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_104">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("yy") + "P Target"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA41" EntryMethodName="UnhideColumn" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_74" />
                              <ui:ExcelWriteCell Cell="E3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1020" SheetName="[sheetName]" Text="[DateTime.Now.AddYears(-1).ToString(&quot;yyyy&quot;) + &quot;A&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteCell Cell="H3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1021" SheetName="[sheetName]" Text="[currentYear + &quot;P&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteCell Cell="K3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1022" SheetName="[sheetName]" Text="[currentYear + &quot;A&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDyedTarget]" DisplayName="Write data yyP Target Form Sheet Dyed Material" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_123" SheetName="[sheetName]" StartingCell="E5:M15">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtMPVTarget]" DisplayName="Write data yyP Target Form Sheet MPV" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_124" SheetName="[sheetName]" StartingCell="E21:M28">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget1]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_125" SheetName="[sheetName]" StartingCell="E16:M16" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget2]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_126" SheetName="[sheetName]" StartingCell="E17:M17" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget3]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_127" SheetName="[sheetName]" StartingCell="E18:M19" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget4]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_128" SheetName="[sheetName]" StartingCell="E20:M20" />
                            </Sequence>
                            <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_13" />
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_15" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
              </If>
              <If sap2010:Annotation.AnnotationText="Tháng hiện tại &gt; 5 thì xử lí file có năm bằng năm hiện tại" Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="If_64">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,626" sap2010:WorkflowViewState.IdRef="Sequence_414">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,534" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_43" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.ToString(&quot;yyyy&quot;) + &quot;_Total.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,425" sap2010:WorkflowViewState.IdRef="Sequence_413">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Sheet TOTAL" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_458">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_105">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">TOTAL</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelWriteCell Cell="W18" DisplayName="Write Year Sheet TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2005" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDyedTotal1]" DisplayName="Write C40:E45 From Dyed to W22:Y27 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_191" SheetName="[sheetName]" StartingCell="W22:Y27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDyedTotal2]" DisplayName="Write H40:S45 From Dyed to AB22:AM27 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_192" SheetName="[sheetName]" StartingCell="AB22:AM27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtMPVTotal1]" DisplayName="Write C40:E45 From SLIDER to W40:Y45 TOTAL " sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_195" SheetName="[sheetName]" StartingCell="W40:Y45">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtMPVTotal2]" DisplayName="Write H40:S45 From SLIDER to AB40:AM45 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_196" SheetName="[sheetName]" StartingCell="AB40:AM45">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTotal1]" DisplayName="Write C40:E45 From SLIDER to W31:Y36 TOTAL " sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_193" SheetName="[sheetName]" StartingCell="W31:Y36">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTotal2]" DisplayName="Write H40:S45 From SLIDER to AB31:AM36 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_194" SheetName="[sheetName]" StartingCell="AB31:AM36">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                            </Sequence>
                            <Sequence DisplayName="Sheet yyP Target" sap:VirtualizedContainerService.HintSize="695,1291" sap2010:WorkflowViewState.IdRef="Sequence_461">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_76">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_462">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_111">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("yy") + "P Target"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_463">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_112">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.AddYears(-1).ToString("yy") + "P Target"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA42" EntryMethodName="UnhideColumn" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_75" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget1]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_199" SheetName="[sheetName]" StartingCell="E16:M16" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget2]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_200" SheetName="[sheetName]" StartingCell="E17:M17" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget3]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_201" SheetName="[sheetName]" StartingCell="E18:M19" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget4]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_202" SheetName="[sheetName]" StartingCell="E20:M20" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDyedTarget]" DisplayName="Write data yyP Target Form Sheet Dyed Material" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_197" SheetName="[sheetName]" StartingCell="E5:M15">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtMPVTarget]" DisplayName="Write data yyP Target Form Sheet MPV" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_198" SheetName="[sheetName]" StartingCell="E21:M28">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                            </Sequence>
                            <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_36" />
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_38" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_418">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <If sap2010:Annotation.AnnotationText="Tháng hiện tại &lt; 5 thì xử lí file với năm hiện tại -1" Condition="[DateTime.Now.Month &lt; 5]" sap:VirtualizedContainerService.HintSize="512,844" sap2010:WorkflowViewState.IdRef="If_65">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,626" sap2010:WorkflowViewState.IdRef="Sequence_419">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,534" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_45" InstanceCachePeriod="3000" Workbook="[wb]" WorkbookPath="[pathFolder + &quot;Internal Failure Cost (Line wise)_&quot; + DateTime.Now.AddYears(-1).ToString(&quot;yyyy&quot;) + &quot;_Total.xlsx&quot;]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,425" sap2010:WorkflowViewState.IdRef="Sequence_423">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Sheet TOTAL" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_459">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_108">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">TOTAL</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelWriteCell Cell="W18" DisplayName="Write Year Sheet TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2007" SheetName="[sheetName]" Text="[DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteCell>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDyedTotal1]" DisplayName="Write C40:E45 From Dyed to W22:Y27 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_227" SheetName="[sheetName]" StartingCell="W22:Y27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDyedTotal2]" DisplayName="Write H40:S45 From Dyed to AB22:AM27 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_228" SheetName="[sheetName]" StartingCell="AB22:AM27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTotal1]" DisplayName="Write C40:E45 From SLIDER to W31:Y36 TOTAL " sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_229" SheetName="[sheetName]" StartingCell="W31:Y36">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTotal2]" DisplayName="Write H40:S45 From SLIDER to AB31:AM36 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_230" SheetName="[sheetName]" StartingCell="AB31:AM36">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtMPVTotal1]" DisplayName="Write C40:E45 From SLIDER to W40:Y45 TOTAL " sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_231" SheetName="[sheetName]" StartingCell="W40:Y45">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtMPVTotal2]" DisplayName="Write H40:S45 From SLIDER to AB40:AM45 TOTAL" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_232" SheetName="[sheetName]" StartingCell="AB40:AM45">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                            </Sequence>
                            <Sequence DisplayName="Sheet yyP Target" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_460">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[DateTime.Now.Month &gt; 5]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_66">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_421">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_109">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("yy") + "P Target"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_422">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_110">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.AddYears(-1).ToString("yy") + "P Target"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="VBA\INTERNAL FAILURE COST.vb" DisplayName="Invoke VBA43" EntryMethodName="UnhideColumn" EntryMethodParameters="[{sheetName}]" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_76" />
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtDyedTarget]" DisplayName="Write data yyP Target Form Sheet Dyed Material" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_239" SheetName="[sheetName]" StartingCell="E5:M15">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtMPVTarget]" DisplayName="Write data yyP Target Form Sheet MPV" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_240" SheetName="[sheetName]" StartingCell="E21:M28">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget1]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_241" SheetName="[sheetName]" StartingCell="E16:M16">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget2]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_242" SheetName="[sheetName]" StartingCell="E17:M17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget3]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_243" SheetName="[sheetName]" StartingCell="E18:M19">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSliderTarget4]" DisplayName="Write data yyP Target Form Sheet Slider" sap:VirtualizedContainerService.HintSize="653,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_244" SheetName="[sheetName]" StartingCell="E20:M20">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelWriteRange>
                            </Sequence>
                            <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_38" />
                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_40" Workbook="[wb]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelCloseWorkbook>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_420">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">80,802</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">180,868 180,898 540,898 540,774</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Send Mail Result" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_321">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[checkLine1 = True]" sap:VirtualizedContainerService.HintSize="887,424" sap2010:WorkflowViewState.IdRef="If_106">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="421,266" sap2010:WorkflowViewState.IdRef="Sequence_611">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:OutputDataTable DataTable="[dtCheckLine1]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="379,22" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[stLine1]" />
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send mail line1" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">[RPA] SUCCESSFUL: INTERNAL FAILURE COST</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_Content" xml:space="preserve">["&lt;p&gt;Dear Thao san, &lt;/p&gt;" + "&lt;p&gt;&lt;/p&gt;" + 
"&lt;p&gt;Robot is successful, please check the result file in folder link below. &lt;/p&gt;" + "&lt;p&gt;&lt;/p&gt;" + 
"&lt;p&gt;Data has new Line1 as below: &lt;/p&gt;" + "&lt;p&gt;&lt;/p&gt;" + 
"&lt;p&gt;" + stLine1 + "&lt;/p&gt;" + "&lt;p&gt;&lt;/p&gt;" + 
"&lt;p&gt;" + pathFolder + "&lt;/p&gt;" + 
"&lt;p&gt;Thank you!&lt;/p&gt;"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">INTERNAL FAILURE COST</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach">[{}]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="421,204" sap2010:WorkflowViewState.IdRef="Sequence_612">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send mail" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">[RPA] SUCCESSFUL: INTERNAL FAILURE COST</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_Content" xml:space="preserve">["&lt;p&gt;Dear Thao san, &lt;/p&gt;" + "&lt;p&gt;&lt;/p&gt;" + 
"&lt;p&gt;Robot is successful, please check the result file in folder link below. &lt;/p&gt;" + "&lt;p&gt;&lt;/p&gt;" + 
"&lt;p&gt;" + pathFolder + "&lt;/p&gt;" + 
"&lt;p&gt;Thank you!&lt;/p&gt;"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">INTERNAL FAILURE COST</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach" />
                          <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </If.Else>
                </If>
                <Sequence DisplayName="Update Date Run" sap:VirtualizedContainerService.HintSize="887,66" sap2010:WorkflowViewState.IdRef="Sequence_373">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtDays]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="521,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" ProviderName="System.Data.Odbc" Sql="SELECT DAY FROM RPALIB.ROBOT_SCHEDULE_NT&#xA;Where NAME = 'INTERNAL FAILURE COST'" ConnectionString="Dsn=RPALIB;uid=robotnt;pwd=robotnt123">
                    <ui:ExecuteQuery.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:ExecuteQuery.Parameters>
                  </ui:ExecuteQuery>
                  <If sap2010:Annotation.AnnotationText="Update ngày chạy cho tháng sau nếu ngày hiện tại &gt; 7" Condition="[dtDays.Rows(0)(0).ToString.Equals(DateTime.Now.AddMonths(1).ToString(&quot;MM/07/yyyy&quot;))]" sap:VirtualizedContainerService.HintSize="521,393" sap2010:WorkflowViewState.IdRef="If_42">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_372">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="Query" xml:space="preserve">["UPDATE RPALIB.robot_schedule_nt " + 
" Set Day = '"+DateTime.Now.AddMonths(1).ToString("MM/07/yyyy")+"' " + 
" Where NAME = 'INTERNAL FAILURE COST' "]</InArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result" />
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">409,714</av:Point>
                      <av:Size x:Key="ShapeSize">262,60</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[EndMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">FALSE</InArgument>
                    </Assign.Value>
                  </Assign>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">260,127.5</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">360,193.5 360,233.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Setting SQL" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT * FROM RPALIB.LIBRARY_NT WHERE Name IN ('dirDownFile','PIC','ServerTemp') ORDER BY UPPER(NAME) ASC</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_library]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Lấy tài khoản Mail" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Query">SELECT * FROM RPALIB.LIBRARY_NT WHERE Name IN ('MailAddress_Outlook','MailPassword_Outlook','MailServer') ORDER BY UPPER(NAME) ASC</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result">[dt_Server]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,253" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Server]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(2)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Email]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(0)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_Password]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_Server.Rows(1)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_downloads]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(0)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Mail_PIC]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(1)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[Path_template]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[dt_library.Rows(2)(1).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:MultipleAssign>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">260,233.5</av:Point>
              <av:Size x:Key="ShapeSize">200,123</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">360,356.5 360,400.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Rút dữ liệu từ database và kiểm tra dữ liệu sau khi rút đã có hay chưa" DisplayName="Excute Data" sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_53">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[currentYear]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("yyyy")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_26">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pathFolder]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["H:\Robotics\Internal Failure Cost\"]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Rút dữ liệu bằng câu lệnh SQL" CommandType="Text" DataTable="[dt_SQL]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="653,119" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT RCMC,YYYYMM, PDPC as DPTCX1,LN1C, LN2C,CN1I09, WSHC, PQTY, PLEN, &quot; + &#xA;&quot;PAMT, RQTY, &quot; + &#xA;&quot;RLEN, RAMT, LQTY, LLEN, LAMT, YB1N, YB2N, &quot; + &#xA;&quot;PQTY, PLEN, PAMT, &quot; + &#xA;&quot;LQTY + RLDQ as LLQTY, &quot; + &#xA;&quot;LLEN + RLEW as LLLEN, &quot; + &#xA;&quot;LAMT + RLDC as LLAMT, &quot; + &#xA;&quot;MDDQ,PDEW,MDDC, &quot; + &#xA;&quot;CSPC,LAMT + RLDC + MDDC + CSPC as KEI, &quot; + &#xA;&quot;'' as LL, &quot; + &#xA;&quot;'' as NC, &quot; + &#xA;&quot;'' as ST, &quot; + &#xA;&quot;'' as TTL, &quot; + &#xA;&quot;YB1N,YB2N, '' as R,YB3N &quot; + &#xA;&quot;,RLDQ,RLEW,RLDC &quot; + &#xA;&quot;&quot; + &#xA;&quot;From &quot; + &#xA;&quot;(Select RCMCL9 RCMC, &quot; + &#xA;&quot;YMTGL9 YYYYMM,PDPCL9 PDPC, LN1CL9 LN1C, LN2CL9 LN2C,WSHCL9 WSHC, &quot; + &#xA;&quot;SUM(MPDQL9) PQTY, SUM(PIEWL9) PLEN,SUM(MPDCL9) PAMT, &quot; + &#xA;&quot;SUM(RPDQL9) RQTY, SUM(RIEWL9) RLEN,SUM(RPDCL9) RAMT, &quot; + &#xA;&quot;SUM(LPDQL9) LQTY, SUM(LIEWL9) LLEN,SUM(LPDCL9) LAMT, &quot; + &#xA;&quot;SUM(YB1NL9) YB1N, SUM(YB2NL9) YB2N,SUM(YB3NL9) YB3N, SUM(YB4NL9) YB4N, &quot; + &#xA;&quot;SUM(CSPCL9) CSPC, SUM(MDDQL9) MDDQ,SUM(PDEWL9) PDEW, &quot; + &#xA;&quot;SUM(MDDCL9) MDDC, SUM(RLDQL9) RLDQ,SUM(RLEWL9) RLEW, &quot; + &#xA;&quot;SUM(RLDCL9) RLDC &quot; + &#xA;&quot;&quot; + &#xA;&quot;FROM WAVEDLIB.FL900 &quot; + &#xA;&quot;WHERE YMTGL9 Between &quot;+DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;)+&quot; And &quot;+DateTime.Now.AddMonths(-1).ToString(&quot;yyyyMM&quot;)+&quot; &quot; + &#xA;&quot;GROUP BY RCMCL9,YMTGL9,PDPCL9, WSHCL9, LN1CL9, LN2CL9 &quot; + &#xA;&quot;ORDER BY RCMCL9,YMTGL9,PDPCL9, WSHCL9, LN1CL9, LN2CL9) A &quot; + &#xA;&quot;LEFT JOIN WAVEDLIB.C0900 ON DGRC09 = 'LN1C' AND DDTC09 = LN1C||LN2C||PDPC&quot;]" ConnectionString="Dsn=WAVEDLIB;uid=robotnt;pwd=robotnt123">
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExecuteQuery>
            <If Condition="[dt_SQL.Rows.Count = 0]" sap:VirtualizedContainerService.HintSize="653,309" sap2010:WorkflowViewState.IdRef="If_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_109">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[checkDataExist]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_110">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[checkDataExist]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID4" Condition="[checkDataExist]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1" True="{x:Reference __ReferenceID0}">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">320.5,400.5</av:Point>
                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                  <av:PointCollection x:Key="TrueConnector">320.5,444 180,444 180,506</av:PointCollection>
                  <av:PointCollection x:Key="FalseConnector">399.5,444 540,444 540,506</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.False>
                <FlowStep x:Name="__ReferenceID5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">440,506</av:Point>
                      <av:Size x:Key="ShapeSize">200,108</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">540,614 540,714</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence sap2010:Annotation.AnnotationText="Thông báo dữ liệu được rút chưa có" DisplayName="Data Is Empty" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_112">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Connect SQL.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="Query" xml:space="preserve">["UPDATE RPALIB.robot_schedule_nt " + 
" Set DAY = '" + DateTime.Now.AddDays(1).ToString("MM/dd/yyyy") + "' "+ 
" Where NAME = 'INTERNAL FAILURE COST' "]</InArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Result" />
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send mail" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Template\WORKFLOW - SEND MAIL FOR RPA TEAM.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="mail_Subject">[RPA] INTERNAL FAILURE COST - NO DATA</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="mail_Content">&lt;p&gt;No data &lt;/p&gt;</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="specialReceiver">INTERNAL FAILURE COST</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="mail_CC">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                        <InArgument x:TypeArguments="s:String[]" x:Key="mail_Attach" />
                        <InArgument x:TypeArguments="x:String" x:Key="mail_BCC">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="RobotName">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <FlowStep.Next>
                    <x:Reference>__ReferenceID1</x:Reference>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.False>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
  </Flowchart>
</Activity>